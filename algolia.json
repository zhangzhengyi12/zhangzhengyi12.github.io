[{"author":null,"categories":null,"content":null,"date":1684709800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomyTerm","lang":"en","lastmod":1684709800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/categories/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/","section":"categories","summary":"","tags":null,"title":"Categories","type":"categories","url":"/categories/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1684709800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":1684709800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/post/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/post/","section":"post","summary":"","tags":null,"title":"Posts","type":"post","url":"/post/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1684709800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomyTerm","lang":"en","lastmod":1684709800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/","section":"tags","summary":"","tags":null,"title":"Tags","type":"tags","url":"/tags/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1684709800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"home","lang":"en","lastmod":1684709800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/","section":"","summary":"","tags":null,"title":"Yinode Blog","type":"page","url":"/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1684709800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1684709800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/categories/%E5%93%B2%E5%AD%A6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/%E5%93%B2%E5%AD%A6/","section":"categories","summary":"","tags":null,"title":"哲学","type":"categories","url":"/categories/%E5%93%B2%E5%AD%A6/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1684709800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1684709800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E5%93%B2%E5%AD%A6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%93%B2%E5%AD%A6/","section":"tags","summary":"","tags":null,"title":"哲学","type":"tags","url":"/tags/%E5%93%B2%E5%AD%A6/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1684709800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1684709800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E6%91%84%E5%BD%B1/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%91%84%E5%BD%B1/","section":"tags","summary":"","tags":null,"title":"摄影","type":"tags","url":"/tags/%E6%91%84%E5%BD%B1/","weight":0,"wordcount":0},{"author":null,"categories":["哲学"],"content":"","date":1684709800,"description":"","dir":"post\\202305\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":7000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1684709800,"objectID":"179d31f9ff9735f21b568fcaf86e852d","permalink":"https://zhangzhengyi12.github.io/post/202305/%E6%91%84%E5%BD%B1-%E4%BD%9C%E4%B8%BA%E4%B8%96%E7%95%8C%E7%9A%84%E9%9A%90%E5%96%BB/","publishdate":"2023-05-21T22:56:40Z","readingtime":14,"relpermalink":"/post/202305/%E6%91%84%E5%BD%B1-%E4%BD%9C%E4%B8%BA%E4%B8%96%E7%95%8C%E7%9A%84%E9%9A%90%E5%96%BB/","section":"post","summary":"摄影：作为对世界的隐喻 已经是深秋 —— 但何必惋惜永恒的阳光，既然我们立誓要找到神圣之光，—— 远远离开那死于季节嬗替的人。 兰波 《地狱一季》 为何摄","tags":["哲学","艺术","摄影"],"title":"摄影 - 作为世界的隐喻","type":"post","url":"/post/202305/%E6%91%84%E5%BD%B1-%E4%BD%9C%E4%B8%BA%E4%B8%96%E7%95%8C%E7%9A%84%E9%9A%90%E5%96%BB/","weight":0,"wordcount":6978},{"author":null,"categories":null,"content":null,"date":1684709800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1684709800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E8%89%BA%E6%9C%AF/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%89%BA%E6%9C%AF/","section":"tags","summary":"","tags":null,"title":"艺术","type":"tags","url":"/tags/%E8%89%BA%E6%9C%AF/","weight":0,"wordcount":0},{"author":null,"categories":["哲学"],"content":"","date":1678402600,"description":"","dir":"post\\202303\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1678402600,"objectID":"7e64d55005b338e76c02d5ef1e67235a","permalink":"https://zhangzhengyi12.github.io/post/202303/%E6%8B%89%E5%BA%B7%E7%9A%84%E5%85%B3%E9%94%AE%E6%A6%82%E5%BF%B5%E9%98%90%E9%87%8A/","publishdate":"2023-03-09T22:56:40Z","readingtime":4,"relpermalink":"/post/202303/%E6%8B%89%E5%BA%B7%E7%9A%84%E5%85%B3%E9%94%AE%E6%A6%82%E5%BF%B5%E9%98%90%E9%87%8A/","section":"post","summary":"为什么必须有？拉康的关键概念阐释 简单谈谈，希望能从发生学的角度上串起这些概念的关联。其实说白了全部都是符号系统想要铺设自己，就不得不产生的一","tags":["哲学","意识形态","精神分析","拉康","齐泽克"],"title":"为什么没有不行? 拉康的关键概念阐释","type":"post","url":"/post/202303/%E6%8B%89%E5%BA%B7%E7%9A%84%E5%85%B3%E9%94%AE%E6%A6%82%E5%BF%B5%E9%98%90%E9%87%8A/","weight":0,"wordcount":1847},{"author":null,"categories":null,"content":null,"date":1678402600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1678402600,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E6%84%8F%E8%AF%86%E5%BD%A2%E6%80%81/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%84%8F%E8%AF%86%E5%BD%A2%E6%80%81/","section":"tags","summary":"","tags":null,"title":"意识形态","type":"tags","url":"/tags/%E6%84%8F%E8%AF%86%E5%BD%A2%E6%80%81/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1678402600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1678402600,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E6%8B%89%E5%BA%B7/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%8B%89%E5%BA%B7/","section":"tags","summary":"","tags":null,"title":"拉康","type":"tags","url":"/tags/%E6%8B%89%E5%BA%B7/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1678402600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1678402600,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E7%B2%BE%E7%A5%9E%E5%88%86%E6%9E%90/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%B2%BE%E7%A5%9E%E5%88%86%E6%9E%90/","section":"tags","summary":"","tags":null,"title":"精神分析","type":"tags","url":"/tags/%E7%B2%BE%E7%A5%9E%E5%88%86%E6%9E%90/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1678402600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1678402600,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E9%BD%90%E6%B3%BD%E5%85%8B/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%BD%90%E6%B3%BD%E5%85%8B/","section":"tags","summary":"","tags":null,"title":"齐泽克","type":"tags","url":"/tags/%E9%BD%90%E6%B3%BD%E5%85%8B/","weight":0,"wordcount":0},{"author":null,"categories":["哲学"],"content":"","date":1674169000,"description":"","dir":"post\\202301\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1674169000,"objectID":"dd737c362d7aa0bcffade3d1e6624047","permalink":"https://zhangzhengyi12.github.io/post/202301/%E8%B5%9B%E5%8D%9A%E6%9C%8B%E5%85%8B%E4%B8%8E%E7%8E%B0%E4%BB%A3%E6%80%A7%E5%8D%B1%E6%9C%BA%E5%88%B0%E5%BA%95%E4%BB%80%E4%B9%88%E6%98%AF%E8%B5%9B%E5%8D%9A%E6%9C%8B%E5%85%8B/","publishdate":"2023-01-19T22:56:40Z","readingtime":3,"relpermalink":"/post/202301/%E8%B5%9B%E5%8D%9A%E6%9C%8B%E5%85%8B%E4%B8%8E%E7%8E%B0%E4%BB%A3%E6%80%A7%E5%8D%B1%E6%9C%BA%E5%88%B0%E5%BA%95%E4%BB%80%E4%B9%88%E6%98%AF%E8%B5%9B%E5%8D%9A%E6%9C%8B%E5%85%8B/","section":"post","summary":"作为一个玩家，我在两年前通关了一款游戏作品《赛博朋克2077》但事实上我并没有从里面感受到过多的赛博朋克的感觉，或者说这部作品我认为完全不具","tags":["哲学","意识形态","精神分析","拉康","齐泽克"],"title":"赛博朋克与现代性危机: 到底什么是赛博朋克？","type":"post","url":"/post/202301/%E8%B5%9B%E5%8D%9A%E6%9C%8B%E5%85%8B%E4%B8%8E%E7%8E%B0%E4%BB%A3%E6%80%A7%E5%8D%B1%E6%9C%BA%E5%88%B0%E5%BA%95%E4%BB%80%E4%B9%88%E6%98%AF%E8%B5%9B%E5%8D%9A%E6%9C%8B%E5%85%8B/","weight":0,"wordcount":1443},{"author":null,"categories":["哲学"],"content":"","date":1673907040,"description":"","dir":"post\\202301\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1673907040,"objectID":"2343fbd43cad26b14e932f1a1019e83d","permalink":"https://zhangzhengyi12.github.io/post/202301/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E5%8F%AA%E8%83%BD%E5%90%AC%E5%88%B0%E4%BD%A0%E6%83%B3%E5%90%AC%E7%9A%84%E6%84%8F%E4%B9%89%E6%98%AF%E5%A6%82%E4%BD%95%E5%B1%95%E5%BC%80%E7%9A%84/","publishdate":"2023-01-16T22:10:40Z","readingtime":4,"relpermalink":"/post/202301/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E5%8F%AA%E8%83%BD%E5%90%AC%E5%88%B0%E4%BD%A0%E6%83%B3%E5%90%AC%E7%9A%84%E6%84%8F%E4%B9%89%E6%98%AF%E5%A6%82%E4%BD%95%E5%B1%95%E5%BC%80%E7%9A%84/","section":"post","summary":"语言的本质从来都不是用于交流功能的 - 拉康 知觉物已然被(语言)结构化了 - 索绪尔 今天我想试图讨论一个问题，当我们在试图倾听的时候，我们到底在倾听","tags":["哲学","意识形态","精神分析","拉康","齐泽克"],"title":"为什么你只能听到你想听的：意义是如何展开的？","type":"post","url":"/post/202301/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E5%8F%AA%E8%83%BD%E5%90%AC%E5%88%B0%E4%BD%A0%E6%83%B3%E5%90%AC%E7%9A%84%E6%84%8F%E4%B9%89%E6%98%AF%E5%A6%82%E4%BD%95%E5%B1%95%E5%BC%80%E7%9A%84/","weight":0,"wordcount":1524},{"author":null,"categories":["哲学"],"content":"","date":1673823400,"description":"","dir":"post\\202301\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1673823400,"objectID":"24421131acc2a3306d24cb0b934050f1","permalink":"https://zhangzhengyi12.github.io/post/202301/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BA%BA%E4%BC%9A%E7%89%A9%E5%8C%96/","publishdate":"2023-01-15T22:56:40Z","readingtime":1,"relpermalink":"/post/202301/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BA%BA%E4%BC%9A%E7%89%A9%E5%8C%96/","section":"post","summary":"我的名字”解决“了一个根本性的问题，我的自我同一性问题，我如何能够得到一个稳固的符号学位置？我如何是我所是？ 最初的主体的是匮乏的，或者说主体","tags":["哲学","意识形态","精神分析","拉康","齐泽克","黑格尔","法哲学原理"],"title":"为什么人会物化","type":"post","url":"/post/202301/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BA%BA%E4%BC%9A%E7%89%A9%E5%8C%96/","weight":0,"wordcount":252},{"author":null,"categories":null,"content":null,"date":1673823400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1673823400,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E6%B3%95%E5%93%B2%E5%AD%A6%E5%8E%9F%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%B3%95%E5%93%B2%E5%AD%A6%E5%8E%9F%E7%90%86/","section":"tags","summary":"","tags":null,"title":"法哲学原理","type":"tags","url":"/tags/%E6%B3%95%E5%93%B2%E5%AD%A6%E5%8E%9F%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1673823400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1673823400,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E9%BB%91%E6%A0%BC%E5%B0%94/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%BB%91%E6%A0%BC%E5%B0%94/","section":"tags","summary":"","tags":null,"title":"黑格尔","type":"tags","url":"/tags/%E9%BB%91%E6%A0%BC%E5%B0%94/","weight":0,"wordcount":0},{"author":null,"categories":["哲学"],"content":"","date":1672700200,"description":"","dir":"post\\202301\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1672700200,"objectID":"2171a1b31b3f72ae493520e69cfc9d5f","permalink":"https://zhangzhengyi12.github.io/post/202301/%E6%A1%8C%E9%A5%BA-%E6%B0%91%E6%97%8F%E4%B8%BB%E4%B9%89%E5%8F%99%E4%BA%8B%E7%9A%84%E5%BB%B6%E7%BB%AD/","publishdate":"2023-01-02T22:56:40Z","readingtime":2,"relpermalink":"/post/202301/%E6%A1%8C%E9%A5%BA-%E6%B0%91%E6%97%8F%E4%B8%BB%E4%B9%89%E5%8F%99%E4%BA%8B%E7%9A%84%E5%BB%B6%E7%BB%AD/","section":"post","summary":"巴迪欧曾经提出西方资本主义世界中的人们正在活在一个越来越体验为“没有世界”的社会空间 以反犹主义为例，他展开了一个世界：哦，我们本来的生活多么","tags":["哲学","意识形态","精神分析","拉康","齐泽克"],"title":"“桌饺” 民族主义叙事的延续","type":"post","url":"/post/202301/%E6%A1%8C%E9%A5%BA-%E6%B0%91%E6%97%8F%E4%B8%BB%E4%B9%89%E5%8F%99%E4%BA%8B%E7%9A%84%E5%BB%B6%E7%BB%AD/","weight":0,"wordcount":532},{"author":null,"categories":["哲学"],"content":"","date":1672700200,"description":"","dir":"post\\202301\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1672700200,"objectID":"927bc3b66add13f92b511f4a2fc86373","permalink":"https://zhangzhengyi12.github.io/post/202301/%E5%AF%B9%E4%B8%BA%E7%88%B1%E5%86%B2%E9%94%8B%E7%9A%84%E5%8B%87%E5%A3%AB%E7%9A%84%E6%84%8F%E8%AF%86%E5%BD%A2%E6%80%81%E5%88%86%E6%9E%90/","publishdate":"2023-01-02T22:56:40Z","readingtime":3,"relpermalink":"/post/202301/%E5%AF%B9%E4%B8%BA%E7%88%B1%E5%86%B2%E9%94%8B%E7%9A%84%E5%8B%87%E5%A3%AB%E7%9A%84%E6%84%8F%E8%AF%86%E5%BD%A2%E6%80%81%E5%88%86%E6%9E%90/","section":"post","summary":"“为爱冲锋的勇士”这一事件本身的真实(Real)维度并不在于现实性的维度(事情的真相，到底有没有破坏婚姻契约)，而在于人们对这个事件的观察之","tags":["哲学","意识形态","精神分析","拉康","齐泽克"],"title":"对【为爱冲锋的勇士】的意识形态分析","type":"post","url":"/post/202301/%E5%AF%B9%E4%B8%BA%E7%88%B1%E5%86%B2%E9%94%8B%E7%9A%84%E5%8B%87%E5%A3%AB%E7%9A%84%E6%84%8F%E8%AF%86%E5%BD%A2%E6%80%81%E5%88%86%E6%9E%90/","weight":0,"wordcount":1300},{"author":null,"categories":["哲学"],"content":"","date":1672613800,"description":"","dir":"post\\202301\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1672613800,"objectID":"d9b32040a67c198fc0ec00806486b154","permalink":"https://zhangzhengyi12.github.io/post/202301/%E4%B8%BB%E4%BD%93%E9%97%B4%E6%80%A7%E7%9A%84%E4%B8%8D%E5%8F%AF%E8%83%BD%E6%80%A7%E5%AD%A4%E7%8B%AC%E4%B8%8E%E5%B0%B4%E5%B0%AC/","publishdate":"2023-01-01T22:56:40Z","readingtime":1,"relpermalink":"/post/202301/%E4%B8%BB%E4%BD%93%E9%97%B4%E6%80%A7%E7%9A%84%E4%B8%8D%E5%8F%AF%E8%83%BD%E6%80%A7%E5%AD%A4%E7%8B%AC%E4%B8%8E%E5%B0%B4%E5%B0%AC/","section":"post","summary":"他者对我而言总是具有一种绝对的不可穿透性，一种绝对的异在与外部性，我能看见他者，触摸他者，但却永远无法真正的理解他者，所有的和谐共振不过是形","tags":["哲学","意识形态","精神分析","拉康","齐泽克"],"title":"主体间性的不可能性：孤独与尴尬","type":"post","url":"/post/202301/%E4%B8%BB%E4%BD%93%E9%97%B4%E6%80%A7%E7%9A%84%E4%B8%8D%E5%8F%AF%E8%83%BD%E6%80%A7%E5%AD%A4%E7%8B%AC%E4%B8%8E%E5%B0%B4%E5%B0%AC/","weight":0,"wordcount":378},{"author":null,"categories":["哲学"],"content":"","date":1650841000,"description":"","dir":"post\\202204\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1650841000,"objectID":"d5d4a24154be7f667085d79a3d848d89","permalink":"https://zhangzhengyi12.github.io/post/202204/%E7%96%AB%E6%83%85%E4%B8%8B%E7%9A%84%E4%B8%8A%E6%B5%B7%E6%9C%8B%E5%8F%8B%E5%9C%88-%E5%AF%B9%E8%B6%85%E6%88%91%E5%BE%8B%E4%BB%A4%E7%9A%84%E5%8F%8D%E5%8F%9B/","publishdate":"2022-04-24T22:56:40Z","readingtime":3,"relpermalink":"/post/202204/%E7%96%AB%E6%83%85%E4%B8%8B%E7%9A%84%E4%B8%8A%E6%B5%B7%E6%9C%8B%E5%8F%8B%E5%9C%88-%E5%AF%B9%E8%B6%85%E6%88%91%E5%BE%8B%E4%BB%A4%E7%9A%84%E5%8F%8D%E5%8F%9B/","section":"post","summary":"淫荡的超我 如果说弗洛伊德的超我代表的是传统父权制的禁忌，那么拉康的超我则是一种淫秽的超我，他在象征法则的失败的裂缝之中生存，这种超我意味着法","tags":["哲学","意识形态","精神分析","拉康","齐泽克"],"title":"疫情下的上海朋友圈 - 对超我律令的反叛","type":"post","url":"/post/202204/%E7%96%AB%E6%83%85%E4%B8%8B%E7%9A%84%E4%B8%8A%E6%B5%B7%E6%9C%8B%E5%8F%8B%E5%9C%88-%E5%AF%B9%E8%B6%85%E6%88%91%E5%BE%8B%E4%BB%A4%E7%9A%84%E5%8F%8D%E5%8F%9B/","weight":0,"wordcount":1165},{"author":null,"categories":null,"content":null,"date":1650495400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1650495400,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E5%BE%B7%E5%9B%BD%E8%A7%82%E5%BF%B5%E8%AE%BA/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%BE%B7%E5%9B%BD%E8%A7%82%E5%BF%B5%E8%AE%BA/","section":"tags","summary":"","tags":null,"title":"德国观念论","type":"tags","url":"/tags/%E5%BE%B7%E5%9B%BD%E8%A7%82%E5%BF%B5%E8%AE%BA/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1650495400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1650495400,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E9%80%BB%E8%BE%91%E5%AD%A6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%80%BB%E8%BE%91%E5%AD%A6/","section":"tags","summary":"","tags":null,"title":"逻辑学","type":"tags","url":"/tags/%E9%80%BB%E8%BE%91%E5%AD%A6/","weight":0,"wordcount":0},{"author":null,"categories":["哲学"],"content":"","date":1650495400,"description":"","dir":"post\\202204\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":17400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1650495400,"objectID":"186bb90209605fb43d9180b9eee5fb75","permalink":"https://zhangzhengyi12.github.io/post/202204/%E9%BB%91%E6%A0%BC%E5%B0%94-%E5%A4%A7%E9%80%BB%E8%BE%91-%E9%80%BB%E8%BE%91%E5%AD%A6-%E7%AC%94%E8%AE%B0/","publishdate":"2022-04-20T22:56:40Z","readingtime":35,"relpermalink":"/post/202204/%E9%BB%91%E6%A0%BC%E5%B0%94-%E5%A4%A7%E9%80%BB%E8%BE%91-%E9%80%BB%E8%BE%91%E5%AD%A6-%E7%AC%94%E8%AE%B0/","section":"post","summary":"大逻辑 黑格尔的逻辑学本质上是逻辑发生学，也是唯一真正意义上的逻辑学，因为黑格尔利用辩证法把这个世界的底层逻辑给你推演出来了，而不是现场给你个","tags":["哲学","德国观念论","黑格尔","逻辑学"],"title":"黑格尔 大逻辑 『逻辑学』 笔记","type":"post","url":"/post/202204/%E9%BB%91%E6%A0%BC%E5%B0%94-%E5%A4%A7%E9%80%BB%E8%BE%91-%E9%80%BB%E8%BE%91%E5%AD%A6-%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":17371},{"author":null,"categories":["精神分析"],"content":"","date":1638572200,"description":"","dir":"post\\202112\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1638572200,"objectID":"8ed3b359a83ac7f5999bfdafe4c1e562","permalink":"https://zhangzhengyi12.github.io/post/202112/%E6%8B%89%E5%BA%B7%E7%9A%84%E4%BC%A6%E7%90%86%E5%AD%A6/","publishdate":"2021-12-03T22:56:40Z","readingtime":2,"relpermalink":"/post/202112/%E6%8B%89%E5%BA%B7%E7%9A%84%E4%BC%A6%E7%90%86%E5%AD%A6/","section":"post","summary":"不要向欲望让步 首先这里的欲望就是指欲望的辩证法里面的欲望，也就是要求减去需要的一种剩余，是必须进行再生产的东西。 其次，所谓不要向欲望让步，其","tags":["哲学","精神分析","拉康"],"title":"拉康的伦理学","type":"post","url":"/post/202112/%E6%8B%89%E5%BA%B7%E7%9A%84%E4%BC%A6%E7%90%86%E5%AD%A6/","weight":0,"wordcount":705},{"author":null,"categories":null,"content":null,"date":1638572200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1638572200,"objectID":"","permalink":"https://zhangzhengyi12.github.io/categories/%E7%B2%BE%E7%A5%9E%E5%88%86%E6%9E%90/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/%E7%B2%BE%E7%A5%9E%E5%88%86%E6%9E%90/","section":"categories","summary":"","tags":null,"title":"精神分析","type":"categories","url":"/categories/%E7%B2%BE%E7%A5%9E%E5%88%86%E6%9E%90/","weight":0,"wordcount":0},{"author":null,"categories":["精神分析"],"content":"","date":1638485800,"description":"","dir":"post\\202112\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1638485800,"objectID":"439c9f55d2a31fc68c33a3067d89c56e","permalink":"https://zhangzhengyi12.github.io/post/202112/%E6%8B%89%E5%BA%B7%E7%9A%84-%E5%BE%81%E5%85%86symptome%E4%B8%8E%E5%BE%81%E5%80%99sinthome/","publishdate":"2021-12-02T22:56:40Z","readingtime":7,"relpermalink":"/post/202112/%E6%8B%89%E5%BA%B7%E7%9A%84-%E5%BE%81%E5%85%86symptome%E4%B8%8E%E5%BE%81%E5%80%99sinthome/","section":"post","summary":"G.在拉康-齐泽克理论中，“征候”一词同样难以理解。“征候”的原文是“sinthome”。拉康最早是在1975～1976年的讲座“le sin","tags":["哲学","精神分析","拉康"],"title":"拉康的 征兆(symptome)与征候(sinthome)","type":"post","url":"/post/202112/%E6%8B%89%E5%BA%B7%E7%9A%84-%E5%BE%81%E5%85%86symptome%E4%B8%8E%E5%BE%81%E5%80%99sinthome/","weight":0,"wordcount":3269},{"author":null,"categories":null,"content":null,"date":1638399400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1638399400,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E5%90%8C%E4%B8%80%E5%93%B2%E5%AD%A6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%90%8C%E4%B8%80%E5%93%B2%E5%AD%A6/","section":"tags","summary":"","tags":null,"title":"同一哲学","type":"tags","url":"/tags/%E5%90%8C%E4%B8%80%E5%93%B2%E5%AD%A6/","weight":0,"wordcount":0},{"author":null,"categories":["哲学"],"content":"","date":1638399400,"description":"","dir":"post\\202112\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":6800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1638399400,"objectID":"500fcc465860d277e11f1bd1957d9530","permalink":"https://zhangzhengyi12.github.io/post/202112/%E8%B0%A2%E6%9E%97-%E5%85%88%E9%AA%8C%E7%BB%B4%E5%BF%83%E8%AE%BA%E4%BD%93%E7%B3%BB-%E7%AC%94%E8%AE%B0/","publishdate":"2021-12-01T22:56:40Z","readingtime":14,"relpermalink":"/post/202112/%E8%B0%A2%E6%9E%97-%E5%85%88%E9%AA%8C%E7%BB%B4%E5%BF%83%E8%AE%BA%E4%BD%93%E7%B3%BB-%E7%AC%94%E8%AE%B0/","section":"post","summary":"前提 康德提出了物自体不可知的理论，当然也会造成一个二元对立的难题，所以后面的很多后康德哲学家的首要意图就是想消解这种二元对立，用一个统一的理","tags":["哲学","德国观念论","同一哲学"],"title":"谢林 『先验维心论体系』 笔记","type":"post","url":"/post/202112/%E8%B0%A2%E6%9E%97-%E5%85%88%E9%AA%8C%E7%BB%B4%E5%BF%83%E8%AE%BA%E4%BD%93%E7%B3%BB-%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":6703},{"author":null,"categories":null,"content":null,"date":1635375400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1635375400,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/javascript/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/javascript/","section":"tags","summary":"","tags":null,"title":"JavaScript","type":"tags","url":"/tags/javascript/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1635375400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1635375400,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/localstorage/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/localstorage/","section":"tags","summary":"","tags":null,"title":"LocalStorage","type":"tags","url":"/tags/localstorage/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1635375400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1635375400,"objectID":"","permalink":"https://zhangzhengyi12.github.io/categories/tech/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/tech/","section":"categories","summary":"","tags":null,"title":"Tech","type":"categories","url":"/categories/tech/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1635375400,"description":"","dir":"post\\202110\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1635375400,"objectID":"ac0671f8441e9fe66350151400ea0c22","permalink":"https://zhangzhengyi12.github.io/post/202110/%E6%A0%91%E5%BD%A2%E9%80%92%E5%BD%92%E7%BB%93%E6%9E%84%E8%BF%87%E6%BB%A4%E7%AE%97%E6%B3%95/","publishdate":"2021-10-27T22:56:40Z","readingtime":2,"relpermalink":"/post/202110/%E6%A0%91%E5%BD%A2%E9%80%92%E5%BD%92%E7%BB%93%E6%9E%84%E8%BF%87%E6%BB%A4%E7%AE%97%E6%B3%95/","section":"post","summary":"对某个树形结构进行过滤是一个比较常见的场景，但同时想要写出没有问题，并且简洁的代码也并非易事，本文将对这种算法进行简单的分析，并在最后给出代","tags":["JavaScript","LocalStorage"],"title":"树形递归结构过滤算法","type":"post","url":"/post/202110/%E6%A0%91%E5%BD%A2%E9%80%92%E5%BD%92%E7%BB%93%E6%9E%84%E8%BF%87%E6%BB%A4%E7%AE%97%E6%B3%95/","weight":0,"wordcount":893},{"author":null,"categories":["Tech"],"content":"","date":1634252200,"description":"","dir":"post\\202110\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1634252200,"objectID":"7882ac0d4812a7b789bc245ebc861ca9","permalink":"https://zhangzhengyi12.github.io/post/202110/js-localstorage-%E5%AF%BC%E5%87%BA%E5%AF%BC%E5%85%A5%E5%B7%A5%E5%85%B7/","publishdate":"2021-10-14T22:56:40Z","readingtime":1,"relpermalink":"/post/202110/js-localstorage-%E5%AF%BC%E5%87%BA%E5%AF%BC%E5%85%A5%E5%B7%A5%E5%85%B7/","section":"post","summary":"let genStorageSyncCode = () =\u0026gt; { const kvList = [] for (let i = 0; i \u0026lt; localStorage.length; i++) { const k = localStorage.key(i) const v = localStorage.getItem(k) kvList.push({ k, v }) } const code = `${kvList.map((item) =\u0026gt; { return `localStorage.setItem('${item.k}','${item.v}')` }).join(';')}` return code } console.log(genStorageSyncCode()) 直接导出代码，复制到另外一个页面控制台conso","tags":["JavaScript","LocalStorage"],"title":"JS LocalStorage 导出导入工具","type":"post","url":"/post/202110/js-localstorage-%E5%AF%BC%E5%87%BA%E5%AF%BC%E5%85%A5%E5%B7%A5%E5%85%B7/","weight":0,"wordcount":89},{"author":null,"categories":["哲学"],"content":"","date":1631746600,"description":"","dir":"post\\202109\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":9900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1631746600,"objectID":"cbe56bc66b57d3a4b4d72f8687178a75","permalink":"https://zhangzhengyi12.github.io/post/202109/%E8%83%A1%E5%A1%9E%E5%B0%94%E7%8E%B0%E8%B1%A1%E5%AD%A6%E7%AC%94%E8%AE%B0/","publishdate":"2021-09-15T22:56:40Z","readingtime":20,"relpermalink":"/post/202109/%E8%83%A1%E5%A1%9E%E5%B0%94%E7%8E%B0%E8%B1%A1%E5%AD%A6%E7%AC%94%E8%AE%B0/","section":"post","summary":"现象学介绍 根据胡塞尔的设想，现象学首先是对意识结构、对出现在各种意识行为中的现象的系统反思与研究。现象学可以明确的同笛卡尔式的分析方法加以区","tags":["哲学","现象学","德国观念论"],"title":"《胡塞尔现象学》笔记","type":"post","url":"/post/202109/%E8%83%A1%E5%A1%9E%E5%B0%94%E7%8E%B0%E8%B1%A1%E5%AD%A6%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":9811},{"author":null,"categories":null,"content":null,"date":1631746600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1631746600,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E7%8E%B0%E8%B1%A1%E5%AD%A6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%8E%B0%E8%B1%A1%E5%AD%A6/","section":"tags","summary":"","tags":null,"title":"现象学","type":"tags","url":"/tags/%E7%8E%B0%E8%B1%A1%E5%AD%A6/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1628031400,"description":"","dir":"post\\202108\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1628031400,"objectID":"387252f35c183d877c174ffd2670815e","permalink":"https://zhangzhengyi12.github.io/post/202108/h5%E8%B7%B3%E8%BD%AC%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AA%E4%BA%BA%E5%BE%AE%E4%BF%A1+%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E7%9A%84%E5%AE%9E%E7%8E%B0/","publishdate":"2021-08-03T22:56:40Z","readingtime":2,"relpermalink":"/post/202108/h5%E8%B7%B3%E8%BD%AC%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AA%E4%BA%BA%E5%BE%AE%E4%BF%A1+%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E7%9A%84%E5%AE%9E%E7%8E%B0/","section":"post","summary":"从H5打开小程序是一个非常常见的功能，但是实现起来也颇有一些坑，作为过来人给大家指指路。 我将分别讲述如何在个人微信以及企业微信中的自带浏览器","tags":["微信小程序","企业微信"],"title":"H5跳转微信小程序(个人微信+企业微信)的实现","type":"post","url":"/post/202108/h5%E8%B7%B3%E8%BD%AC%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AA%E4%BA%BA%E5%BE%AE%E4%BF%A1+%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E7%9A%84%E5%AE%9E%E7%8E%B0/","weight":0,"wordcount":948},{"author":null,"categories":null,"content":null,"date":1628031400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1628031400,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1/","section":"tags","summary":"","tags":null,"title":"企业微信","type":"tags","url":"/tags/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1628031400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1628031400,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/","section":"tags","summary":"","tags":null,"title":"微信小程序","type":"tags","url":"/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1626732354,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1626732354,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/eslint/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/eslint/","section":"tags","summary":"","tags":null,"title":"ESLint","type":"tags","url":"/tags/eslint/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1626732354,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1626732354,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/prettier/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/prettier/","section":"tags","summary":"","tags":null,"title":"Prettier","type":"tags","url":"/tags/prettier/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1626732354,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1626732354,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/react/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/react/","section":"tags","summary":"","tags":null,"title":"React","type":"tags","url":"/tags/react/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1626732354,"description":"","dir":"post\\202107\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1626732354,"objectID":"3a01c668d4ab2534eed70b3145a645b5","permalink":"https://zhangzhengyi12.github.io/post/202107/react+typescript+prettier+eslint-%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/","publishdate":"2021-07-19T22:05:54Z","readingtime":1,"relpermalink":"/post/202107/react+typescript+prettier+eslint-%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/","section":"post","summary":"React项目初始化 TypeScript + ESLint + Prettier自动格式化 新建项目 需要提前安装create-react-app命令，不做赘述 npx create-react-app your-app-name --template typescript cd your-app-name 添加并","tags":["React","TypeScript","Prettier","ESLint"],"title":"React+Typescript+Prettier+ESLint 项目初始化","type":"post","url":"/post/202107/react+typescript+prettier+eslint-%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/","weight":0,"wordcount":447},{"author":null,"categories":null,"content":null,"date":1626732354,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1626732354,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/typescript/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/typescript/","section":"tags","summary":"","tags":null,"title":"TypeScript","type":"tags","url":"/tags/typescript/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1620252354,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1620252354,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E6%9C%80%E7%9F%AD%E6%91%98%E8%A6%81/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E7%9F%AD%E6%91%98%E8%A6%81/","section":"tags","summary":"","tags":null,"title":"最短摘要","type":"tags","url":"/tags/%E6%9C%80%E7%9F%AD%E6%91%98%E8%A6%81/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1620252354,"description":"","dir":"post\\202105\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1620252354,"objectID":"6334e6b6647894624cff53fc2131cf6f","permalink":"https://zhangzhengyi12.github.io/post/202105/%E6%9C%80%E7%9F%AD%E6%91%98%E8%A6%81%E7%9A%84%E7%94%9F%E6%88%90/","publishdate":"2021-05-05T22:05:54Z","readingtime":2,"relpermalink":"/post/202105/%E6%9C%80%E7%9F%AD%E6%91%98%E8%A6%81%E7%9A%84%E7%94%9F%E6%88%90/","section":"post","summary":"最近好久没写文章了，大量的时间都花在了刷LeetCode上，最近开始重拾博客。 最短摘要 假设我们拥有一个分词数组W = [w1,w2,w3,w4,w5\u0026hellip;] 并拥有一个query数组","tags":["算法","最短摘要"],"title":"最短摘要的生成","type":"post","url":"/post/202105/%E6%9C%80%E7%9F%AD%E6%91%98%E8%A6%81%E7%9A%84%E7%94%9F%E6%88%90/","weight":0,"wordcount":992},{"author":null,"categories":null,"content":null,"date":1620252354,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1620252354,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E7%AE%97%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%AE%97%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"算法","type":"tags","url":"/tags/%E7%AE%97%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1600380030,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1600380030,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/mtsp-%E5%A4%9A%E6%97%85%E8%A1%8C%E5%95%86%E9%97%AE%E9%A2%98/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mtsp-%E5%A4%9A%E6%97%85%E8%A1%8C%E5%95%86%E9%97%AE%E9%A2%98/","section":"tags","summary":"","tags":null,"title":"MTSP 多旅行商问题","type":"tags","url":"/tags/mtsp-%E5%A4%9A%E6%97%85%E8%A1%8C%E5%95%86%E9%97%AE%E9%A2%98/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1600380030,"description":"","dir":"post\\202009\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1600380030,"objectID":"46277fb5c1b0b9e3c747fb71e8096637","permalink":"https://zhangzhengyi12.github.io/post/202009/%E7%94%A8%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95ga%E6%9D%A5%E8%A7%A3%E5%86%B3-mtsp%E5%A4%9A%E6%97%85%E8%A1%8C%E5%95%86%E9%97%AE%E9%A2%98/","publishdate":"2020-09-17T22:00:30Z","readingtime":8,"relpermalink":"/post/202009/%E7%94%A8%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95ga%E6%9D%A5%E8%A7%A3%E5%86%B3-mtsp%E5%A4%9A%E6%97%85%E8%A1%8C%E5%95%86%E9%97%AE%E9%A2%98/","section":"post","summary":"引言 本文章会侧重实际运用，给出对于 MTSP 和 TSP 问题的一个 GA 算法，并具有较高可用性的方案。并在最后给出一个可以跑在Web Browser 上的可视化 Demo。 并且会","tags":["算法","遗传算法","MTSP 多旅行商问题"],"title":"用遗传算法(GA)来解决 MTSP(多旅行商问题)","type":"post","url":"/post/202009/%E7%94%A8%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95ga%E6%9D%A5%E8%A7%A3%E5%86%B3-mtsp%E5%A4%9A%E6%97%85%E8%A1%8C%E5%95%86%E9%97%AE%E9%A2%98/","weight":0,"wordcount":3647},{"author":null,"categories":null,"content":null,"date":1600380030,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1600380030,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"遗传算法","type":"tags","url":"/tags/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1599170430,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1599170430,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E5%88%86%E6%B2%BB%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%88%86%E6%B2%BB%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"分治法","type":"tags","url":"/tags/%E5%88%86%E6%B2%BB%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1599170430,"description":"","dir":"post\\202009\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1599170430,"objectID":"f8530332340e2889f0c5184b2936e642","permalink":"https://zhangzhengyi12.github.io/post/202009/%E5%A6%82%E4%BD%95%E5%9C%A8%E4%BA%8C%E7%BB%B4%E5%B9%B3%E9%9D%A2%E4%B8%8A%E5%AF%BB%E6%89%BE%E6%9C%80%E8%BF%91%E7%9A%84%E4%B8%A4%E4%B8%AA%E7%82%B9%E5%88%86%E6%B2%BB%E6%B3%95/","publishdate":"2020-09-03T22:00:30Z","readingtime":4,"relpermalink":"/post/202009/%E5%A6%82%E4%BD%95%E5%9C%A8%E4%BA%8C%E7%BB%B4%E5%B9%B3%E9%9D%A2%E4%B8%8A%E5%AF%BB%E6%89%BE%E6%9C%80%E8%BF%91%E7%9A%84%E4%B8%A4%E4%B8%AA%E7%82%B9%E5%88%86%E6%B2%BB%E6%B3%95/","section":"post","summary":"给定一组在二维空间中的点(数量为 N)，如何快速找出最近的两点? 显然，可以通过遍历所有点之间的距离，然后直接选出这些距离之中的最小值，但是，这","tags":["算法","分治法"],"title":"如何在二维平面上寻找最近的两个点(分治法)","type":"post","url":"/post/202009/%E5%A6%82%E4%BD%95%E5%9C%A8%E4%BA%8C%E7%BB%B4%E5%B9%B3%E9%9D%A2%E4%B8%8A%E5%AF%BB%E6%89%BE%E6%9C%80%E8%BF%91%E7%9A%84%E4%B8%A4%E4%B8%AA%E7%82%B9%E5%88%86%E6%B2%BB%E6%B3%95/","weight":0,"wordcount":1794},{"author":null,"categories":null,"content":null,"date":1597442430,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1597442430,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E7%BA%A2%E9%BB%91%E6%A0%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%BA%A2%E9%BB%91%E6%A0%91/","section":"tags","summary":"","tags":null,"title":"红黑树","type":"tags","url":"/tags/%E7%BA%A2%E9%BB%91%E6%A0%91/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"红黑树是一种非常高效的数据结构","date":1597442430,"description":"红黑树是一种非常高效的数据结构","dir":"post\\202008\\","excerpt_html":"红黑树是一种非常高效的数据结构","excerpt_text":"红黑树是一种非常高效的数据结构","expirydate":-62135596800,"fuzzywordcount":3100,"html":"红黑树是一种非常高效的数据结构","keywords":null,"kind":"page","lang":"en","lastmod":1597442430,"objectID":"2dda5482611ac87bd46048c997664620","permalink":"https://zhangzhengyi12.github.io/post/202008/%E7%BA%A2%E9%BB%91%E6%A0%91%E7%9A%84%E5%AE%9E%E7%8E%B0/","publishdate":"2020-08-14T22:00:30Z","readingtime":7,"relpermalink":"/post/202008/%E7%BA%A2%E9%BB%91%E6%A0%91%E7%9A%84%E5%AE%9E%E7%8E%B0/","section":"post","summary":"手写了一下，用 canvas 简单可视化了一下，方便理解其结构. 代码实现 后面有空再重新树立编写一些更加易于理解的一步步来的文章把，先把代码贴上去，红黑树的","tags":["JavaScript","算法","红黑树"],"title":"红黑树的实现","type":"post","url":"/post/202008/%E7%BA%A2%E9%BB%91%E6%A0%91%E7%9A%84%E5%AE%9E%E7%8E%B0/","weight":0,"wordcount":3090},{"author":null,"categories":null,"content":null,"date":1594908136,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1594908136,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/element-ui/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/element-ui/","section":"tags","summary":"","tags":null,"title":"Element-UI","type":"tags","url":"/tags/element-ui/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"支持用户自定义列宽，排序，显隐并长期记忆化","date":1594908136,"description":"支持用户自定义列宽，排序，显隐并长期记忆化","dir":"post\\202007\\","excerpt_html":"支持用户自定义列宽，排序，显隐并长期记忆化","excerpt_text":"支持用户自定义列宽，排序，显隐并长期记忆化","expirydate":-62135596800,"fuzzywordcount":1700,"html":"支持用户自定义列宽，排序，显隐并长期记忆化","keywords":null,"kind":"page","lang":"en","lastmod":1594908136,"objectID":"5fa6da57865a79d73871e345218d15dc","permalink":"https://zhangzhengyi12.github.io/post/202007/element-ui-table%E7%BB%84%E4%BB%B6%E7%94%A8%E6%88%B7%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E6%89%A9%E5%B1%95%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB/","publishdate":"2020-07-16T14:02:16Z","readingtime":4,"relpermalink":"/post/202007/element-ui-table%E7%BB%84%E4%BB%B6%E7%94%A8%E6%88%B7%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E6%89%A9%E5%B1%95%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB/","section":"post","summary":"起因 最近有接受到这样的一个需求 用户够能自定义表格列的 宽度/排序/显隐 用户的设置能够持久化(保存到后端) 目前该项目主要由 Vue.js 2.0 + Element-UI 构成，在经过一","tags":["Vue.js","Element-UI"],"title":"Element-UI Table组件用户自定义配置方案分享-自定义列宽、排序、显隐","type":"post","url":"/post/202007/element-ui-table%E7%BB%84%E4%BB%B6%E7%94%A8%E6%88%B7%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E6%89%A9%E5%B1%95%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB/","weight":0,"wordcount":1666},{"author":null,"categories":null,"content":null,"date":1594908136,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1594908136,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/vue.js/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/vue.js/","section":"tags","summary":"","tags":null,"title":"Vue.js","type":"tags","url":"/tags/vue.js/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1594591230,"description":"","dir":"post\\202007\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594591230,"objectID":"22676f0168e1c3b81f3e88a625be3b59","permalink":"https://zhangzhengyi12.github.io/post/202007/javascript-%E4%B8%AD-console.log-%E5%87%BD%E6%95%B0%E5%88%B0%E5%BA%95%E6%9C%89%E5%A4%9A%E6%85%A2/","publishdate":"2020-07-12T22:00:30Z","readingtime":2,"relpermalink":"/post/202007/javascript-%E4%B8%AD-console.log-%E5%87%BD%E6%95%B0%E5%88%B0%E5%BA%95%E6%9C%89%E5%A4%9A%E6%85%A2/","section":"post","summary":"最近在写JS的时候碰到一个很奇怪的现象，起初是碰到一个树遍历的问题，我封装了一个迭代器用于遍历，并希望能够实际的统计一下性能，使用了cons","tags":["JavaScript"],"title":"JavaScript中 Console.log 函数到底有多慢","type":"post","url":"/post/202007/javascript-%E4%B8%AD-console.log-%E5%87%BD%E6%95%B0%E5%88%B0%E5%BA%95%E6%9C%89%E5%A4%9A%E6%85%A2/","weight":0,"wordcount":838},{"author":null,"categories":null,"content":null,"date":1594591230,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1594591230,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E6%B8%90%E8%BF%9B%E7%AC%A6%E5%8F%B7/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%B8%90%E8%BF%9B%E7%AC%A6%E5%8F%B7/","section":"tags","summary":"","tags":null,"title":"渐进符号","type":"tags","url":"/tags/%E6%B8%90%E8%BF%9B%E7%AC%A6%E5%8F%B7/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1594591230,"description":"","dir":"post\\202007\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594591230,"objectID":"268b49262a1edd7ba270a5bc4ceb1c8f","permalink":"https://zhangzhengyi12.github.io/post/202007/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E6%B8%90%E8%BF%9B%E7%AC%A6%E5%8F%B7/","publishdate":"2020-07-12T22:00:30Z","readingtime":1,"relpermalink":"/post/202007/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E6%B8%90%E8%BF%9B%E7%AC%A6%E5%8F%B7/","section":"post","summary":"最近在重新复习算法，所以翻了下算法导论，查阅了点资料，记录下渐进符号。 O 读作 大 O 拉丁字母 O 描述一个函数数量级的渐近上界 O(g(n)) = f(n) , 存在正常量 c 和","tags":["算法","渐进符号"],"title":"算法分析中的常见渐进符号","type":"post","url":"/post/202007/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E6%B8%90%E8%BF%9B%E7%AC%A6%E5%8F%B7/","weight":0,"wordcount":317},{"author":null,"categories":null,"content":null,"date":1588805800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1588805800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/pi/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pi/","section":"tags","summary":"","tags":null,"title":"Pi","type":"tags","url":"/tags/pi/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1588805800,"description":"","dir":"post\\202004\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1588805800,"objectID":"73b4fd56b1e9a6daa9362e3190cac9ab","permalink":"https://zhangzhengyi12.github.io/post/202004/%E8%AE%A1%E7%AE%97%CF%80-%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B+%E7%A2%B0%E6%92%9E%E8%AE%A1%E6%95%B0+%E5%B7%B4%E5%A1%9E%E5%B0%94/","publishdate":"2020-05-06T22:56:40Z","readingtime":1,"relpermalink":"/post/202004/%E8%AE%A1%E7%AE%97%CF%80-%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B+%E7%A2%B0%E6%92%9E%E8%AE%A1%E6%95%B0+%E5%B7%B4%E5%A1%9E%E5%B0%94/","section":"post","summary":"仅供娱乐 蒙特卡洛方法 基于统计的方法 发射大量的随机点，通过这个比值就能换算出π的值 至于判断点是否在圆内用简单的通项公式 sqrt((a - x) ^ 2 + (b - y) ^ 2) \u0026lt;=","tags":["算法","Pi"],"title":"计算π [蒙特卡洛+碰撞计数+巴塞尔]","type":"post","url":"/post/202004/%E8%AE%A1%E7%AE%97%CF%80-%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B+%E7%A2%B0%E6%92%9E%E8%AE%A1%E6%95%B0+%E5%B7%B4%E5%A1%9E%E5%B0%94/","weight":0,"wordcount":434},{"author":null,"categories":null,"content":null,"date":1587942114,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1587942114,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/","section":"tags","summary":"","tags":null,"title":"离散数学","type":"tags","url":"/tags/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1587942114,"description":"","dir":"post\\202004\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1587942114,"objectID":"ca81310236ba5fecee0d1c69134bd1cc","permalink":"https://zhangzhengyi12.github.io/post/202004/%E8%AE%A1%E7%AE%97%E4%BC%A0%E9%80%92%E9%97%AD%E5%8C%85/","publishdate":"2020-04-26T23:01:54Z","readingtime":3,"relpermalink":"/post/202004/%E8%AE%A1%E7%AE%97%E4%BC%A0%E9%80%92%E9%97%AD%E5%8C%85/","section":"post","summary":"传递闭包 传递闭包、即在数学中，在集合 X 上的二元关系 R 的传递闭包是包含 R 的 X 上的最小的传递关系。 例如，如果 X 是(生或死)人的集合而 R 是关系“为","tags":["算法","离散数学"],"title":"计算传递闭包 [离散数学]","type":"post","url":"/post/202004/%E8%AE%A1%E7%AE%97%E4%BC%A0%E9%80%92%E9%97%AD%E5%8C%85/","weight":0,"wordcount":1440},{"author":null,"categories":["Tech"],"content":"","date":1584899173,"description":"","dir":"post\\202003\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1584899173,"objectID":"d9be0125a79a2c58da9bd763f5e57365","permalink":"https://zhangzhengyi12.github.io/post/202003/%E7%94%9F%E6%88%90%E6%8E%92%E5%88%97%E4%B8%8E%E7%BB%84%E5%90%88-%E5%AD%97%E5%85%B8%E8%BF%AD%E4%BB%A3%E6%B3%95-%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/","publishdate":"2020-03-22T17:46:13Z","readingtime":6,"relpermalink":"/post/202003/%E7%94%9F%E6%88%90%E6%8E%92%E5%88%97%E4%B8%8E%E7%BB%84%E5%90%88-%E5%AD%97%E5%85%B8%E8%BF%AD%E4%BB%A3%E6%B3%95-%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/","section":"post","summary":"前置工具代码 一些前置的工具 下面代码不会再给出 // 求N的阶乘 const factorial = (() =\u0026gt; { var f = [1, 1] var i = 2 return function factorial(n) { if (typeof f[n] != 'undefined') return f[n] var result = f[i - 1] for (; i \u0026lt;= n; i++) f[i] = result =","tags":["算法","离散数学"],"title":"生成排列与组合 [离散数学]","type":"post","url":"/post/202003/%E7%94%9F%E6%88%90%E6%8E%92%E5%88%97%E4%B8%8E%E7%BB%84%E5%90%88-%E5%AD%97%E5%85%B8%E8%BF%AD%E4%BB%A3%E6%B3%95-%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/","weight":0,"wordcount":2671},{"author":null,"categories":["Tech"],"content":"","date":1581443173,"description":"","dir":"post\\202002\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1000,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1581443173,"objectID":"1ce6d4f29d5dcbdcbaf255b69f315779","permalink":"https://zhangzhengyi12.github.io/post/202002/a-star-%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95-%E5%B8%B8%E7%94%A8%E4%BA%8E%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84%E6%9F%A5%E6%89%BE/","publishdate":"2020-02-11T17:46:13Z","readingtime":2,"relpermalink":"/post/202002/a-star-%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95-%E5%B8%B8%E7%94%A8%E4%BA%8E%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84%E6%9F%A5%E6%89%BE/","section":"post","summary":"非常酷的一个启发式搜索算法，整体类似于dij最短路径算法，只不过加入了预估距离的概念，当然由于博客数据丢失，之前的博客内容没了，不过还好代码","tags":["算法"],"title":"A Star 搜索算法 常用于游戏中的路径查找","type":"post","url":"/post/202002/a-star-%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95-%E5%B8%B8%E7%94%A8%E4%BA%8E%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84%E6%9F%A5%E6%89%BE/","weight":0,"wordcount":905},{"author":null,"categories":["Tech"],"content":"","date":1580579173,"description":"","dir":"post\\202002\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1580579173,"objectID":"272f74065452676907371bc2f04fa52e","permalink":"https://zhangzhengyi12.github.io/post/202002/%E8%BF%9E%E7%9C%8B%E4%B8%AD%E7%9A%84%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/","publishdate":"2020-02-01T17:46:13Z","readingtime":4,"relpermalink":"/post/202002/%E8%BF%9E%E7%9C%8B%E4%B8%AD%E7%9A%84%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/","section":"post","summary":"由于博客数据丢失，只剩下了代码。。。。。之前写的MD都没了。。 const gameConfig = { maxLevel: 10// 最大搜索层级 2代表 只搜索经过两次转角能到达的点 } // 简易队列系统 配合","tags":["算法"],"title":"连连看中的广度优先搜索算法","type":"post","url":"/post/202002/%E8%BF%9E%E7%9C%8B%E4%B8%AD%E7%9A%84%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/","weight":0,"wordcount":1836},{"author":null,"categories":["Tech"],"content":"分享原生小程序关于全局弹窗的实现思路","date":1573829658,"description":"分享原生小程序关于全局弹窗的实现思路","dir":"post\\201911\\","excerpt_html":"分享原生小程序关于全局弹窗的实现思路","excerpt_text":"分享原生小程序关于全局弹窗的实现思路","expirydate":-62135596800,"fuzzywordcount":1100,"html":"分享原生小程序关于全局弹窗的实现思路","keywords":null,"kind":"page","lang":"en","lastmod":1573829658,"objectID":"cd2079664c32adeaf2ec2f8009db89e6","permalink":"https://zhangzhengyi12.github.io/post/201911/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A8%E5%B1%80%E4%BB%BB%E5%8A%A1%E5%BC%B9%E7%AA%97%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB%E5%BE%AE%E4%BE%B5%E5%85%A5%E5%BC%8Ftemplaterequest%E6%8B%A6%E6%88%AA%E5%99%A8/","publishdate":"2019-11-15T14:54:18Z","readingtime":3,"relpermalink":"/post/201911/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A8%E5%B1%80%E4%BB%BB%E5%8A%A1%E5%BC%B9%E7%AA%97%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB%E5%BE%AE%E4%BE%B5%E5%85%A5%E5%BC%8Ftemplaterequest%E6%8B%A6%E6%88%AA%E5%99%A8/","section":"post","summary":"\u003cp\u003e最近在工作中需要在微信小程序中加入一套任务系统，某些操作将会触发一个任务弹窗\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://yinodimage.oss-cn-hangzhou.aliyuncs.com/20191115140503.png\" alt=\"\" /\u003e\u003c/p\u003e\n\n\u003cp\u003e整个子任务会比较分散，如果使用小程序的自定义组件系统，可能会导致过于过于偏离 \u003ccode\u003eDRY 原则\u003c/code\u003e 的代码，在经过一些调研以及和后端的协调之后，最终决定使用一套基于 \u003ccode\u003eRequest 中间件拦截\u003c/code\u003e + \u003ccode\u003etemplate WXML 模板\u003c/code\u003e 共同组成的方案，由于微信小程序的限制(无法直接操作 DOM) ，所以不可避免的会拥有轻微的侵入性，不过好在这个代价应该还算是可以接受的。\u003c/p\u003e","tags":["微信小程序"],"title":"微信小程序 全局任务弹窗方案分享(微侵入式) Template + Request 拦截器","type":"post","url":"/post/201911/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A8%E5%B1%80%E4%BB%BB%E5%8A%A1%E5%BC%B9%E7%AA%97%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB%E5%BE%AE%E4%BE%B5%E5%85%A5%E5%BC%8Ftemplaterequest%E6%8B%A6%E6%88%AA%E5%99%A8/","weight":0,"wordcount":1007},{"author":null,"categories":null,"content":null,"date":1573321573,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1573321573,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/canvas/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/canvas/","section":"tags","summary":"","tags":null,"title":"Canvas","type":"tags","url":"/tags/canvas/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"最近小程序搞的比较多，最烦人的就是这个海报生成，踩雷不少，跟大家分享一点经验，也许可以解决你的问题","date":1573321573,"description":"最近小程序搞的比较多，最烦人的就是这个海报生成，踩雷不少，跟大家分享一点经验，也许可以解决你的问题","dir":"post\\201911\\","excerpt_html":"最近小程序搞的比较多，最烦人的就是这个海报生成，踩雷不少，跟大家分享一点经验，也许可以解决你的问题","excerpt_text":"最近小程序搞的比较多，最烦人的就是这个海报生成，踩雷不少，跟大家分享一点经验，也许可以解决你的问题","expirydate":-62135596800,"fuzzywordcount":800,"html":"最近小程序搞的比较多，最烦人的就是这个海报生成，踩雷不少，跟大家分享一点经验，也许可以解决你的问题","keywords":null,"kind":"page","lang":"en","lastmod":1573321573,"objectID":"b53eb0dcce359705e37ac73845662da5","permalink":"https://zhangzhengyi12.github.io/post/201911/%E5%B0%8F%E7%A8%8B%E5%BA%8Fcanvas%E7%BB%98%E5%9B%BE%E7%94%9F%E6%88%90%E6%B5%B7%E6%8A%A5%E6%8E%92%E9%9B%B7%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/","publishdate":"2019-11-09T17:46:13Z","readingtime":2,"relpermalink":"/post/201911/%E5%B0%8F%E7%A8%8B%E5%BA%8Fcanvas%E7%BB%98%E5%9B%BE%E7%94%9F%E6%88%90%E6%B5%B7%E6%8A%A5%E6%8E%92%E9%9B%B7%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/","section":"post","summary":"前言 最近小程序搞的比较多，最烦人的就是这个海报生成，踩雷不少，跟大家分享一点经验，也许可以解决你的问题 绘制完成后导出 发现内容缺失 这个第一是 最","tags":["微信小程序","Canvas"],"title":"小程序利用Canvas绘图生成海报排雷经验分享","type":"post","url":"/post/201911/%E5%B0%8F%E7%A8%8B%E5%BA%8Fcanvas%E7%BB%98%E5%9B%BE%E7%94%9F%E6%88%90%E6%B5%B7%E6%8A%A5%E6%8E%92%E9%9B%B7%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/","weight":0,"wordcount":772},{"author":null,"categories":["Tech"],"content":"计算机中的各种码 究竟有着怎样的关系呢","date":1573320727,"description":"计算机中的各种码 究竟有着怎样的关系呢","dir":"post\\201911\\","excerpt_html":"计算机中的各种码 究竟有着怎样的关系呢","excerpt_text":"计算机中的各种码 究竟有着怎样的关系呢","expirydate":-62135596800,"fuzzywordcount":3900,"html":"计算机中的各种码 究竟有着怎样的关系呢","keywords":null,"kind":"page","lang":"en","lastmod":1573320727,"objectID":"9e9e5210d8ec23f3b308d800bf296af0","permalink":"https://zhangzhengyi12.github.io/post/201911/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E5%8E%9F%E7%A0%81%E5%8F%8D%E7%A0%81%E8%A1%A5%E7%A0%81%E8%BD%AC/","publishdate":"2019-11-09T17:32:07Z","readingtime":8,"relpermalink":"/post/201911/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E5%8E%9F%E7%A0%81%E5%8F%8D%E7%A0%81%E8%A1%A5%E7%A0%81%E8%BD%AC/","section":"post","summary":"觉得很不错，所以第一次转载。 作者：张子秋 出处：ziqiu.zhang - 博客园 本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段","tags":["计算机原理"],"title":"计算机中的 原码、反码、补码 [转]","type":"post","url":"/post/201911/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E5%8E%9F%E7%A0%81%E5%8F%8D%E7%A0%81%E8%A1%A5%E7%A0%81%E8%BD%AC/","weight":0,"wordcount":3839},{"author":null,"categories":null,"content":null,"date":1573320727,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1573320727,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/","section":"tags","summary":"","tags":null,"title":"计算机原理","type":"tags","url":"/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%9F%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1572562857,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1572562857,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/csapp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/csapp/","section":"tags","summary":"","tags":null,"title":"CSAPP","type":"tags","url":"/tags/csapp/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"什么事补码以及无符号数","date":1572562857,"description":"什么事补码以及无符号数","dir":"post\\201910\\","excerpt_html":"什么事补码以及无符号数","excerpt_text":"什么事补码以及无符号数","expirydate":-62135596800,"fuzzywordcount":800,"html":"什么事补码以及无符号数","keywords":null,"kind":"page","lang":"en","lastmod":1572562857,"objectID":"af6b085aecd3397d84c7686da426c9db","permalink":"https://zhangzhengyi12.github.io/post/201910/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E8%A1%A5%E7%A0%81%E4%B8%8E%E6%97%A0%E7%AC%A6%E5%8F%B7%E7%BC%96%E7%A0%81%E7%AC%94%E8%AE%B0/","publishdate":"2019-10-31T23:00:57Z","readingtime":2,"relpermalink":"/post/201910/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E8%A1%A5%E7%A0%81%E4%B8%8E%E6%97%A0%E7%AC%A6%E5%8F%B7%E7%BC%96%E7%A0%81%E7%AC%94%E8%AE%B0/","section":"post","summary":"在计算机中，我们可以采用 补码 以及 无符号 两种方式来存储我们的整数，两者的主要差别如下 补码 第一位为符号位，当符号为 = 1 时，代表一个负权，= 0 时，","tags":["CSAPP","计算机原理"],"title":"计算机中的补码与无符号编码 [笔记]","type":"post","url":"/post/201910/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E8%A1%A5%E7%A0%81%E4%B8%8E%E6%97%A0%E7%AC%A6%E5%8F%B7%E7%BC%96%E7%A0%81%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":784},{"author":null,"categories":["Tech"],"content":"使用计算机的基础位运算功能实现变量交换","date":1572534787,"description":"使用计算机的基础位运算功能实现变量交换","dir":"post\\201910\\","excerpt_html":"使用计算机的基础位运算功能实现变量交换","excerpt_text":"使用计算机的基础位运算功能实现变量交换","expirydate":-62135596800,"fuzzywordcount":800,"html":"使用计算机的基础位运算功能实现变量交换","keywords":null,"kind":"page","lang":"en","lastmod":1572534787,"objectID":"efef1b2b247c4614a7cd99725f2f52b2","permalink":"https://zhangzhengyi12.github.io/post/201910/%E4%B8%8D%E7%94%A8%E7%AC%AC%E4%B8%89%E4%B8%AAtemp%E5%8F%98%E9%87%8F%E5%AE%9E%E7%8E%B0%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8F%E4%B9%8B%E9%97%B4%E4%BA%A4%E6%8D%A2%E7%9A%84%E6%96%B9%E6%B3%95xor%E6%8C%89%E4%BD%8D%E6%88%96%E5%BC%82%E8%BF%90%E7%AE%97/","publishdate":"2019-10-31T15:13:07Z","readingtime":2,"relpermalink":"/post/201910/%E4%B8%8D%E7%94%A8%E7%AC%AC%E4%B8%89%E4%B8%AAtemp%E5%8F%98%E9%87%8F%E5%AE%9E%E7%8E%B0%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8F%E4%B9%8B%E9%97%B4%E4%BA%A4%E6%8D%A2%E7%9A%84%E6%96%B9%E6%B3%95xor%E6%8C%89%E4%BD%8D%E6%88%96%E5%BC%82%E8%BF%90%E7%AE%97/","section":"post","summary":"相信平时大家应该经常会遇到需要交换两个变量值的情况，最常见的做法就是建立一个 temp 临时变量，用于交换，代码大概是这样。 // javascript // swap let a = 1 ,b = 2 let temp","tags":["CSAPP","计算机原理"],"title":"不用第三个Temp变量 实现两个变量之间交换的方法 [XOR 运算]","type":"post","url":"/post/201910/%E4%B8%8D%E7%94%A8%E7%AC%AC%E4%B8%89%E4%B8%AAtemp%E5%8F%98%E9%87%8F%E5%AE%9E%E7%8E%B0%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8F%E4%B9%8B%E9%97%B4%E4%BA%A4%E6%8D%A2%E7%9A%84%E6%96%B9%E6%B3%95xor%E6%8C%89%E4%BD%8D%E6%88%96%E5%BC%82%E8%BF%90%E7%AE%97/","weight":0,"wordcount":788},{"author":null,"categories":["Tech"],"content":"利用一种非常简单的方式来判断用户是否触摸到了一条直线","date":1570033980,"description":"利用一种非常简单的方式来判断用户是否触摸到了一条直线","dir":"post\\201910\\","excerpt_html":"利用一种非常简单的方式来判断用户是否触摸到了一条直线","excerpt_text":"利用一种非常简单的方式来判断用户是否触摸到了一条直线","expirydate":-62135596800,"fuzzywordcount":200,"html":"利用一种非常简单的方式来判断用户是否触摸到了一条直线","keywords":null,"kind":"page","lang":"en","lastmod":1570033980,"objectID":"767bac66d0e79684fb6f23093444f542","permalink":"https://zhangzhengyi12.github.io/post/201910/canvas%E5%88%A4%E6%96%AD%E7%94%A8%E6%88%B7%E6%98%AF%E5%90%A6%E7%82%B9%E5%87%BB%E5%9C%A8%E4%B8%80%E6%9D%A1%E7%BA%BF%E4%B8%8A/","publishdate":"2019-10-02T16:33:00Z","readingtime":1,"relpermalink":"/post/201910/canvas%E5%88%A4%E6%96%AD%E7%94%A8%E6%88%B7%E6%98%AF%E5%90%A6%E7%82%B9%E5%87%BB%E5%9C%A8%E4%B8%80%E6%9D%A1%E7%BA%BF%E4%B8%8A/","section":"post","summary":"该实现为 IOS 的 swift，但是可以运用在任何 UI 平台，主要原理就是把一条线切分成一个个的点，然后判断用户的点击与这条线上的点进行逐一判断 是否距离","tags":["Swift","Canvas"],"title":"canvas判断用户是否点击在一条线上","type":"post","url":"/post/201910/canvas%E5%88%A4%E6%96%AD%E7%94%A8%E6%88%B7%E6%98%AF%E5%90%A6%E7%82%B9%E5%87%BB%E5%9C%A8%E4%B8%80%E6%9D%A1%E7%BA%BF%E4%B8%8A/","weight":0,"wordcount":187},{"author":null,"categories":null,"content":null,"date":1570033980,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1570033980,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/swift/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/swift/","section":"tags","summary":"","tags":null,"title":"Swift","type":"tags","url":"/tags/swift/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1568406257,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1568406257,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/v8/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/v8/","section":"tags","summary":"","tags":null,"title":"V8","type":"tags","url":"/tags/v8/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"Lite - 适用于低内存设备的 V8引擎版本","date":1568406257,"description":"Lite - 适用于低内存设备的 V8引擎版本","dir":"post\\201909\\","excerpt_html":"Lite - 适用于低内存设备的 V8引擎版本","excerpt_text":"Lite - 适用于低内存设备的 V8引擎版本","expirydate":-62135596800,"fuzzywordcount":4700,"html":"Lite - 适用于低内存设备的 V8引擎版本","keywords":null,"kind":"page","lang":"en","lastmod":1568406257,"objectID":"07aac83c680d494b686f723e4dd87214","permalink":"https://zhangzhengyi12.github.io/post/201909/v8lite%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84v8%E5%BC%95%E6%93%8E%E8%AF%91/","publishdate":"2019-09-13T20:24:17Z","readingtime":10,"relpermalink":"/post/201909/v8lite%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84v8%E5%BC%95%E6%93%8E%E8%AF%91/","section":"post","summary":"在2018年晚些时候，我们启动了一个全新的项目 - V8 Lite，旨在大幅度减少V8引擎对于内存的使用。最初这个项目被设想成一个独立于V8引擎的L","tags":["V8","译"],"title":"V8 Lite - 轻量级的V8引擎 [译]","type":"post","url":"/post/201909/v8lite%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84v8%E5%BC%95%E6%93%8E%E8%AF%91/","weight":0,"wordcount":4663},{"author":null,"categories":null,"content":null,"date":1568406257,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1568406257,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E8%AF%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%AF%91/","section":"tags","summary":"","tags":null,"title":"译","type":"tags","url":"/tags/%E8%AF%91/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"利用简单的编辑距离，来判断两个拉丁文单词直接的相似度，常用于输入纠错!","date":1568281180,"description":"利用简单的编辑距离，来判断两个拉丁文单词直接的相似度，常用于输入纠错!","dir":"post\\201909\\","excerpt_html":"利用简单的编辑距离，来判断两个拉丁文单词直接的相似度，常用于输入纠错!","excerpt_text":"利用简单的编辑距离，来判断两个拉丁文单词直接的相似度，常用于输入纠错!","expirydate":-62135596800,"fuzzywordcount":1400,"html":"利用简单的编辑距离，来判断两个拉丁文单词直接的相似度，常用于输入纠错!","keywords":null,"kind":"page","lang":"en","lastmod":1568281180,"objectID":"cac9d321ecc6b690f57263e4c9c23e9b","permalink":"https://zhangzhengyi12.github.io/post/201909/%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%E7%AE%97%E6%B3%95%E8%AE%A1%E7%AE%97%E4%B8%A4%E4%B8%AA%E5%8D%95%E8%AF%8D%E4%B9%8B%E9%97%B4%E7%9A%84%E7%9B%B8%E4%BC%BC%E5%BA%A6/","publishdate":"2019-09-12T09:39:40Z","readingtime":3,"relpermalink":"/post/201909/%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%E7%AE%97%E6%B3%95%E8%AE%A1%E7%AE%97%E4%B8%A4%E4%B8%AA%E5%8D%95%E8%AF%8D%E4%B9%8B%E9%97%B4%E7%9A%84%E7%9B%B8%E4%BC%BC%E5%BA%A6/","section":"post","summary":"在我们的日常生活中，必然使用过搜索引擎提供的联想查询功能 可以看到，尽管我们打错了单词，但是他仍然为我们提供了搜索建议，那么这是如何实现的呢。","tags":["算法"],"title":"编辑距离算法 - 计算两个单词之间的相似度","type":"post","url":"/post/201909/%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%E7%AE%97%E6%B3%95%E8%AE%A1%E7%AE%97%E4%B8%A4%E4%B8%AA%E5%8D%95%E8%AF%8D%E4%B9%8B%E9%97%B4%E7%9A%84%E7%9B%B8%E4%BC%BC%E5%BA%A6/","weight":0,"wordcount":1360},{"author":null,"categories":["Tech"],"content":"LRU 是一种 『最久未用优先淘汰』 的缓存管理算法","date":1567779807,"description":"LRU 是一种 『最久未用优先淘汰』 的缓存管理算法","dir":"post\\201909\\","excerpt_html":"LRU 是一种 『最久未用优先淘汰』 的缓存管理算法","excerpt_text":"LRU 是一种 『最久未用优先淘汰』 的缓存管理算法","expirydate":-62135596800,"fuzzywordcount":600,"html":"LRU 是一种 『最久未用优先淘汰』 的缓存管理算法","keywords":null,"kind":"page","lang":"en","lastmod":1567779807,"objectID":"2dece835df38acb14c99059d6f0084f1","permalink":"https://zhangzhengyi12.github.io/post/201909/lru%E7%BC%93%E5%AD%98%E7%AE%97%E6%B3%95/","publishdate":"2019-09-06T14:23:27Z","readingtime":2,"relpermalink":"/post/201909/lru%E7%BC%93%E5%AD%98%E7%AE%97%E6%B3%95/","section":"post","summary":"缓存的主要目的就是提高访问速度，当我们需要从某个容器中获取一个元素的时候，将会优先从缓存中获取，如果缓存中正好存在，那么我们就可以直接取走这","tags":["算法","缓存管理"],"title":"LRU 缓存算法","type":"post","url":"/post/201909/lru%E7%BC%93%E5%AD%98%E7%AE%97%E6%B3%95/","weight":0,"wordcount":567},{"author":null,"categories":null,"content":null,"date":1567779807,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1567779807,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E7%BC%93%E5%AD%98%E7%AE%A1%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%BC%93%E5%AD%98%E7%AE%A1%E7%90%86/","section":"tags","summary":"","tags":null,"title":"缓存管理","type":"tags","url":"/tags/%E7%BC%93%E5%AD%98%E7%AE%A1%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1567779746,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1567779746,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/","section":"tags","summary":"","tags":null,"title":"机器学习","type":"tags","url":"/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"基础且典型的一种无监督机器学习分类算法","date":1567779746,"description":"基础且典型的一种无监督机器学习分类算法","dir":"post\\201909\\","excerpt_html":"基础且典型的一种无监督机器学习分类算法","excerpt_text":"基础且典型的一种无监督机器学习分类算法","expirydate":-62135596800,"fuzzywordcount":2200,"html":"基础且典型的一种无监督机器学习分类算法","keywords":null,"kind":"page","lang":"en","lastmod":1567779746,"objectID":"6173d465d3d57a66ef6da5b70d459ecf","permalink":"https://zhangzhengyi12.github.io/post/201909/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0k%E5%9D%87%E5%80%BC%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/","publishdate":"2019-09-06T14:22:26Z","readingtime":5,"relpermalink":"/post/201909/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0k%E5%9D%87%E5%80%BC%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/","section":"post","summary":"k-平均算法（英文：k-means clustering）源于信号处理中的一种向量量化方法，现在则更多地作为一种聚类分析方法流行于数据挖掘领域","tags":["算法","机器学习"],"title":"机器学习 K均值分类算法","type":"post","url":"/post/201909/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0k%E5%9D%87%E5%80%BC%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/","weight":0,"wordcount":2117},{"author":null,"categories":["Tech"],"content":"字典树也被称之为前缀树，是一种根据字母序列为基础的快速检索数据结构","date":1565379573,"description":"字典树也被称之为前缀树，是一种根据字母序列为基础的快速检索数据结构","dir":"post\\201908\\","excerpt_html":"字典树也被称之为前缀树，是一种根据字母序列为基础的快速检索数据结构","excerpt_text":"字典树也被称之为前缀树，是一种根据字母序列为基础的快速检索数据结构","expirydate":-62135596800,"fuzzywordcount":1700,"html":"字典树也被称之为前缀树，是一种根据字母序列为基础的快速检索数据结构","keywords":null,"kind":"page","lang":"en","lastmod":1565379573,"objectID":"e88a2a92df46392759b53fd8aecca109","permalink":"https://zhangzhengyi12.github.io/post/201908/%E5%AD%97%E5%85%B8%E6%A0%91%E7%9A%84%E5%AE%9E%E7%8E%B0/","publishdate":"2019-08-09T19:39:33Z","readingtime":4,"relpermalink":"/post/201908/%E5%AD%97%E5%85%B8%E6%A0%91%E7%9A%84%E5%AE%9E%E7%8E%B0/","section":"post","summary":"在计算机科学中，trie，又称前缀树或字典树，是一种有序树，用于保存关联数组，其中的键通常是字符串。与二叉查找树不同，键不是直接保存在节点中","tags":["数据结构"],"title":"字典树的实现","type":"post","url":"/post/201908/%E5%AD%97%E5%85%B8%E6%A0%91%E7%9A%84%E5%AE%9E%E7%8E%B0/","weight":0,"wordcount":1638},{"author":null,"categories":null,"content":null,"date":1565379573,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1565379573,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","section":"tags","summary":"","tags":null,"title":"数据结构","type":"tags","url":"/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1562698486,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1562698486,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/","section":"tags","summary":"","tags":null,"title":"前端工程化","type":"tags","url":"/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"有没有觉得创建一个独立NPM组件过于费时费力呢?","date":1562698486,"description":"有没有觉得创建一个独立NPM组件过于费时费力呢?","dir":"post\\201907\\","excerpt_html":"有没有觉得创建一个独立NPM组件过于费时费力呢?","excerpt_text":"有没有觉得创建一个独立NPM组件过于费时费力呢?","expirydate":-62135596800,"fuzzywordcount":3500,"html":"有没有觉得创建一个独立NPM组件过于费时费力呢?","keywords":null,"kind":"page","lang":"en","lastmod":1562698486,"objectID":"fd15fe6cb09b07c004516b4711356559","permalink":"https://zhangzhengyi12.github.io/post/201907/%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%94%A8%E4%BA%8E%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6%E5%BA%93%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%84%9A%E6%89%8B%E6%9E%B6%E5%B7%A5%E5%85%B7%E7%B1%BBvuecli3/","publishdate":"2019-07-09T18:54:46Z","readingtime":7,"relpermalink":"/post/201907/%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%94%A8%E4%BA%8E%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6%E5%BA%93%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%84%9A%E6%89%8B%E6%9E%B6%E5%B7%A5%E5%85%B7%E7%B1%BBvuecli3/","section":"post","summary":"缘起 最近公司内部想搭建一个私有的 npm 仓库，用于将平时用到次数相当频繁的工具或者组件独立出来，方便单独管理，随着项目的规模变大，数量变多，单纯的","tags":["前端工程化"],"title":"构建一个用于创建组件库的项目脚手架工具 [类 Vue-cli-3]","type":"post","url":"/post/201907/%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%94%A8%E4%BA%8E%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6%E5%BA%93%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%84%9A%E6%89%8B%E6%9E%B6%E5%B7%A5%E5%85%B7%E7%B1%BBvuecli3/","weight":0,"wordcount":3400},{"author":null,"categories":["Tech"],"content":null,"date":1561011304,"description":"","dir":"post\\201906\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1561011304,"objectID":"8988a329add933b51474a208bd0bdb47","permalink":"https://zhangzhengyi12.github.io/post/201906/centos7%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx%E9%85%8D%E5%90%88ssl%E6%A8%A1%E5%9D%97/","publishdate":"2019-06-20T06:15:04Z","readingtime":1,"relpermalink":"/post/201906/centos7%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx%E9%85%8D%E5%90%88ssl%E6%A8%A1%E5%9D%97/","section":"post","summary":"准备 先安装一下接下来需要的依赖套件 yum install -y gcc-c++ openssl openssl-devel zlib zlib-devel pcre pcre-devel 下载 nginx cd ~ wget http://nginx.org/download/nginx-1.12.2.tar.gz tar -zxvf nginx-1.12.2.tar.gz 编译安装 cd nginx-1.12.2 ./configure \u0026ndash;prefix=/usr/local/nginx \u0026ndash;with-http_ssl_module make \u0026amp;\u0026amp; make install 检测安装是否成功 /usr/local/nginx/sbin/nginx -v 常用操作 /usr/local/nginx/sbin/nginx # 启动 /usr/local/nginx/sbin/nginx -s","tags":["Linux","Nginx"],"title":"CentOS 7 编译安装 Nginx 配合 SSL 模块","type":"post","url":"/post/201906/centos7%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx%E9%85%8D%E5%90%88ssl%E6%A8%A1%E5%9D%97/","weight":0,"wordcount":294},{"author":null,"categories":null,"content":null,"date":1561011304,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1561011304,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/linux/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/linux/","section":"tags","summary":"","tags":null,"title":"Linux","type":"tags","url":"/tags/linux/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1561011304,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1561011304,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/nginx/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/nginx/","section":"tags","summary":"","tags":null,"title":"Nginx","type":"tags","url":"/tags/nginx/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1560453328,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1560453328,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/web/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/web/","section":"tags","summary":"","tags":null,"title":"Web","type":"tags","url":"/tags/web/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1560453328,"description":"","dir":"post\\201906\\","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1560453328,"objectID":"061a9af7da376efe6d81eaa9171a8ab2","permalink":"https://zhangzhengyi12.github.io/post/201906/%E4%BF%AE%E5%A4%8Diosinput%E8%BE%93%E5%85%A5%E6%A1%86%E5%A4%B1%E5%8E%BB%E7%84%A6%E7%82%B9%E6%97%A0%E6%B3%95%E8%BF%98%E5%8E%9F%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8/","publishdate":"2019-06-13T19:15:28Z","readingtime":1,"relpermalink":"/post/201906/%E4%BF%AE%E5%A4%8Diosinput%E8%BE%93%E5%85%A5%E6%A1%86%E5%A4%B1%E5%8E%BB%E7%84%A6%E7%82%B9%E6%97%A0%E6%B3%95%E8%BF%98%E5%8E%9F%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8/","section":"post","summary":"推荐注册到 Vue 全局 Mixin 里 并在 updated 生命周期中重新运行 const fixInputPaddingMixin = { mounted() { this._fixInput(); }, updated() { this._fixInput(); }, methods: { _fixInput() { let inputs = document.querySelectorAll('input'); if (inputs.length \u0026gt;= 1) { for (let item of inputs) { item.addEventListener( 'focus', () =\u0026gt; { item.scrollTop = document.body.scrollTop; }, false, ); item.addEventListener( 'blur', () =\u0026gt; { document.body.scrollTop","tags":["Web"],"title":"修复 iOS Web Input 输入框失去焦点无法还原页面滚动位置","type":"post","url":"/post/201906/%E4%BF%AE%E5%A4%8Diosinput%E8%BE%93%E5%85%A5%E6%A1%86%E5%A4%B1%E5%8E%BB%E7%84%A6%E7%82%B9%E6%97%A0%E6%B3%95%E8%BF%98%E5%8E%9F%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8/","weight":0,"wordcount":82},{"author":null,"categories":["Tech"],"content":null,"date":1555819617,"description":"","dir":"post\\201904\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1555819617,"objectID":"2739539bdaa43e7d4c71310f94aa4631","permalink":"https://zhangzhengyi12.github.io/post/201904/%E5%93%88%E5%B8%8C%E8%A1%A8%E7%9A%84%E5%AE%9E%E7%8E%B0/","publishdate":"2019-04-21T04:06:57Z","readingtime":3,"relpermalink":"/post/201904/%E5%93%88%E5%B8%8C%E8%A1%A8%E7%9A%84%E5%AE%9E%E7%8E%B0/","section":"post","summary":"哈希表 散列表（Hash table，也叫哈希表），是根据键（Key）而直接访问在内存存储位置的数据结构。也就是说，它通过计算一个关于键值的函数","tags":["算法","数据结构"],"title":"哈希表的实现","type":"post","url":"/post/201904/%E5%93%88%E5%B8%8C%E8%A1%A8%E7%9A%84%E5%AE%9E%E7%8E%B0/","weight":0,"wordcount":1289},{"author":null,"categories":["Tech"],"content":null,"date":1555210476,"description":"","dir":"post\\201904\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1555210476,"objectID":"e164ebc3a4bfd8b4ff9f8deed6a44ef2","permalink":"https://zhangzhengyi12.github.io/post/201904/%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E7%9A%84%E9%81%AE%E7%BD%A9%E7%A9%BF%E9%80%8F%E6%95%88%E6%9E%9C/","publishdate":"2019-04-14T02:54:36Z","readingtime":1,"relpermalink":"/post/201904/%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E7%9A%84%E9%81%AE%E7%BD%A9%E7%A9%BF%E9%80%8F%E6%95%88%E6%9E%9C/","section":"post","summary":"后续更新: 事实上大家如果有这个需求可以先去看看 css 里的 clip-path，是个更好的选择！ 最近在工作中要去做一个类似于一些软件游戏里面的引导的","tags":["Web"],"title":"前端实现真正的遮罩穿透效果","type":"post","url":"/post/201904/%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E7%9A%84%E9%81%AE%E7%BD%A9%E7%A9%BF%E9%80%8F%E6%95%88%E6%9E%9C/","weight":0,"wordcount":495},{"author":null,"categories":["Tech"],"content":null,"date":1554698492,"description":"","dir":"post\\201904\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1554698492,"objectID":"df9c550a87dc98f10a34acd02aad81b4","permalink":"https://zhangzhengyi12.github.io/post/201904/%E8%99%9A%E6%8B%9F%E6%BB%9A%E5%8A%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E9%80%82%E5%90%88%E5%A4%A7%E9%87%8F%E7%9A%84%E5%88%97%E8%A1%A8%E6%95%B0%E6%8D%AE/","publishdate":"2019-04-08T04:41:32Z","readingtime":2,"relpermalink":"/post/201904/%E8%99%9A%E6%8B%9F%E6%BB%9A%E5%8A%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E9%80%82%E5%90%88%E5%A4%A7%E9%87%8F%E7%9A%84%E5%88%97%E8%A1%A8%E6%95%B0%E6%8D%AE/","section":"post","summary":"假设我们拥有10w条数据，需要在Web上进行展现，但是如果我们进行实际的渲染就会发现，整个初次渲染的成本的非常之高，用户的体验是非常差的。所","tags":["Web"],"title":"虚拟滚动的实现(适合大量的列表数据)","type":"post","url":"/post/201904/%E8%99%9A%E6%8B%9F%E6%BB%9A%E5%8A%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E9%80%82%E5%90%88%E5%A4%A7%E9%87%8F%E7%9A%84%E5%88%97%E8%A1%A8%E6%95%B0%E6%8D%AE/","weight":0,"wordcount":650},{"author":null,"categories":["Tech"],"content":null,"date":1554012175,"description":"","dir":"post\\201903\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1554012175,"objectID":"0d7a022c9fd958fbb674dba77e076a49","permalink":"https://zhangzhengyi12.github.io/post/201903/%E5%88%A9%E7%94%A8%E7%8A%B6%E6%80%81%E6%9C%BA%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%BC%96%E8%AF%91%E5%99%A8/","publishdate":"2019-03-31T06:02:55Z","readingtime":3,"relpermalink":"/post/201903/%E5%88%A9%E7%94%A8%E7%8A%B6%E6%80%81%E6%9C%BA%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%BC%96%E8%AF%91%E5%99%A8/","section":"post","summary":"有限状态机（英语：finite-state machine，缩写：FSM）又称有限状态自动机，简称状态机，是表示有限个状态以及在这些状态之间的","tags":["编译原理"],"title":"利用状态机实现一个简单的解释器","type":"post","url":"/post/201903/%E5%88%A9%E7%94%A8%E7%8A%B6%E6%80%81%E6%9C%BA%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%BC%96%E8%AF%91%E5%99%A8/","weight":0,"wordcount":1349},{"author":null,"categories":null,"content":null,"date":1554012175,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1554012175,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/","section":"tags","summary":"","tags":null,"title":"编译原理","type":"tags","url":"/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1553129336,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1553129336,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/gc/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/gc/","section":"tags","summary":"","tags":null,"title":"GC","type":"tags","url":"/tags/gc/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1553129336,"description":"","dir":"post\\201903\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1553129336,"objectID":"917878b5e9ec9dca263b201bd8631591","permalink":"https://zhangzhengyi12.github.io/post/201903/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95%E4%B8%8Enode.js%E4%B8%AD%E7%9A%84%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E6%9C%BA%E5%88%B6/","publishdate":"2019-03-21T00:48:56Z","readingtime":6,"relpermalink":"/post/201903/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95%E4%B8%8Enode.js%E4%B8%AD%E7%9A%84%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E6%9C%BA%E5%88%B6/","section":"post","summary":"垃圾回收（英语：Garbage Collection，缩写为GC），在计算机科学中是一种自动的存储器管理机制。当一个计算机上的动态存储器不再需","tags":["GC"],"title":"浅谈常见编程语言中的垃圾收集算法","type":"post","url":"/post/201903/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95%E4%B8%8Enode.js%E4%B8%AD%E7%9A%84%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E6%9C%BA%E5%88%B6/","weight":0,"wordcount":2606},{"author":null,"categories":["Tech"],"content":null,"date":1552166723,"description":"","dir":"post\\201903\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1552166723,"objectID":"31398853f086691637c5914798d29bc7","permalink":"https://zhangzhengyi12.github.io/post/201903/%E7%AE%97%E6%B3%95%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E4%B8%8E01%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/","publishdate":"2019-03-09T21:25:23Z","readingtime":2,"relpermalink":"/post/201903/%E7%AE%97%E6%B3%95%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E4%B8%8E01%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/","section":"post","summary":"最长递增子序列 在计算机科学中，最长递增子序列（longest increasing subsequence）问题是指，在一个给定的数值序列中，找到一个子序列，使得","tags":["算法"],"title":"最长递增子序列 与 0 1 背包问题 [动态规划]","type":"post","url":"/post/201903/%E7%AE%97%E6%B3%95%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E4%B8%8E01%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/","weight":0,"wordcount":849},{"author":null,"categories":null,"content":null,"date":1551417453,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1551417453,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/webpack/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/webpack/","section":"tags","summary":"","tags":null,"title":"Webpack","type":"tags","url":"/tags/webpack/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1551417453,"description":"","dir":"post\\201903\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1551417453,"objectID":"e599255cfe8405dbe7dd1e46ac369f0e","permalink":"https://zhangzhengyi12.github.io/post/201903/webpackjs%E6%A8%A1%E5%9D%97%E5%8C%96%E5%8E%9F%E7%90%86/","publishdate":"2019-03-01T05:17:33Z","readingtime":3,"relpermalink":"/post/201903/webpackjs%E6%A8%A1%E5%9D%97%E5%8C%96%E5%8E%9F%E7%90%86/","section":"post","summary":"最近一直在看一些和JS模块化发展历程的东西，正好呢，也想了解一下Webpack在我们背后帮我们做了那些事情，所以就有了今天的这篇文章。 首先我","tags":["Webpack"],"title":"Webpack JS模块化原理","type":"post","url":"/post/201903/webpackjs%E6%A8%A1%E5%9D%97%E5%8C%96%E5%8E%9F%E7%90%86/","weight":0,"wordcount":1274},{"author":null,"categories":null,"content":null,"date":1548889695,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1548889695,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/chrome/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/chrome/","section":"tags","summary":"","tags":null,"title":"Chrome","type":"tags","url":"/tags/chrome/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1548889695,"description":"","dir":"post\\201901\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1548889695,"objectID":"ec6ca748a73276adf62e47dee24145e4","permalink":"https://zhangzhengyi12.github.io/post/201901/%E4%BB%8Ejs%E7%9A%84%E9%98%BB%E5%A1%9E%E8%A7%92%E5%BA%A6%E8%B0%88%E8%B0%88%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/","publishdate":"2019-01-30T23:08:15Z","readingtime":9,"relpermalink":"/post/201901/%E4%BB%8Ejs%E7%9A%84%E9%98%BB%E5%A1%9E%E8%A7%92%E5%BA%A6%E8%B0%88%E8%B0%88%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/","section":"post","summary":"前言 这样，\u0008在解析包含的javascript代码之前，页面的内容将完全呈现在浏览器中。而用户也会因为浏览器窗口显示空白页面的时间缩短而感到打","tags":["Chrome","Web"],"title":"从JS的阻塞角度谈谈浏览器渲染原理","type":"post","url":"/post/201901/%E4%BB%8Ejs%E7%9A%84%E9%98%BB%E5%A1%9E%E8%A7%92%E5%BA%A6%E8%B0%88%E8%B0%88%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/","weight":0,"wordcount":4190},{"author":null,"categories":["Tech"],"content":null,"date":1548453241,"description":"","dir":"post\\201901\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1548453241,"objectID":"88c8ed514a62e24e438aaba4b4ba7347","permalink":"https://zhangzhengyi12.github.io/post/201901/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%BA%E5%88%B6%E6%A8%AA%E5%B1%8F%E6%96%B9%E6%A1%88/","publishdate":"2019-01-25T21:54:01Z","readingtime":2,"relpermalink":"/post/201901/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%BA%E5%88%B6%E6%A8%AA%E5%B1%8F%E6%96%B9%E6%A1%88/","section":"post","summary":"最近工作中要开发一个横屏应用，无论用户是否开启手机旋转功能，进行强制横屏。 \u0008 这里面也收获了一些经验，在这里和大家分享一下。 首先说明我的方案只","tags":["Web"],"title":"移动端强制横屏方案","type":"post","url":"/post/201901/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%BA%E5%88%B6%E6%A8%AA%E5%B1%8F%E6%96%B9%E6%A1%88/","weight":0,"wordcount":621},{"author":null,"categories":["Tech"],"content":null,"date":1548047770,"description":"","dir":"post\\201901\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1548047770,"objectID":"1bd49934299d9e776982c3a2aa083655","permalink":"https://zhangzhengyi12.github.io/post/201901/javascript%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8Dxy%E5%AE%9A%E4%BD%8D%E5%B1%9E%E6%80%A7%E4%BB%A5%E5%8F%8A%E5%85%83%E7%B4%A0%E5%AE%BD%E9%AB%98%E5%B1%9E%E6%80%A7/","publishdate":"2019-01-21T05:16:10Z","readingtime":2,"relpermalink":"/post/201901/javascript%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8Dxy%E5%AE%9A%E4%BD%8D%E5%B1%9E%E6%80%A7%E4%BB%A5%E5%8F%8A%E5%85%83%E7%B4%A0%E5%AE%BD%E9%AB%98%E5%B1%9E%E6%80%A7/","section":"post","summary":"我们都用过不少JS中的定位属性，比如scrollTop,clientX等等，但是其实单纯从命名上，我们是很难区分各种属性的含义的，我平时也经","tags":["Web"],"title":"DOM中的各种XY定位属性以及元素宽高属性","type":"post","url":"/post/201901/javascript%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8Dxy%E5%AE%9A%E4%BD%8D%E5%B1%9E%E6%80%A7%E4%BB%A5%E5%8F%8A%E5%85%83%E7%B4%A0%E5%AE%BD%E9%AB%98%E5%B1%9E%E6%80%A7/","weight":0,"wordcount":743},{"author":null,"categories":["Tech"],"content":null,"date":1547708105,"description":"","dir":"post\\201901\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1547708105,"objectID":"ee5c6bad6053aa46dee6f1c5a4b6ad96","permalink":"https://zhangzhengyi12.github.io/post/201901/javascript%E4%B8%AD%E7%9A%84%E7%9B%B8%E7%AD%89%E6%93%8D%E4%BD%9C%E7%AC%A6/","publishdate":"2019-01-17T06:55:05Z","readingtime":1,"relpermalink":"/post/201901/javascript%E4%B8%AD%E7%9A%84%E7%9B%B8%E7%AD%89%E6%93%8D%E4%BD%9C%E7%AC%A6/","section":"post","summary":"想到这个的主要原因是最近看到了一个非常有趣的题目 [] == ![] 大家有想到结果是什么吗?其实结果是 true，下面是具体的判断链 [] == ![] -\u0026gt; [] == false -\u0026gt; [] == 0 -\u0026gt;","tags":["JavaScript"],"title":"JavaScript中的 == 相等操作符","type":"post","url":"/post/201901/javascript%E4%B8%AD%E7%9A%84%E7%9B%B8%E7%AD%89%E6%93%8D%E4%BD%9C%E7%AC%A6/","weight":0,"wordcount":379},{"author":null,"categories":["Tech"],"content":null,"date":1547247572,"description":"","dir":"post\\201901\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1547247572,"objectID":"9f721c51f1697730074e836d7b83a6fc","permalink":"https://zhangzhengyi12.github.io/post/201901/%E8%AE%A9vue.js%E4%B8%AD%E7%9A%84provideinject%E6%94%AF%E6%8C%81%E5%93%8D%E5%BA%94%E5%BC%8F/","publishdate":"2019-01-11T22:59:32Z","readingtime":3,"relpermalink":"/post/201901/%E8%AE%A9vue.js%E4%B8%AD%E7%9A%84provideinject%E6%94%AF%E6%8C%81%E5%93%8D%E5%BA%94%E5%BC%8F/","section":"post","summary":"provide / inject provide / inject Vue.js 2.2.0 版本后新增的 API. 还发出了这样的警告provide 和 inject 主要为高阶插件/组件库提供用例。并不推荐直接用于应用程序代码中。 provide 和 inject 绑定","tags":["Vue.js"],"title":"让 Vue.js 中的 provide / inject 支持响应式","type":"post","url":"/post/201901/%E8%AE%A9vue.js%E4%B8%AD%E7%9A%84provideinject%E6%94%AF%E6%8C%81%E5%93%8D%E5%BA%94%E5%BC%8F/","weight":0,"wordcount":1125},{"author":null,"categories":null,"content":null,"date":1547055627,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1547055627,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/rust/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/rust/","section":"tags","summary":"","tags":null,"title":"Rust","type":"tags","url":"/tags/rust/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1547055627,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1547055627,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/webassembly/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/webassembly/","section":"tags","summary":"","tags":null,"title":"WebAssembly","type":"tags","url":"/tags/webassembly/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1547055627,"description":"","dir":"post\\201901\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1547055627,"objectID":"b27e6f8eacb159ecdfd9e3d9da08658f","permalink":"https://zhangzhengyi12.github.io/post/201901/%E5%88%9D%E6%AC%A1%E5%B0%9D%E8%AF%95webassemblyrust/","publishdate":"2019-01-09T17:40:27Z","readingtime":3,"relpermalink":"/post/201901/%E5%88%9D%E6%AC%A1%E5%B0%9D%E8%AF%95webassemblyrust/","section":"post","summary":"这个东西其实我大约一年之前听到了解到，但是一直没有尝试。 正巧最近自己写了个文本校对工具，公司内部的一些人员在用，功能上没有问题，主要就是因为","tags":["Rust","WebAssembly"],"title":"初次尝试WebAssembly X Rust","type":"post","url":"/post/201901/%E5%88%9D%E6%AC%A1%E5%B0%9D%E8%AF%95webassemblyrust/","weight":0,"wordcount":1065},{"author":null,"categories":["Tech"],"content":null,"date":1546580169,"description":"","dir":"post\\201901\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1546580169,"objectID":"18479d96d7806598a46e0a20b34009f9","permalink":"https://zhangzhengyi12.github.io/post/201901/vue.js%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E6%8C%87%E5%8D%97/","publishdate":"2019-01-04T05:36:09Z","readingtime":5,"relpermalink":"/post/201901/vue.js%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E6%8C%87%E5%8D%97/","section":"post","summary":"前言 最近一直在看 Vue.js 源码，大约花了半个多月的时间阅读，有非常多的感悟，所以在这里希望能和大家分享一下我的成果。 首先我认为 Vue.js 这种牛逼框架的源码绝","tags":["Vue.js"],"title":"Vue.js源码 阅读引导","type":"post","url":"/post/201901/vue.js%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E6%8C%87%E5%8D%97/","weight":0,"wordcount":2484},{"author":null,"categories":["Tech"],"content":null,"date":1545262485,"description":"","dir":"post\\201812\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1545262485,"objectID":"f36379ad38ef130fec7667dff51126c1","permalink":"https://zhangzhengyi12.github.io/post/201812/vue%E6%BA%90%E7%A0%81%E4%B8%AD%E7%BC%96%E7%A8%8B%E6%89%8B%E6%B3%95/","publishdate":"2018-12-19T23:34:45Z","readingtime":3,"relpermalink":"/post/201812/vue%E6%BA%90%E7%A0%81%E4%B8%AD%E7%BC%96%E7%A8%8B%E6%89%8B%E6%B3%95/","section":"post","summary":"记录下我在阅读过程，觉得非常有学习的必要，非常好的东西。 操作对象属性的引用 \u0026lt;性能-可读性\u0026gt; exp function name(vm) { let data = vm.$options.data // 接下来需要读取dat","tags":["Vue.js"],"title":"Vue源码中编程技巧记录","type":"post","url":"/post/201812/vue%E6%BA%90%E7%A0%81%E4%B8%AD%E7%BC%96%E7%A8%8B%E6%89%8B%E6%B3%95/","weight":0,"wordcount":1370},{"author":null,"categories":["Tech"],"content":null,"date":1545112645,"description":"","dir":"post\\201812\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1545112645,"objectID":"0cdf5d0f1226f3c2cf1bd929a61b18c0","permalink":"https://zhangzhengyi12.github.io/post/201812/%E6%88%91%E7%9A%84%E5%89%8D%E7%AB%AF%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5anode%E5%8C%BF%E5%90%8D%E8%AE%BA%E5%9D%9Bdjango/","publishdate":"2018-12-18T05:57:25Z","readingtime":7,"relpermalink":"/post/201812/%E6%88%91%E7%9A%84%E5%89%8D%E7%AB%AF%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5anode%E5%8C%BF%E5%90%8D%E8%AE%BA%E5%9D%9Bdjango/","section":"post","summary":"最近用 Django 整了一个匿名的论坛，包含主题回复点赞，板块，用户等系统，麻雀虽小，但是基本功能还是全的的。但是不对接多可惜啊。 正好这半年多的前端开发","tags":["Web"],"title":"一些Web最佳实践的探索","type":"post","url":"/post/201812/%E6%88%91%E7%9A%84%E5%89%8D%E7%AB%AF%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5anode%E5%8C%BF%E5%90%8D%E8%AE%BA%E5%9D%9Bdjango/","weight":0,"wordcount":3264},{"author":null,"categories":["Tech"],"content":null,"date":1544722012,"description":"","dir":"post\\201812\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1544722012,"objectID":"29954c6c413fe4a000cc1b449ec2c26b","permalink":"https://zhangzhengyi12.github.io/post/201812/%E5%87%A0%E7%A7%8D%E5%BF%AB%E6%8E%92%E7%9A%84%E5%AE%9E%E7%8E%B0/","publishdate":"2018-12-13T17:26:52Z","readingtime":1,"relpermalink":"/post/201812/%E5%87%A0%E7%A7%8D%E5%BF%AB%E6%8E%92%E7%9A%84%E5%AE%9E%E7%8E%B0/","section":"post","summary":"其实也就是前段时间点阮一峰快排事件，正好去看看大家的实现，在这里记录一下，并写一下注释 实现 1 特点 简单 智力经济 性能较差 加随机化比较方便 只要把取","tags":["算法"],"title":"JavaScript 中 几种快排的实现","type":"post","url":"/post/201812/%E5%87%A0%E7%A7%8D%E5%BF%AB%E6%8E%92%E7%9A%84%E5%AE%9E%E7%8E%B0/","weight":0,"wordcount":497},{"author":null,"categories":["Tech"],"content":null,"date":1542327624,"description":"","dir":"post\\201811\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1542327624,"objectID":"03482c0dd846d254a5234d1046a76cb1","permalink":"https://zhangzhengyi12.github.io/post/201811/%E5%88%A9%E7%94%A8aop%E7%9A%84%E6%80%9D%E8%B7%AF%E5%AE%8C%E6%88%90%E5%BE%AE%E4%BF%A1spa%E4%B8%AD%E7%9A%84%E6%9D%A5%E6%BA%90%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD/","publishdate":"2018-11-16T00:20:24Z","readingtime":3,"relpermalink":"/post/201811/%E5%88%A9%E7%94%A8aop%E7%9A%84%E6%80%9D%E8%B7%AF%E5%AE%8C%E6%88%90%E5%BE%AE%E4%BF%A1spa%E4%B8%AD%E7%9A%84%E6%9D%A5%E6%BA%90%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD/","section":"post","summary":"需求 最近遇到了这么一个需求，我们拥有一个主要容器是微信浏览器的移动端 WebAPP 。他的主要功能是运营一些活动比如说抢红包啦，答题啦，所以我们需要对用户","tags":["微信公众号"],"title":"利用AOP的思路完成微信公众号网页中的分享来源统计功能","type":"post","url":"/post/201811/%E5%88%A9%E7%94%A8aop%E7%9A%84%E6%80%9D%E8%B7%AF%E5%AE%8C%E6%88%90%E5%BE%AE%E4%BF%A1spa%E4%B8%AD%E7%9A%84%E6%9D%A5%E6%BA%90%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD/","weight":0,"wordcount":1141},{"author":null,"categories":null,"content":null,"date":1542327624,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1542327624,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/","section":"tags","summary":"","tags":null,"title":"微信公众号","type":"tags","url":"/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1540858654,"description":"","dir":"post\\201810\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1540858654,"objectID":"fe98a074cb8d7dd6027dfb568b823467","permalink":"https://zhangzhengyi12.github.io/post/201810/%E5%BE%AE%E4%BF%A1vue%E4%BB%BB%E6%84%8F%E9%A1%B5%E9%9D%A2%E7%9B%B4%E6%8E%A5%E9%80%9A%E8%BF%87%E8%B7%AF%E7%94%B1%E8%BF%9B%E5%85%A5%E5%B9%B6%E6%8B%A6%E6%88%AA%E6%8C%89%E9%92%AE%E8%BF%94%E5%9B%9E%E4%BB%BB%E6%84%8F%E9%A1%B5%E9%9D%A2/","publishdate":"2018-10-30T00:17:34Z","readingtime":2,"relpermalink":"/post/201810/%E5%BE%AE%E4%BF%A1vue%E4%BB%BB%E6%84%8F%E9%A1%B5%E9%9D%A2%E7%9B%B4%E6%8E%A5%E9%80%9A%E8%BF%87%E8%B7%AF%E7%94%B1%E8%BF%9B%E5%85%A5%E5%B9%B6%E6%8B%A6%E6%88%AA%E6%8C%89%E9%92%AE%E8%BF%94%E5%9B%9E%E4%BB%BB%E6%84%8F%E9%A1%B5%E9%9D%A2/","section":"post","summary":"先来阐述一下需求 首先我拥有一个详情页面 B 用户可以进入到页面 B 之中分享出去页面 B 但别的用户通过地址直接进入页面 B 这时候 如果用户按了一下返回按钮","tags":["微信浏览器"],"title":"微信+vue 任意页面直接通过路由进入并拦截按钮  返回任意页面","type":"post","url":"/post/201810/%E5%BE%AE%E4%BF%A1vue%E4%BB%BB%E6%84%8F%E9%A1%B5%E9%9D%A2%E7%9B%B4%E6%8E%A5%E9%80%9A%E8%BF%87%E8%B7%AF%E7%94%B1%E8%BF%9B%E5%85%A5%E5%B9%B6%E6%8B%A6%E6%88%AA%E6%8C%89%E9%92%AE%E8%BF%94%E5%9B%9E%E4%BB%BB%E6%84%8F%E9%A1%B5%E9%9D%A2/","weight":0,"wordcount":749},{"author":null,"categories":["Tech"],"content":null,"date":1540858654,"description":"","dir":"post\\201810\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1540858654,"objectID":"563df5236c551dd423746bdc5d6060a0","permalink":"https://zhangzhengyi12.github.io/post/201810/%E5%BE%AE%E4%BF%A1webapp%E5%88%86%E4%BA%AB%E5%87%BA%E5%8E%BB%E5%B8%A6%E5%88%86%E4%BA%AB%E5%8F%82%E6%95%B0form%E5%AF%BC%E8%87%B4%E8%BF%9B%E5%85%A5%E5%88%86%E4%BA%AB%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%8C%B9%E9%85%8D%E8%B7%AF%E7%94%B1vue/","publishdate":"2018-10-30T00:17:34Z","readingtime":1,"relpermalink":"/post/201810/%E5%BE%AE%E4%BF%A1webapp%E5%88%86%E4%BA%AB%E5%87%BA%E5%8E%BB%E5%B8%A6%E5%88%86%E4%BA%AB%E5%8F%82%E6%95%B0form%E5%AF%BC%E8%87%B4%E8%BF%9B%E5%85%A5%E5%88%86%E4%BA%AB%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%8C%B9%E9%85%8D%E8%B7%AF%E7%94%B1vue/","section":"post","summary":"以下是某个单页应用的地址 http://m.cswh.me/dh/#/activity/flagRaisingPolice?act_token=b5f01112731d4c47bc5a7214d17365b2 而在这个页面使用微信的JSAPI进行分享之后，即使你设置了 wx.ready(function() { wx.onMenuShareAppMessage({ link: window.location.href , title: that.config.share_title, imgUrl: uploadURL + that.config.share_icon, desc: that.config.share_text }) wx.onMenuShareTimeline({ link: window.location.href, title: that.config.share_title, imgUrl: uploadURL + that.config.share_icon, desc: that.config.share_text }) })","tags":["微信浏览器"],"title":"微信webapp分享出去带分享参数 form 导致进入分享无法正常匹配路由 vue","type":"post","url":"/post/201810/%E5%BE%AE%E4%BF%A1webapp%E5%88%86%E4%BA%AB%E5%87%BA%E5%8E%BB%E5%B8%A6%E5%88%86%E4%BA%AB%E5%8F%82%E6%95%B0form%E5%AF%BC%E8%87%B4%E8%BF%9B%E5%85%A5%E5%88%86%E4%BA%AB%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%8C%B9%E9%85%8D%E8%B7%AF%E7%94%B1vue/","weight":0,"wordcount":210},{"author":null,"categories":null,"content":null,"date":1540858654,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1540858654,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E5%BE%AE%E4%BF%A1%E6%B5%8F%E8%A7%88%E5%99%A8/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%BE%AE%E4%BF%A1%E6%B5%8F%E8%A7%88%E5%99%A8/","section":"tags","summary":"","tags":null,"title":"微信浏览器","type":"tags","url":"/tags/%E5%BE%AE%E4%BF%A1%E6%B5%8F%E8%A7%88%E5%99%A8/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1540766402,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1540766402,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/npm/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/npm/","section":"tags","summary":"","tags":null,"title":"npm","type":"tags","url":"/tags/npm/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1540766402,"description":"","dir":"post\\201810\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1540766402,"objectID":"b924069eeee113398be8e6f9212982b5","permalink":"https://zhangzhengyi12.github.io/post/201810/%E8%B4%A1%E7%8C%AE%E4%BD%A0%E7%9A%84%E5%8A%9B%E9%87%8F%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAvue%E7%BB%84%E4%BB%B6%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0npm/","publishdate":"2018-10-28T22:40:02Z","readingtime":2,"relpermalink":"/post/201810/%E8%B4%A1%E7%8C%AE%E4%BD%A0%E7%9A%84%E5%8A%9B%E9%87%8F%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAvue%E7%BB%84%E4%BB%B6%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0npm/","section":"post","summary":"最近在工作中写了一个面向 PC 端的 Vue 滚动组件，关于 PC 端的滚动组件以前也用过一些，但是没有找到特别满意的，所以自己想着把这个组件开源发布出去，希望","tags":["Vue.js","npm"],"title":"贡献你的力量 开发一个Vue组件并发布到npm","type":"post","url":"/post/201810/%E8%B4%A1%E7%8C%AE%E4%BD%A0%E7%9A%84%E5%8A%9B%E9%87%8F%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAvue%E7%BB%84%E4%BB%B6%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0npm/","weight":0,"wordcount":916},{"author":null,"categories":["Tech"],"content":null,"date":1540078975,"description":"","dir":"post\\201810\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1540078975,"objectID":"acbfcffc9c3d1b96922e2585bc50110c","permalink":"https://zhangzhengyi12.github.io/post/201810/%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%99%BB%E5%BD%95%E5%90%8E%E7%BC%93%E5%AD%98%E9%A1%B5%E9%9D%A2%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E9%97%AE%E9%A2%98vue/","publishdate":"2018-10-20T23:42:55Z","readingtime":1,"relpermalink":"/post/201810/%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%99%BB%E5%BD%95%E5%90%8E%E7%BC%93%E5%AD%98%E9%A1%B5%E9%9D%A2%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E9%97%AE%E9%A2%98vue/","section":"post","summary":"先来阐述一下我的登录逻辑 进入组件 A 请求接口 api 请求会被拦截器拦截 检查该接口是否需要登录 如果用户未登录 跳转到 login 组件 xx.com/#/login?","tags":["微信公众号"],"title":"解决微信浏览器中登录后缓存页面导致无法进入Vue.js组件生命周期的问题","type":"post","url":"/post/201810/%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%99%BB%E5%BD%95%E5%90%8E%E7%BC%93%E5%AD%98%E9%A1%B5%E9%9D%A2%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E9%97%AE%E9%A2%98vue/","weight":0,"wordcount":422},{"author":null,"categories":["Tech"],"content":null,"date":1540015946,"description":"","dir":"post\\201810\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1540015946,"objectID":"8489d94eb824ffaa0b770ea46a48f750","permalink":"https://zhangzhengyi12.github.io/post/201810/%E7%AE%97%E6%B3%95%E5%AE%9E%E6%88%98%E6%96%87%E6%9C%AC%E6%A0%A1%E5%AF%B9%E5%B7%A5%E5%85%B7%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/","publishdate":"2018-10-20T06:12:26Z","readingtime":2,"relpermalink":"/post/201810/%E7%AE%97%E6%B3%95%E5%AE%9E%E6%88%98%E6%96%87%E6%9C%AC%E6%A0%A1%E5%AF%B9%E5%B7%A5%E5%85%B7%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/","section":"post","summary":"前段时间公司里有需求需要一个文本对比工具，我在网上也收集到了一些资料，找到了一些对比 DEMO，仔细考虑之后恍然大悟，这东西不就是最长公共子序","tags":["算法"],"title":"算法实战 文本校对工具 最长公共子序列","type":"post","url":"/post/201810/%E7%AE%97%E6%B3%95%E5%AE%9E%E6%88%98%E6%96%87%E6%9C%AC%E6%A0%A1%E5%AF%B9%E5%B7%A5%E5%85%B7%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/","weight":0,"wordcount":989},{"author":null,"categories":["Tech"],"content":null,"date":1539649224,"description":"","dir":"post\\201810\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1539649224,"objectID":"7716169947dfec43382cf2e54bee6ecf","permalink":"https://zhangzhengyi12.github.io/post/201810/%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AA%E5%BE%88%E9%85%B7%E7%9A%84fib%E5%AE%9E%E7%8E%B0/","publishdate":"2018-10-16T00:20:24Z","readingtime":1,"relpermalink":"/post/201810/%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AA%E5%BE%88%E9%85%B7%E7%9A%84fib%E5%AE%9E%E7%8E%B0/","section":"post","summary":"const fib = n =\u0026gt; Array(n) .fill(0) .reduce(pre =\u0026gt; [pre[1], pre[1] + pre[0]], [0, 1])[0] def fib(n): return reduce(lambda x, n: [x[1], x[0]+x[1]], range(n), [0, 1])[0] 性能也非常不错，迭代实现。从 Py 那边偷学的。 帅爆了有没有","tags":["递归"],"title":"分享一个Fib数列实现 [reduce]","type":"post","url":"/post/201810/%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AA%E5%BE%88%E9%85%B7%E7%9A%84fib%E5%AE%9E%E7%8E%B0/","weight":0,"wordcount":53},{"author":null,"categories":null,"content":null,"date":1539649224,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1539649224,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E9%80%92%E5%BD%92/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%80%92%E5%BD%92/","section":"tags","summary":"","tags":null,"title":"递归","type":"tags","url":"/tags/%E9%80%92%E5%BD%92/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1539558203,"description":"","dir":"post\\201810\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1539558203,"objectID":"700fdf73b8b03a3d23130ef13b83332e","permalink":"https://zhangzhengyi12.github.io/post/201810/%E5%9C%A8%E5%BE%AE%E4%BF%A1spa%E4%B8%AD%E6%A8%A1%E6%8B%9F%E4%B8%80%E4%B8%AA%E8%B7%AF%E7%94%B1%E5%A0%86%E6%A0%88%E7%B3%BB%E7%BB%9F/","publishdate":"2018-10-14T23:03:23Z","readingtime":1,"relpermalink":"/post/201810/%E5%9C%A8%E5%BE%AE%E4%BF%A1spa%E4%B8%AD%E6%A8%A1%E6%8B%9F%E4%B8%80%E4%B8%AA%E8%B7%AF%E7%94%B1%E5%A0%86%E6%A0%88%E7%B3%BB%E7%BB%9F/","section":"post","summary":"最近再写一个活动模块，用 vue 写的。这个活动模块需要融合到我们的主项目之中，这就意味着在用路由做其实不太好，活动本身的数据交换比较频繁，用 vuex 太大","tags":["微信浏览器"],"title":"在微信spa中模拟一个路由堆栈系统","type":"post","url":"/post/201810/%E5%9C%A8%E5%BE%AE%E4%BF%A1spa%E4%B8%AD%E6%A8%A1%E6%8B%9F%E4%B8%80%E4%B8%AA%E8%B7%AF%E7%94%B1%E5%A0%86%E6%A0%88%E7%B3%BB%E7%BB%9F/","weight":0,"wordcount":348},{"author":null,"categories":["Tech"],"content":null,"date":1539375402,"description":"","dir":"post\\201810\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1539375402,"objectID":"f25260748d450b9ff18693296affa6fd","permalink":"https://zhangzhengyi12.github.io/post/201810/%E5%BE%AE%E4%BF%A1ios%E5%8A%A8%E6%80%81%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%92%AD%E6%94%BE%E7%9A%84%E9%97%AE%E9%A2%98/","publishdate":"2018-10-12T20:16:42Z","readingtime":1,"relpermalink":"/post/201810/%E5%BE%AE%E4%BF%A1ios%E5%8A%A8%E6%80%81%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%92%AD%E6%94%BE%E7%9A%84%E9%97%AE%E9%A2%98/","section":"post","summary":"这个其实算是老生常谈的问题了，IOS 的安全机制导致你无法自动播放音频，很多人用一些触摸事件来模拟用户操作，然后去触发 play 事件。不过今天我的问题","tags":["微信浏览器"],"title":"微信浏览器 IOS下 动态音乐播放器无法正常播放的问题","type":"post","url":"/post/201810/%E5%BE%AE%E4%BF%A1ios%E5%8A%A8%E6%80%81%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%92%AD%E6%94%BE%E7%9A%84%E9%97%AE%E9%A2%98/","weight":0,"wordcount":392},{"author":null,"categories":["Tech"],"content":null,"date":1539375402,"description":"","dir":"post\\201810\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1539375402,"objectID":"f5e7167aa600b336a936f755849b573c","permalink":"https://zhangzhengyi12.github.io/post/201810/%E7%AE%97%E6%B3%95%E6%9C%80%E5%B0%8F%E7%A1%AC%E5%B8%81%E9%97%AE%E9%A2%98%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95/","publishdate":"2018-10-12T20:16:42Z","readingtime":2,"relpermalink":"/post/201810/%E7%AE%97%E6%B3%95%E6%9C%80%E5%B0%8F%E7%A1%AC%E5%B8%81%E9%97%AE%E9%A2%98%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95/","section":"post","summary":"问题 假设你当前拥有 3 元 6 元 7 元的硬币 数量为无限。问 假设你需要组合出 18 元，如何使硬币的数量最少 分析：我认为这个问题有点类似于 01 背包问题，很明显","tags":["算法"],"title":"最小硬币问题 [动态规划]","type":"post","url":"/post/201810/%E7%AE%97%E6%B3%95%E6%9C%80%E5%B0%8F%E7%A1%AC%E5%B8%81%E9%97%AE%E9%A2%98%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95/","weight":0,"wordcount":681},{"author":null,"categories":["Tech"],"content":null,"date":1538522388,"description":"","dir":"post\\201810\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1538522388,"objectID":"749f19c7aca27d6e826ea0b467466589","permalink":"https://zhangzhengyi12.github.io/post/201810/%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fchooselocation%E5%9C%A8ios%E4%B8%8B%E4%B8%8D%E8%83%BD%E7%A8%B3%E5%AE%9A%E8%A7%A6%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98/","publishdate":"2018-10-02T23:19:48Z","readingtime":1,"relpermalink":"/post/201810/%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fchooselocation%E5%9C%A8ios%E4%B8%8B%E4%B8%8D%E8%83%BD%E7%A8%B3%E5%AE%9A%E8%A7%A6%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98/","section":"post","summary":"setTimeout(() =\u0026gt; { this.moveToLocation() // chooseLocation的包装函数 }, 150) 在页面onLoad生命周期里 用150ms的延迟来保证触发。具体原因未知，官方文档没有写，","tags":["微信公众号"],"title":"解决微信小程序 chooselocation在ios下不能稳定触发的问题","type":"post","url":"/post/201810/%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fchooselocation%E5%9C%A8ios%E4%B8%8B%E4%B8%8D%E8%83%BD%E7%A8%B3%E5%AE%9A%E8%A7%A6%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98/","weight":0,"wordcount":96},{"author":null,"categories":null,"content":null,"date":1538114380,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1538114380,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/","section":"tags","summary":"","tags":null,"title":"算法导论","type":"tags","url":"/tags/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1538114380,"description":"","dir":"post\\201809\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1538114380,"objectID":"66e1347a841db25aae4b0e01fda1d3da","permalink":"https://zhangzhengyi12.github.io/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%AE%97%E6%B3%95/","publishdate":"2018-09-28T05:59:40Z","readingtime":3,"relpermalink":"/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%AE%97%E6%B3%95/","section":"post","summary":"多线程算法 相对我来说比较局限，因为 js 是单线程的，所以只做了解，后续如果要用到可以在进行进一步的掌握。 首先来讲，目前的大部分算法都是基于单线程","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 多线程算法","type":"post","url":"/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%AE%97%E6%B3%95/","weight":0,"wordcount":1285},{"author":null,"categories":["Tech"],"content":null,"date":1538029031,"description":"","dir":"post\\201809\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1538029031,"objectID":"e1e9ec7dc9061bc66b66302d21b5f2c8","permalink":"https://zhangzhengyi12.github.io/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8D%81%E4%BA%8C%E5%85%A8%E7%82%B9%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%AE%97%E6%B3%95/","publishdate":"2018-09-27T06:17:11Z","readingtime":2,"relpermalink":"/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8D%81%E4%BA%8C%E5%85%A8%E7%82%B9%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%AE%97%E6%B3%95/","section":"post","summary":"复习 在我们之前的学习之中，已经了解三种不同的最短路径算法，他们在某些条件限制下拥有不同的性能 无权图 或者说权重全部相同 可以使用 广度优先搜索(借","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记  全点最短路径算法","type":"post","url":"/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8D%81%E4%BA%8C%E5%85%A8%E7%82%B9%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%AE%97%E6%B3%95/","weight":0,"wordcount":636},{"author":null,"categories":["Tech"],"content":null,"date":1536386443,"description":"","dir":"post\\201809\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1536386443,"objectID":"ef16b314b2a20c14f587a9ab7c90b69c","permalink":"https://zhangzhengyi12.github.io/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%95%AA%E5%A4%96%E7%AF%87%E5%A0%86%E4%B8%8E%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/","publishdate":"2018-09-08T06:00:43Z","readingtime":3,"relpermalink":"/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%95%AA%E5%A4%96%E7%AF%87%E5%A0%86%E4%B8%8E%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/","section":"post","summary":"最近在学习动态规划的时候发现非常需要优先队列的的基础，所以转而先学习一下优先队列算法。这里就找了比较通用的堆来入手了解优先队列。 堆 首先这里的","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 动态规划番外篇 堆与优先队列","type":"post","url":"/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%95%AA%E5%A4%96%E7%AF%87%E5%A0%86%E4%B8%8E%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/","weight":0,"wordcount":1423},{"author":null,"categories":["Tech"],"content":null,"date":1535691892,"description":"","dir":"post\\201808\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1535691892,"objectID":"c3711fced2a0ab8375eab7bbabb78545","permalink":"https://zhangzhengyi12.github.io/post/201808/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8D%81%E4%B8%80%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%AE%97%E6%B3%95/","publishdate":"2018-08-31T05:04:52Z","readingtime":5,"relpermalink":"/post/201808/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8D%81%E4%B8%80%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%AE%97%E6%B3%95/","section":"post","summary":"最短路径 最短路径问题是图论研究中的一个经典算法问题，旨在寻找图（由结点和路径组成的）中两结点之间的最短路径。 假设我们拥有一条路径 P P 经过一些","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 十一 最短路径算法","type":"post","url":"/post/201808/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8D%81%E4%B8%80%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%AE%97%E6%B3%95/","weight":0,"wordcount":2475},{"author":null,"categories":["Tech"],"content":null,"date":1534831686,"description":"","dir":"post\\201808\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1534831686,"objectID":"d908f6a36d384165624eadc6135a7533","permalink":"https://zhangzhengyi12.github.io/post/201808/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E5%8D%81%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","publishdate":"2018-08-21T06:08:06Z","readingtime":7,"relpermalink":"/post/201808/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E5%8D%81%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","section":"post","summary":"图论 最小生成树需要你掌握基本的图论 在书的附录中有介绍，可以先去看看 设 V 为 有向图（v,e）的顶点集 那么遍历这个图的成本为 O(V ^ 2) 如果一个有向图 G","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 十一 贪心算法 最小生成树","type":"post","url":"/post/201808/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E5%8D%81%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","weight":0,"wordcount":3389},{"author":null,"categories":["Tech"],"content":null,"date":1532889780,"description":"","dir":"post\\201805\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1532889780,"objectID":"62ebbe822b97fef42b8c1c365391f5f2","permalink":"https://zhangzhengyi12.github.io/post/201805/%E4%BD%BF%E7%94%A8nginx%E6%9D%A5%E8%AE%A9%E4%BD%A0%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2%E5%A4%9A%E4%B8%AAweb%E5%BA%94%E7%94%A8/","publishdate":"2018-07-29T18:43:00Z","readingtime":3,"relpermalink":"/post/201805/%E4%BD%BF%E7%94%A8nginx%E6%9D%A5%E8%AE%A9%E4%BD%A0%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2%E5%A4%9A%E4%B8%AAweb%E5%BA%94%E7%94%A8/","section":"post","summary":"最近捣鼓了不少时间，起初想到要弄这个就是因为 node 直接起 server 的方式有点暴力，因为占用了 80 端口就是真的占用了，很难在用一个 80 端口挂多个 WebServ","tags":["Nginx"],"title":"Nginx 简单配置转发 显示一个基本的多服务结构","type":"post","url":"/post/201805/%E4%BD%BF%E7%94%A8nginx%E6%9D%A5%E8%AE%A9%E4%BD%A0%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2%E5%A4%9A%E4%B8%AAweb%E5%BA%94%E7%94%A8/","weight":0,"wordcount":1328},{"author":null,"categories":["Tech"],"content":null,"date":1532889780,"description":"","dir":"post\\201805\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1532889780,"objectID":"0c26984baae89869bd114144073a90c7","permalink":"https://zhangzhengyi12.github.io/post/201805/%E5%B8%B8%E8%A7%81%E7%9A%84%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/","publishdate":"2018-07-29T18:43:00Z","readingtime":3,"relpermalink":"/post/201805/%E5%B8%B8%E8%A7%81%E7%9A%84%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/","section":"post","summary":"最近一直在复习排序算法，也有了不少更深入的解读，拿出来分享一下 冒泡排序 冒泡排序顾名思义，就是将一个个数字冒泡一样的推送到他该去的地方。 冒泡算","tags":["算法"],"title":"几种排序算法","type":"post","url":"/post/201805/%E5%B8%B8%E8%A7%81%E7%9A%84%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/","weight":0,"wordcount":1393},{"author":null,"categories":["Tech"],"content":null,"date":1532889780,"description":"","dir":"post\\201805\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1532889780,"objectID":"b021e249c4c41d0c9e26d22c205889af","permalink":"https://zhangzhengyi12.github.io/post/201805/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B8%80%E8%B5%B7%E6%AD%A5/","publishdate":"2018-07-29T18:43:00Z","readingtime":2,"relpermalink":"/post/201805/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B8%80%E8%B5%B7%E6%AD%A5/","section":"post","summary":"算法 什么是算法 算法（algorithm），在数学（算学）和计算机科学之中，为任何良定义的具体计算步骤的一个序列，常用于计算、数据处理和自动推","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 一 起步","type":"post","url":"/post/201805/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B8%80%E8%B5%B7%E6%AD%A5/","weight":0,"wordcount":749},{"author":null,"categories":["Tech"],"content":null,"date":1532889780,"description":"","dir":"post\\201806\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1532889780,"objectID":"5ba054e800dd276f97f8623de1c1e1da","permalink":"https://zhangzhengyi12.github.io/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%88%86%E6%B2%BB%E6%B3%95/","publishdate":"2018-07-29T18:43:00Z","readingtime":2,"relpermalink":"/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%88%86%E6%B2%BB%E6%B3%95/","section":"post","summary":"名词解释 多项式级 即 n^2 n^3 可以被认为是可控的算法复杂度级别 指数级 x^n 级别 非常恐怖 分治法 分治法是一种极为重要的算法设计思想，他的核心思想就是把大问题","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 二 分治法","type":"post","url":"/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%88%86%E6%B2%BB%E6%B3%95/","weight":0,"wordcount":685},{"author":null,"categories":["Tech"],"content":null,"date":1532889780,"description":"","dir":"post\\201807\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1532889780,"objectID":"838d89088ed4affb7ea300f61586c118","permalink":"https://zhangzhengyi12.github.io/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%85%AB%E7%AB%9E%E4%BA%89%E6%80%A7%E5%88%86%E6%9E%90%E8%87%AA%E7%BB%84%E7%BB%87%E8%A1%A8/","publishdate":"2018-07-29T18:43:00Z","readingtime":2,"relpermalink":"/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%85%AB%E7%AB%9E%E4%BA%89%E6%80%A7%E5%88%86%E6%9E%90%E8%87%AA%E7%BB%84%E7%BB%87%E8%A1%A8/","section":"post","summary":"自组织表 先来理解两个概念 在线算法与离线算法 在线算法（也成为线上算法）：是一个处理数据的一种方式，他不要求建立数据结构的时候所有数据源全部就绪","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 八 竞争性分析，自组织表","type":"post","url":"/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%85%AB%E7%AB%9E%E4%BA%89%E6%80%A7%E5%88%86%E6%9E%90%E8%87%AA%E7%BB%84%E7%BB%87%E8%A1%A8/","weight":0,"wordcount":563},{"author":null,"categories":["Tech"],"content":null,"date":1532889780,"description":"","dir":"post\\201806\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1532889780,"objectID":"b77cee1018293ae507d4a4861a4ad497","permalink":"https://zhangzhengyi12.github.io/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B8%89%E4%B8%AD%E4%BD%8D%E6%95%B0%E4%B8%8E%E9%A1%BA%E5%BA%8F%E7%BB%9F%E8%AE%A1/","publishdate":"2018-07-29T18:43:00Z","readingtime":1,"relpermalink":"/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B8%89%E4%B8%AD%E4%BD%8D%E6%95%B0%E4%B8%8E%E9%A1%BA%E5%BA%8F%E7%BB%9F%E8%AE%A1/","section":"post","summary":"选择算法 所谓的选择算法，其基本规则就是从一个无序的数组中，找到第 i 小的值。 最简单的做法其实就是将数组排序，下标+1 就是它的 i。但是，就算依托","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 四 中位数与顺序统计","type":"post","url":"/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B8%89%E4%B8%AD%E4%BD%8D%E6%95%B0%E4%B8%8E%E9%A1%BA%E5%BA%8F%E7%BB%9F%E8%AE%A1/","weight":0,"wordcount":400},{"author":null,"categories":["Tech"],"content":null,"date":1532889780,"description":"","dir":"post\\201806\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1532889780,"objectID":"56ccf9fb75431fa0d8162e44e08fdd8d","permalink":"https://zhangzhengyi12.github.io/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%9B%9B%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/","publishdate":"2018-07-29T18:43:00Z","readingtime":5,"relpermalink":"/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%9B%9B%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/","section":"post","summary":"二叉树 二叉树本身就是非常常见的一种数据结构了，对于这种数据结构当然有一些基本操作 增删改查最大最小等等，一个二叉树的的基本操作都和二叉树的高度","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 四 二叉搜索树","type":"post","url":"/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%9B%9B%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/","weight":0,"wordcount":2050},{"author":null,"categories":["Tech"],"content":null,"date":1532889780,"description":"","dir":"post\\201806\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1532889780,"objectID":"4fb68529f1f93d70fc4888edfb66b795","permalink":"https://zhangzhengyi12.github.io/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%9B%9B%E5%85%A8%E5%9F%9F%E5%93%88%E5%B8%8C%E5%92%8C%E5%AE%8C%E5%85%A8%E5%93%88%E5%B8%8C/","publishdate":"2018-07-29T18:43:00Z","readingtime":2,"relpermalink":"/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%9B%9B%E5%85%A8%E5%9F%9F%E5%93%88%E5%B8%8C%E5%92%8C%E5%AE%8C%E5%85%A8%E5%93%88%E5%B8%8C/","section":"post","summary":"HASH 算法的缺陷 首先，我们所了解到的所有简单的复杂的 HASH 函数总会拥有一些薄弱点，即输入一些特殊的 key 会很容易返回相同 KEY 导致多条数据插入到同一个槽中，","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 四 全域哈希和完全哈希","type":"post","url":"/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%9B%9B%E5%85%A8%E5%9F%9F%E5%93%88%E5%B8%8C%E5%92%8C%E5%AE%8C%E5%85%A8%E5%93%88%E5%B8%8C/","weight":0,"wordcount":522},{"author":null,"categories":["Tech"],"content":null,"date":1532889780,"description":"","dir":"post\\201806\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1532889780,"objectID":"82fcb5498e138b22a2e0048bfef55fd0","permalink":"https://zhangzhengyi12.github.io/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%93%88%E5%B8%8C%E8%A1%A8/","publishdate":"2018-07-29T18:43:00Z","readingtime":3,"relpermalink":"/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%93%88%E5%B8%8C%E8%A1%A8/","section":"post","summary":"直接寻址 相对于哈希表来说，直接寻址是一种更为简单的方法，即使用一组键集合 K 来代表一组相应的值 U,但是直接寻址受限于一个重要的缺陷，即K可能相","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 四 哈希表","type":"post","url":"/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%93%88%E5%B8%8C%E8%A1%A8/","weight":0,"wordcount":1397},{"author":null,"categories":["Tech"],"content":null,"date":1532152806,"description":"","dir":"post\\201807\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1532152806,"objectID":"659ea483d49e1859c23508f3966dbd5c","permalink":"https://zhangzhengyi12.github.io/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E4%B8%83%E5%B9%B3%E6%91%8A%E5%88%86%E6%9E%90%E8%A1%A8%E7%9A%84%E6%89%A9%E5%A2%9E%E5%8A%BF%E8%83%BD%E6%96%B9%E6%B3%95/","publishdate":"2018-07-21T06:00:06Z","readingtime":3,"relpermalink":"/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E4%B8%83%E5%B9%B3%E6%91%8A%E5%88%86%E6%9E%90%E8%A1%A8%E7%9A%84%E6%89%A9%E5%A2%9E%E5%8A%BF%E8%83%BD%E6%96%B9%E6%B3%95/","section":"post","summary":"动态表 简单阐述一下动态表的基本思想，先建立一个表，当插入的元素大于表的大小时，建立一个新表（大小为旧表的两倍），并将旧表中的所有数据复制到新","tags":["算法","数据结构","算法导论"],"title":"算法导论 七 平摊分析，表的扩增，势能方法","type":"post","url":"/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E4%B8%83%E5%B9%B3%E6%91%8A%E5%88%86%E6%9E%90%E8%A1%A8%E7%9A%84%E6%89%A9%E5%A2%9E%E5%8A%BF%E8%83%BD%E6%96%B9%E6%B3%95/","weight":0,"wordcount":1348},{"author":null,"categories":["Tech"],"content":null,"date":1532152806,"description":"","dir":"post\\201807\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1532152806,"objectID":"2db76ec7b62e565f78ef6992612d9b97","permalink":"https://zhangzhengyi12.github.io/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B9%9D%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/","publishdate":"2018-07-21T06:00:06Z","readingtime":5,"relpermalink":"/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B9%9D%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/","section":"post","summary":"动态规划 动态规划（英语：Dynamic programming，简称DP）是一种在数学、管理科学、计算机科学、经济学和生物信息学中使用的，通过","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 九 动态规划","type":"post","url":"/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B9%9D%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/","weight":0,"wordcount":2357},{"author":null,"categories":["Tech"],"content":null,"date":1532152806,"description":"","dir":"post\\201807\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1532152806,"objectID":"ee8301bdd1658eaaea114bc6652ed6fb","permalink":"https://zhangzhengyi12.github.io/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%94%E6%89%A9%E5%85%85%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%8A%A8%E6%80%81%E6%9C%89%E5%BA%8F%E7%BB%9F%E8%AE%A1%E5%92%8C%E5%8C%BA%E9%97%B4%E6%A0%91/","publishdate":"2018-07-21T06:00:06Z","readingtime":2,"relpermalink":"/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%94%E6%89%A9%E5%85%85%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%8A%A8%E6%80%81%E6%9C%89%E5%BA%8F%E7%BB%9F%E8%AE%A1%E5%92%8C%E5%8C%BA%E9%97%B4%E6%A0%91/","section":"post","summary":"这一章的主要内容其实是如何利用现有的数据结构来扩充成一个新的数据结构，并让这种新的数据结构具有一些神奇的特性。 动态顺序统计 我们在前面就学习了","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 五 扩充的数据结构、动态有序统计和区间树","type":"post","url":"/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%94%E6%89%A9%E5%85%85%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%8A%A8%E6%80%81%E6%9C%89%E5%BA%8F%E7%BB%9F%E8%AE%A1%E5%92%8C%E5%8C%BA%E9%97%B4%E6%A0%91/","weight":0,"wordcount":879},{"author":null,"categories":["Tech"],"content":null,"date":1532152806,"description":"","dir":"post\\201807\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1532152806,"objectID":"7efe0bbc75e51370cf4d6e7fb0040424","permalink":"https://zhangzhengyi12.github.io/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%85%AD%E8%B7%B3%E8%B7%83%E8%A1%A8/","publishdate":"2018-07-21T06:00:06Z","readingtime":3,"relpermalink":"/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%85%AD%E8%B7%B3%E8%B7%83%E8%A1%A8/","section":"post","summary":"跳跃表（skiplists） 跳跃表是一种增强版的链表，他能在O(lgn)的时间内完成搜索。 首先，我们熟知的链表本身具有的特性就是容易删除与增","tags":["算法","数据结构","算法导论"],"title":"算法导论笔记 六 跳跃表","type":"post","url":"/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%85%AD%E8%B7%B3%E8%B7%83%E8%A1%A8/","weight":0,"wordcount":1235},{"author":null,"categories":null,"content":null,"date":1524987656,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1524987656,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/chrome%E6%89%A9%E5%B1%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/chrome%E6%89%A9%E5%B1%95/","section":"tags","summary":"","tags":null,"title":"Chrome扩展","type":"tags","url":"/tags/chrome%E6%89%A9%E5%B1%95/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1524987656,"description":"","dir":"post\\201803\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1524987656,"objectID":"bb49133d17fe5bc2c2792129961f6acb","permalink":"https://zhangzhengyi12.github.io/post/201803/reactnative%E8%BE%BE%E8%BE%BE%E7%9C%8B%E4%B9%A6%E9%98%85%E8%AF%BB%E5%99%A8/","publishdate":"2018-04-29T07:40:56Z","readingtime":5,"relpermalink":"/post/201803/reactnative%E8%BE%BE%E8%BE%BE%E7%9C%8B%E4%B9%A6%E9%98%85%E8%AF%BB%E5%99%A8/","section":"post","summary":"What is React Native? React Native (简称RN)是Facebook于2015年4月开源的跨平台移动应用开发框架，是Facebook早先开源的UI框架 React 在原生移动应用","tags":["ReactNative"],"title":"React-Native 达达看书阅读器","type":"post","url":"/post/201803/reactnative%E8%BE%BE%E8%BE%BE%E7%9C%8B%E4%B9%A6%E9%98%85%E8%AF%BB%E5%99%A8/","weight":0,"wordcount":2014},{"author":null,"categories":null,"content":null,"date":1524987656,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1524987656,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/reactnative/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/reactnative/","section":"tags","summary":"","tags":null,"title":"ReactNative","type":"tags","url":"/tags/reactnative/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1524987656,"description":"","dir":"post\\201804\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1524987656,"objectID":"ed1838aa98c94f151fdf37f4bda19555","permalink":"https://zhangzhengyi12.github.io/post/201804/%E4%BD%BF%E7%94%A8react%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91chrome%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F/","publishdate":"2018-04-29T07:40:56Z","readingtime":2,"relpermalink":"/post/201804/%E4%BD%BF%E7%94%A8react%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91chrome%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F/","section":"post","summary":"首先要说明的是这个文章其实属于翻译或者说转述，我是从google上搜索到了这篇原文，并且用它的构建流程成功开发了一个扩展，很爽，速度很快，五","tags":["Chrome扩展"],"title":"使用React快速开发Chrome扩展程序","type":"post","url":"/post/201804/%E4%BD%BF%E7%94%A8react%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91chrome%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F/","weight":0,"wordcount":726},{"author":null,"categories":null,"content":null,"date":1519622415,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1519622415,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/github/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/github/","section":"tags","summary":"","tags":null,"title":"Github","type":"tags","url":"/tags/github/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1519622415,"description":"","dir":"post\\201802\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1519622415,"objectID":"318dbf2edff1988bf38f22c94a2e4dfc","permalink":"https://zhangzhengyi12.github.io/post/201802/%E4%B8%BAreactnative%E6%B7%BB%E5%8A%A0redux/","publishdate":"2018-02-26T05:20:15Z","readingtime":2,"relpermalink":"/post/201802/%E4%B8%BAreactnative%E6%B7%BB%E5%8A%A0redux/","section":"post","summary":"其实在网上随便一搜索 react 加 redux 的可以说特别的多，但是为 React-native 加的还真的很少，所以我在实践完成之后就打算记录一下在 RN 中如何启用 redux，其实和 React 的用","tags":["ReactNative"],"title":"为React-native添加redux","type":"post","url":"/post/201802/%E4%B8%BAreactnative%E6%B7%BB%E5%8A%A0redux/","weight":0,"wordcount":894},{"author":null,"categories":["Tech"],"content":null,"date":1519622415,"description":"","dir":"post\\201802\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1519622415,"objectID":"ef1aaa14d54f62a4645e8b3439f85388","permalink":"https://zhangzhengyi12.github.io/post/201802/%E5%88%A9%E7%94%A8git%E7%9A%84submodule%E5%AD%90%E6%A8%A1%E5%9D%97%E6%9D%A5%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE/","publishdate":"2018-02-26T05:20:15Z","readingtime":2,"relpermalink":"/post/201802/%E5%88%A9%E7%94%A8git%E7%9A%84submodule%E5%AD%90%E6%A8%A1%E5%9D%97%E6%9D%A5%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE/","section":"post","summary":"我相信很多人都有过在一个项目中引入一个乃至多个库的经历，但是如果我们的主项目使用git来进行版本控制并且使用单纯的add\u0026amp;commi","tags":["Github"],"title":"利用git的submodule(子模块) 来管理项目","type":"post","url":"/post/201802/%E5%88%A9%E7%94%A8git%E7%9A%84submodule%E5%AD%90%E6%A8%A1%E5%9D%97%E6%9D%A5%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE/","weight":0,"wordcount":792},{"author":null,"categories":["Tech"],"content":null,"date":1515559010,"description":"","dir":"post\\201712\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1515559010,"objectID":"5a99f47a78828d0c8473219f25ffc5b6","permalink":"https://zhangzhengyi12.github.io/post/201712/chrome%E6%89%A9%E5%B1%95%E7%94%B5%E5%BD%B1%E8%B5%84%E6%BA%90%E6%8F%90%E9%86%92/","publishdate":"2018-01-10T04:36:50Z","readingtime":1,"relpermalink":"/post/201712/chrome%E6%89%A9%E5%B1%95%E7%94%B5%E5%BD%B1%E8%B5%84%E6%BA%90%E6%8F%90%E9%86%92/","section":"post","summary":"预览 其实这个插件很早以前就完成了，但是实现的逻辑完全不一样，直接AJAX获取然后插入到插件页面中，问题就在最近Chrome版本一升级炸了，和","tags":["Chrome扩展","爬虫"],"title":"Chrome扩展：电影资源提醒","type":"post","url":"/post/201712/chrome%E6%89%A9%E5%B1%95%E7%94%B5%E5%BD%B1%E8%B5%84%E6%BA%90%E6%8F%90%E9%86%92/","weight":0,"wordcount":356},{"author":null,"categories":null,"content":null,"date":1515559010,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1515559010,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/ts/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ts/","section":"tags","summary":"","tags":null,"title":"TS","type":"tags","url":"/tags/ts/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1515559010,"description":"","dir":"post\\201801\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1515559010,"objectID":"c295318b9b4d90bb445b816a20aed5a5","permalink":"https://zhangzhengyi12.github.io/post/201801/%E5%9C%A8vue2.5%E4%B8%AD%E4%BD%BF%E7%94%A8typescript/","publishdate":"2018-01-10T04:36:50Z","readingtime":3,"relpermalink":"/post/201801/%E5%9C%A8vue2.5%E4%B8%AD%E4%BD%BF%E7%94%A8typescript/","section":"post","summary":"本文的环境依旧是由Vue-cli工具初始化的。 安装 npm install typescript ts-loader --save-dev 配置 首先在webpack.base.config.js中设置一下基本的Loade","tags":["TS"],"title":"在Vue2.5中使用typeScript","type":"post","url":"/post/201801/%E5%9C%A8vue2.5%E4%B8%AD%E4%BD%BF%E7%94%A8typescript/","weight":0,"wordcount":1265},{"author":null,"categories":null,"content":null,"date":1515559010,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1515559010,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E7%88%AC%E8%99%AB/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%88%AC%E8%99%AB/","section":"tags","summary":"","tags":null,"title":"爬虫","type":"tags","url":"/tags/%E7%88%AC%E8%99%AB/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1515544438,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1515544438,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/pwa/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pwa/","section":"tags","summary":"","tags":null,"title":"PWA","type":"tags","url":"/tags/pwa/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1515544438,"description":"","dir":"post\\201801\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1515544438,"objectID":"10fc2a0df4c8a4eac92b261a82d21179","permalink":"https://zhangzhengyi12.github.io/post/201801/%E8%BD%AC%E5%88%B6%E4%B8%80%E4%B8%AAtodoapp%E4%B8%BApwa%E5%BA%94%E7%94%A8/","publishdate":"2018-01-10T00:33:58Z","readingtime":4,"relpermalink":"/post/201801/%E8%BD%AC%E5%88%B6%E4%B8%80%E4%B8%AAtodoapp%E4%B8%BApwa%E5%BA%94%E7%94%A8/","section":"post","summary":"What is PWA? PWA全称Progress Web Application，也就是渐进式web应用，是由Google在2015年就提出的概念。它本质上是一个普","tags":["PWA"],"title":"转制一个Todo App 为 PWA 应用","type":"post","url":"/post/201801/%E8%BD%AC%E5%88%B6%E4%B8%80%E4%B8%AAtodoapp%E4%B8%BApwa%E5%BA%94%E7%94%A8/","weight":0,"wordcount":1550},{"author":null,"categories":null,"content":null,"date":1515312858,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1515312858,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/css/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/css/","section":"tags","summary":"","tags":null,"title":"CSS","type":"tags","url":"/tags/css/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1515312858,"description":"","dir":"post\\201801\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1515312858,"objectID":"6588afd9d9f6efa375f024e890e6e0e6","permalink":"https://zhangzhengyi12.github.io/post/201801/css3transform%E5%AE%9E%E7%8E%B0%E6%98%9F%E7%90%83%E5%A4%A7%E6%88%98%E5%BC%80%E5%9C%BA%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/","publishdate":"2018-01-07T08:14:18Z","readingtime":2,"relpermalink":"/post/201801/css3transform%E5%AE%9E%E7%8E%B0%E6%98%9F%E7%90%83%E5%A4%A7%E6%88%98%E5%BC%80%E5%9C%BA%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/","section":"post","summary":"灵感来自于segmentfault的一个页面，在看到之后仔细研究了一下transform的3d变形效果。 其实css3的3d效果也是伪3d,依","tags":["CSS"],"title":"CSS3 transform 实现星球大战开场动画效果","type":"post","url":"/post/201801/css3transform%E5%AE%9E%E7%8E%B0%E6%98%9F%E7%90%83%E5%A4%A7%E6%88%98%E5%BC%80%E5%9C%BA%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/","weight":0,"wordcount":590},{"author":null,"categories":null,"content":null,"date":1513328423,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1513328423,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/websocket/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/websocket/","section":"tags","summary":"","tags":null,"title":"Websocket","type":"tags","url":"/tags/websocket/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1513328423,"description":"","dir":"post\\201712\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1513328423,"objectID":"7b49f02aa73bb4df282294075d85a95a","permalink":"https://zhangzhengyi12.github.io/post/201712/%E5%88%A9%E7%94%A8websocket%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97%E5%AF%B9%E6%88%98%E6%B8%B8%E6%88%8F/","publishdate":"2017-12-15T09:00:23Z","readingtime":2,"relpermalink":"/post/201712/%E5%88%A9%E7%94%A8websocket%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97%E5%AF%B9%E6%88%98%E6%B8%B8%E6%88%8F/","section":"post","summary":"预览 技术栈 主要利用了websocket，由于ws天生是可以跨域的，所以我将静态页面部署在了gh-page上，而负责后端交互的部分我放在了我的","tags":["Websocket"],"title":"利用websocket技术实现一个俄罗斯方块对战游戏","type":"post","url":"/post/201712/%E5%88%A9%E7%94%A8websocket%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97%E5%AF%B9%E6%88%98%E6%B8%B8%E6%88%8F/","weight":0,"wordcount":938},{"author":null,"categories":["Tech"],"content":null,"date":1513328423,"description":"","dir":"post\\201712\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1513328423,"objectID":"b6aaa5298ab8bd2057c7e06e3f9db8e9","permalink":"https://zhangzhengyi12.github.io/post/201712/%E8%A7%A3%E5%86%B3%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E6%97%A0%E6%B3%95%E8%B0%83%E7%94%A8audio%E7%9A%84play%E6%96%B9%E6%B3%95/","publishdate":"2017-12-15T09:00:23Z","readingtime":1,"relpermalink":"/post/201712/%E8%A7%A3%E5%86%B3%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E6%97%A0%E6%B3%95%E8%B0%83%E7%94%A8audio%E7%9A%84play%E6%96%B9%E6%B3%95/","section":"post","summary":"最近在写一个移动端音乐播放器的时候遇到一个非常难受的问题，在PC可以正常调用audio标签的play方法，在在手机移动端上的绝大部分浏览器都","tags":["微信浏览器"],"title":"解决移动端浏览器无法调用audio的play方法","type":"post","url":"/post/201712/%E8%A7%A3%E5%86%B3%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E6%97%A0%E6%B3%95%E8%B0%83%E7%94%A8audio%E7%9A%84play%E6%96%B9%E6%B3%95/","weight":0,"wordcount":439},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201706\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":7900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"7e9d45444f2252f68bd0c78e3f772e33","permalink":"https://zhangzhengyi12.github.io/post/201706/ecmascript6%E5%85%A5%E9%97%A8/","publishdate":"2017-11-24T05:27:33Z","readingtime":16,"relpermalink":"/post/201706/ecmascript6%E5%85%A5%E9%97%A8/","section":"post","summary":"最近尝试了解一些函数式编程(Function program)的东西，但是很多的语法都用到了ES6，所以先开始学习一下ES6吧。特别是prom","tags":["Web"],"title":"ECMAScript6 入门","type":"post","url":"/post/201706/ecmascript6%E5%85%A5%E9%97%A8/","weight":0,"wordcount":7885},{"author":null,"categories":null,"content":null,"date":1511501253,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1511501253,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/game/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/game/","section":"tags","summary":"","tags":null,"title":"Game","type":"tags","url":"/tags/game/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201707\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"c62ae8f25796b65b7c0c295060f5b7ab","permalink":"https://zhangzhengyi12.github.io/post/201707/gulpwebpackbabelcss%E5%8E%8B%E7%BC%A9%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/","publishdate":"2017-11-24T05:27:33Z","readingtime":3,"relpermalink":"/post/201707/gulpwebpackbabelcss%E5%8E%8B%E7%BC%A9%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/","section":"post","summary":"第一步 环境搭建流程 以下均按照流程 创建工程目录 C:. ├─.idea ├─app //开发目录 │ ├─.idea │ ├─css │ ├─doc │ ├─img │ ├─","tags":["Web"],"title":"gulp+webpack+babel+css压缩模块 实现自动构建工具","type":"post","url":"/post/201707/gulpwebpackbabelcss%E5%8E%8B%E7%BC%A9%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/","weight":0,"wordcount":1223},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201711\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"16a544dfbc25301cd03adebfae80dca9","permalink":"https://zhangzhengyi12.github.io/post/201711/js%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/","publishdate":"2017-11-24T05:27:33Z","readingtime":10,"relpermalink":"/post/201711/js%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/","section":"post","summary":"函数式编程 作为一种越来越重要的编程泛型，我在学习完SICP之后也见识到了他极为强大的抽象能力，但是如何把函数式编程中的技巧合理合适的运用到J","tags":["函数式编程"],"title":"Javascript 中的函数式编程","type":"post","url":"/post/201711/js%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/","weight":0,"wordcount":4679},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201707\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":5100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"ca7e316c6d69de1f610382e9475d6fd6","permalink":"https://zhangzhengyi12.github.io/post/201707/javascript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","publishdate":"2017-11-24T05:27:33Z","readingtime":11,"relpermalink":"/post/201707/javascript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","section":"post","summary":"模式可以认为是前人对于编程问题的解决方案，而所有的设计模式的主题都是分离多变的部分和恒定的部分。 单例模式 单例模式值得就是只有一个实例的模式。","tags":["Web"],"title":"Javascript 设计模式","type":"post","url":"/post/201707/javascript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":5013},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201707\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"99fd9bcee367ebd35b1047233279529b","permalink":"https://zhangzhengyi12.github.io/post/201707/javascript%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E5%BA%94%E7%94%A8/","publishdate":"2017-11-24T05:27:33Z","readingtime":3,"relpermalink":"/post/201707/javascript%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E5%BA%94%E7%94%A8/","section":"post","summary":"最近在看一些关于设计模式的书。对高阶函数的应用方面做一些记录 AOP AOP意为面向切面编程，主要思想就是把那些跟业务逻辑无关的部分抽离出来，比如日","tags":["Web"],"title":"Javascript 高阶函数","type":"post","url":"/post/201707/javascript%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E5%BA%94%E7%94%A8/","weight":0,"wordcount":1212},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201706\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"6f2d02dff142f5e8e508b8ca5f4a4ef2","permalink":"https://zhangzhengyi12.github.io/post/201706/javascript%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BA%8C%E5%8F%89%E6%A0%91/","publishdate":"2017-11-24T05:27:33Z","readingtime":4,"relpermalink":"/post/201706/javascript%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BA%8C%E5%8F%89%E6%A0%91/","section":"post","summary":"JavaScript 二叉树 最近在学习一些数据结构方面的知识，稍作记录。 二叉树的创建 首先二叉树是一种树形的结构，那么他的特点就是每个构建树的节点最多只有两个子节","tags":["Web"],"title":"JavaScript数据结构 二叉树","type":"post","url":"/post/201706/javascript%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BA%8C%E5%8F%89%E6%A0%91/","weight":0,"wordcount":1596},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201707\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"499bfe9c67a546bacde3ec32fd633599","permalink":"https://zhangzhengyi12.github.io/post/201707/lol%E6%A8%A1%E6%8B%9F%E6%8A%BD%E5%A5%96/","publishdate":"2017-11-24T05:27:33Z","readingtime":1,"relpermalink":"/post/201707/lol%E6%A8%A1%E6%8B%9F%E6%8A%BD%E5%A5%96/","section":"post","summary":"最近试着写了一个LOL模拟抽奖的页面，大家可以随便玩玩，也没任何广告。 删除了一小部分失效的英雄，皮肤部分没动。 所有英雄皮肤的几率都是正好平分","tags":["Game"],"title":"LOL模拟抽奖","type":"post","url":"/post/201707/lol%E6%A8%A1%E6%8B%9F%E6%8A%BD%E5%A5%96/","weight":0,"wordcount":122},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201708\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"ec6cd0c55d37ddc38253b90b18d82411","permalink":"https://zhangzhengyi12.github.io/post/201708/markdownpad2pro%E6%BF%80%E6%B4%BB%E7%A0%81/","publishdate":"2017-11-24T05:27:33Z","readingtime":1,"relpermalink":"/post/201708/markdownpad2pro%E6%BF%80%E6%B4%BB%E7%A0%81/","section":"post","summary":"邮箱： Soar360@live.com 授权秘钥： GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==","tags":null,"title":"markdown pad 2 激活码","type":"post","url":"/post/201708/markdownpad2pro%E6%BF%80%E6%B4%BB%E7%A0%81/","weight":0,"wordcount":10},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201709\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"1e34812b94f336d87321ae4ca671b16e","permalink":"https://zhangzhengyi12.github.io/post/201709/vueslot%E4%BD%BF%E7%94%A8%E5%A6%82%E4%BD%95%E5%AF%B9%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E6%93%8D%E4%BD%9C/","publishdate":"2017-11-24T05:27:33Z","readingtime":1,"relpermalink":"/post/201709/vueslot%E4%BD%BF%E7%94%A8%E5%A6%82%E4%BD%95%E5%AF%B9%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E6%93%8D%E4%BD%9C/","section":"post","summary":"假设你拥有父组件A,子轮播图组件B，你想在用A中使用B， 假设你使用slot对其进行模板的传递 \u0026lt;div class=\u0026quot;slider-wrapper\u0026quot;\u0026gt; \u0026lt;slider\u0026gt; \u0026lt;div v-for=\u0026quot;item of slider\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;\u0026quot;\u0026gt;\u0026lt;img :src=\u0026quot;item.pic\u0026quot; alt=\u0026quot;\u0026quot;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; // slot \u0026lt;/slider\u0026gt; \u0026lt;/div\u0026gt; // 但是轮播必然牵","tags":["Web","Vue.js"],"title":"Vue.js slot 初探","type":"post","url":"/post/201709/vueslot%E4%BD%BF%E7%94%A8%E5%A6%82%E4%BD%95%E5%AF%B9%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E6%93%8D%E4%BD%9C/","weight":0,"wordcount":378},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201708\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"a79830875629fdcf28a92485fec4a2b4","permalink":"https://zhangzhengyi12.github.io/post/201708/%E7%94%A8vue%E5%86%99%E4%B8%AA%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84todoapp/","publishdate":"2017-11-24T05:27:33Z","readingtime":3,"relpermalink":"/post/201708/%E7%94%A8vue%E5%86%99%E4%B8%AA%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84todoapp/","section":"post","summary":"展示 为了更好的学习vue，所以找个一个todoList的渲染图，动手制作一个todoApp。因为渲染图是纯移动端的，所以我的布局逻辑优化都是","tags":["Vue.js"],"title":"Vue.js TODO APP","type":"post","url":"/post/201708/%E7%94%A8vue%E5%86%99%E4%B8%AA%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84todoapp/","weight":0,"wordcount":1018},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201709\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"47526333eca1d6aafef3b678464b059d","permalink":"https://zhangzhengyi12.github.io/post/201709/%E4%BD%BF%E7%94%A8socket.io%E5%AE%9E%E7%8E%B0%E6%9E%81%E7%AE%80%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/","publishdate":"2017-11-24T05:27:33Z","readingtime":1,"relpermalink":"/post/201709/%E4%BD%BF%E7%94%A8socket.io%E5%AE%9E%E7%8E%B0%E6%9E%81%E7%AE%80%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/","section":"post","summary":"展示 代码 两份文件，client server //test.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;\u0026lt;/title\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;meta name=\u0026quot;viewport\u0026quot; content=\u0026quot;width=device-width, initial-scale=1\u0026quot;\u0026gt; \u0026lt;script src=\u0026quot;https://cdn.bootcss.com/socket.io/2.0.3/socket.io.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;input type=\u0026quot;text\u0026quot; id=\u0026quot;input\u0026quot;\u0026gt; \u0026lt;button id=\u0026quot;sendMess\u0026quot;\u0026gt;send\u0026lt;/button\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot;\u0026gt; let socket = io(\u0026quot;ws://localhost:4500/\u0026quot;) //show APi function showMessage(str,type){ let box = document.createElement(\u0026quot;div\u0026quot;) box.innerHTML = str if(type === \u0026quot;enter\u0026quot;){ box.style.color = \u0026quot;#33B5FF\u0026quot;; }else if(type === \u0026quot;leave\u0026quot;){ box.style.color === \u0026quot;red\u0026quot; }else{","tags":["Websocket"],"title":"使用socket.io实现极简即时通讯","type":"post","url":"/post/201709/%E4%BD%BF%E7%94%A8socket.io%E5%AE%9E%E7%8E%B0%E6%9E%81%E7%AE%80%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/","weight":0,"wordcount":388},{"author":null,"categories":null,"content":null,"date":1511501253,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1511501253,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/","section":"tags","summary":"","tags":null,"title":"函数式编程","type":"tags","url":"/tags/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201706\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"8a9e1dd88c3e3ef9a9a5d4c32eb2559c","permalink":"https://zhangzhengyi12.github.io/post/201706/%E5%88%A9%E7%94%A8require.js%E5%AE%9E%E7%8E%B0%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/","publishdate":"2017-11-24T05:27:33Z","readingtime":3,"relpermalink":"/post/201706/%E5%88%A9%E7%94%A8require.js%E5%AE%9E%E7%8E%B0%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/","section":"post","summary":"最近使用require尝试开发了一个弹窗组件，所以把一些组件化的思想和过程记录下来。 使用的库 jQuery require jQueryUI 实现的功能 三种流行的弹窗 带有宽高位置设置 可","tags":["Web"],"title":"利用 require.js 实现组件化开发","type":"post","url":"/post/201706/%E5%88%A9%E7%94%A8require.js%E5%AE%9E%E7%8E%B0%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/","weight":0,"wordcount":1385},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201706\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"e01e0e270e9f19bfdf5aa855a1332b5b","permalink":"https://zhangzhengyi12.github.io/post/201706/%E5%88%A9%E7%94%A8ghpages%E5%B1%95%E7%A4%BA%E8%87%AA%E5%B7%B1%E7%9A%84demo/","publishdate":"2017-11-24T05:27:33Z","readingtime":1,"relpermalink":"/post/201706/%E5%88%A9%E7%94%A8ghpages%E5%B1%95%E7%A4%BA%E8%87%AA%E5%B7%B1%E7%9A%84demo/","section":"post","summary":"之前一直都是用的git-demo-preview来展示预览自己做的DEMO和工程，但是有很多不足 会加载很多无关的JS 访问速度不够理想 所以最近","tags":["Web"],"title":"利用gh-pages展示自己的DEMO","type":"post","url":"/post/201706/%E5%88%A9%E7%94%A8ghpages%E5%B1%95%E7%A4%BA%E8%87%AA%E5%B7%B1%E7%9A%84demo/","weight":0,"wordcount":426},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201706\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"0ba03a73649afb719aeb9d8f152b3f1f","permalink":"https://zhangzhengyi12.github.io/post/201706/%E5%88%A9%E7%94%A8require%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%92%8C%E8%BD%AE%E6%92%AD%E5%9B%BE/","publishdate":"2017-11-24T05:27:33Z","readingtime":3,"relpermalink":"/post/201706/%E5%88%A9%E7%94%A8require%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%92%8C%E8%BD%AE%E6%92%AD%E5%9B%BE/","section":"post","summary":"最近学习require趁热打铁写了两个非常常见的组件，一个是侧边栏的插件，一个是轮播图或者叫他选项卡。不得不说组件化开发非常的清晰，便于管理","tags":["Web"],"title":"利用require组件化开发侧边栏和轮播图","type":"post","url":"/post/201706/%E5%88%A9%E7%94%A8require%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%92%8C%E8%BD%AE%E6%92%AD%E5%9B%BE/","weight":0,"wordcount":1233},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201710\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"5b3404ef113590f7b92c4b29f657baa9","permalink":"https://zhangzhengyi12.github.io/post/201710/%E5%AF%B9dom%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%89%8D%E7%BC%80%E5%81%9A%E6%8A%BD%E8%B1%A1%E5%8C%85%E8%A3%85/","publishdate":"2017-11-24T05:27:33Z","readingtime":1,"relpermalink":"/post/201710/%E5%AF%B9dom%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%89%8D%E7%BC%80%E5%81%9A%E6%8A%BD%E8%B1%A1%E5%8C%85%E8%A3%85/","section":"post","summary":"我们在做一些DOM操作的时候，常常利用到修改样式来进行一个动画，但是这种用到的样式属性往往是有前缀的。而在CSS中其实是有自动prefix的","tags":["Web"],"title":"对DOM样式操作浏览器前缀做抽象包装","type":"post","url":"/post/201710/%E5%AF%B9dom%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%89%8D%E7%BC%80%E5%81%9A%E6%8A%BD%E8%B1%A1%E5%8C%85%E8%A3%85/","weight":0,"wordcount":273},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201708\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"90ee0a43bceded4065a73dc3dbe04f8b","permalink":"https://zhangzhengyi12.github.io/post/201708/%E6%88%91%E7%9A%84webpack%E5%AE%9E%E6%88%98/","publishdate":"2017-11-24T05:27:33Z","readingtime":3,"relpermalink":"/post/201708/%E6%88%91%E7%9A%84webpack%E5%AE%9E%E6%88%98/","section":"post","summary":"关于Webpack Webpack 是一个前端资源加载/打包工具。 它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的规则生成对应的静态资源。 一份基","tags":["Vue.js"],"title":"我的Webpack实战","type":"post","url":"/post/201708/%E6%88%91%E7%9A%84webpack%E5%AE%9E%E6%88%98/","weight":0,"wordcount":1410},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201707\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"45e19325e8965f0fac017ac6b02ace7f","permalink":"https://zhangzhengyi12.github.io/post/201707/%E4%BD%BF%E7%94%A8promise%E6%9D%A5%E6%94%B9%E5%86%99node%E4%BC%A0%E7%BB%9F%E7%9A%84%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/","publishdate":"2017-11-24T05:27:33Z","readingtime":1,"relpermalink":"/post/201707/%E4%BD%BF%E7%94%A8promise%E6%9D%A5%E6%94%B9%E5%86%99node%E4%BC%A0%E7%BB%9F%E7%9A%84%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/","section":"post","summary":"传统的回调 首先让我们看一下在NODE中传统的异步读取文件 let fs = require(\u0026quot;fs\u0026quot;) fs.readFile(\u0026quot;./justtest.html\u0026quot;,\u0026quot;utf-8\u0026quot;,(err,data)=\u0026gt;{ console.log(data); }) //普通的回调方式处理异步 我们可以看到，读取文件之后的回调被添加到了参","tags":["Web"],"title":"改写Node.js中的回调为Promise","type":"post","url":"/post/201707/%E4%BD%BF%E7%94%A8promise%E6%9D%A5%E6%94%B9%E5%86%99node%E4%BC%A0%E7%BB%9F%E7%9A%84%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/","weight":0,"wordcount":484},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201707\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"bc28714e52a2e284c0f6bcdb07aa7eed","permalink":"https://zhangzhengyi12.github.io/post/201707/%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91webappgulpwebpackbebales6/","publishdate":"2017-11-24T05:27:33Z","readingtime":4,"relpermalink":"/post/201707/%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91webappgulpwebpackbebales6/","section":"post","summary":"介绍 实现了那些功能 构建工具 最近glup玩的比较多，所以自己实现了一个自动构建的环境他的主要目的是从app目录的那些开发文件部署到server","tags":["Web"],"title":"组件化开发WebAPP(gulp+webpack+bebal+es6)","type":"post","url":"/post/201707/%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91webappgulpwebpackbebales6/","weight":0,"wordcount":1553},{"author":null,"categories":["Tech"],"content":null,"date":1511501253,"description":"","dir":"post\\201711\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511501253,"objectID":"33db065b0dd9bc1866c875c88a605e56","permalink":"https://zhangzhengyi12.github.io/post/201711/%E7%AE%97%E6%B3%95%E9%9B%86%E5%90%88%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0shufflejsonp%E8%BD%AC%E6%8D%A2json%E5%AF%B9%E8%B1%A1%E6%B7%B1%E5%BA%A6%E5%85%8B%E9%9A%86/","publishdate":"2017-11-24T05:27:33Z","readingtime":2,"relpermalink":"/post/201711/%E7%AE%97%E6%B3%95%E9%9B%86%E5%90%88%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0shufflejsonp%E8%BD%AC%E6%8D%A2json%E5%AF%B9%E8%B1%A1%E6%B7%B1%E5%BA%A6%E5%85%8B%E9%9A%86/","section":"post","summary":"记录一下最近接触到的算法 节流与防抖 这两个函数都用于限制函数的执行。 debounce 函数防抖就是让某个函数在上一次执行后，满足等待某个时间内不再触发此函数后","tags":["Web"],"title":"节流与防抖函数","type":"post","url":"/post/201711/%E7%AE%97%E6%B3%95%E9%9B%86%E5%90%88%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0shufflejsonp%E8%BD%AC%E6%8D%A2json%E5%AF%B9%E8%B1%A1%E6%B7%B1%E5%BA%A6%E5%85%8B%E9%9A%86/","weight":0,"wordcount":898},{"author":null,"categories":null,"content":null,"date":1510532453,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1510532453,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/lisp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/lisp/","section":"tags","summary":"","tags":null,"title":"LISP","type":"tags","url":"/tags/lisp/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1510532453,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1510532453,"objectID":"","permalink":"https://zhangzhengyi12.github.io/tags/sicp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/sicp/","section":"tags","summary":"","tags":null,"title":"SICP","type":"tags","url":"/tags/sicp/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":1510532453,"description":"","dir":"post\\201711\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":11000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510532453,"objectID":"3e9c3d411f75c876cb0a7d9f56cdba7f","permalink":"https://zhangzhengyi12.github.io/post/201711/sicp%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9E%84%E9%80%A0%E4%B8%8E%E8%A7%A3%E9%87%8A%E7%AC%94%E8%AE%B0/","publishdate":"2017-11-13T00:20:53Z","readingtime":22,"relpermalink":"/post/201711/sicp%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9E%84%E9%80%A0%E4%B8%8E%E8%A7%A3%E9%87%8A%E7%AC%94%E8%AE%B0/","section":"post","summary":"前言 最近一直在学习SICP这本书，基本上结合书与视频一起学习，可以说这真的是一本奇书，他从高阶抽象开始到介绍DSL乃至流，最后又开始讨论la","tags":["SICP","函数式编程","LISP"],"title":"SICP 计算机程序的构造与解释笔记","type":"post","url":"/post/201711/sicp%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9E%84%E9%80%A0%E4%B8%8E%E8%A7%A3%E9%87%8A%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":10994},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"interview\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"bb96b4562ea8745361a35de4ebea4b68","permalink":"https://zhangzhengyi12.github.io/interview/interview/","publishdate":"0001-01-01T00:00:00Z","readingtime":13,"relpermalink":"/interview/interview/","section":"interview","summary":"数组扁平化 let flat = arr =\u0026gt; arr.reduce((list, v) =\u0026gt; list.concat(Array.isArray(v) ? flat(v) : v), [])  v2\nfunction flat(arr) { let res = [] for (let item of arr) { if (Array.isArray(item)) { res = res.concat(flat(item)) } else { res.push(item) } } return res }  类型 加法操作符的基本规则  两者都为数字 进行普通的数字相加 一方为字符串 则转换另一方为字符串后进行字符串拼接 一方为对象类型 转换为字符串后 继续应用上一条规则 null + 1 = 1 原因是null被转换成了数字 这和红宝书上有冲突，应该null undefined会和另外一项进行自适应 如果是数字 自己也变数字，如果是字符 自己也变字符  相等操作符的运算规则 [] == !","tags":null,"title":"","type":"interview","url":"/interview/interview/","weight":0,"wordcount":2685},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"interview\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"ca5ff945a998dbfeaaef58aabab6cc66","permalink":"https://zhangzhengyi12.github.io/interview/jobs/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/interview/jobs/","section":"interview","summary":" 工作面试列表  周二上午 10:00 亿景智联 15~22k 视频面试 ps:说不加班 双休 周二下午 14:00 第一秒电商 18~25K 现场 周三上午 10:30 景栗 15~25k 现场 周三下午 14:30 车厘子科技 20~25k 现场 周四上午 10:30 食亨 18~30k 现场 周四下午 15:00 东浦科技 13~25k 电话面试\n 下周二下午 14:00 静安区 去不去啊？\n 下周一下午 14:00 13~18K VSPN 搞电竞\n  对公司问题  公司规模大概多大，主营业务是什么 前端团队大概有多少人，我进来之后承担什么角色 加班情况如何，年终奖如何  ","tags":null,"title":"","type":"interview","url":"/interview/jobs/","weight":0,"wordcount":46},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notebook\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"dcb439ef055950491484bbbe69ec1a64","permalink":"https://zhangzhengyi12.github.io/notebook/algo-road-map/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/notebook/algo-road-map/","section":"notebook","summary":" 算法训练路径图 数据结构模块  Array Stack/Queue PriorityQueue(Heap) LinkedList(Single/Double) Tree / Binary Tree HashTable Disjoint Set Trie BloomFilter LRU Cache  算法模块  General Coding In-order/Pre-order/Post-order traversal Greedy Recursion/Backtrace BFS/DFS Divide and Conquer DP Binary Search Grap  ","tags":null,"title":"","type":"notebook","url":"/notebook/algo-road-map/","weight":0,"wordcount":32},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notebook\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"25af2c8cb83e2b604a0baad95f97a04b","permalink":"https://zhangzhengyi12.github.io/notebook/algo-template/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/notebook/algo-template/","section":"notebook","summary":"基础 递归 const recursion = (level,param1,param2)=\u0026gt;{ // 终止条件 if(level \u0026gt; xx) { return xx } // 处理当前层的数据 processData() // 继续向下递归 recursion(level+1,param1,param2) // 进行状态后处理 组装 moreProcess() }  DFS let visited = new Set() const dfs = (node,visited)=\u0026gt;{ visited.add(node) for(let childNode of node.children){ if(!visited.has(childNode)){ dfs(childNode,visited) } } }  BFS const bfs = (G,start)=\u0026gt;{ let q = [start] let visited = new Set() while(q.length \u0026gt; 0){ node = q.shift() visited.add(node) // 如果需要按层级递进 那么这里需要创建一个 for 循环 process(node) for(let childNode of node.","tags":null,"title":"","type":"notebook","url":"/notebook/algo-template/","weight":0,"wordcount":270},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notebook\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":7200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"d60ff47bc157b3c08bbccceac04c39c9","permalink":"https://zhangzhengyi12.github.io/notebook/algorithm/","publishdate":"0001-01-01T00:00:00Z","readingtime":34,"relpermalink":"/notebook/algorithm/","section":"notebook","summary":"Review 复杂度计算的几种方式 递归树方法 递归树方法的核心就是构造一个子任务分解树，然后对每个节点的复杂度进行汇总分析，尝试找出规律。下面是一颗常见的归并排序的递归树。\n\u0008fib数列会相对麻烦一点。每个节点的复杂度其实是一次加法。 然后可以根据每次子任务的分解情况计算出这个树的最终高度是多少。\n主方法 适用于满足递推关系的算法\n$$ f(n) = af(n/b) + cn^d 其中 n = b^k ，k是一个正整数，a \u0026gt;= 1,c 和 d 是实数 \\ 满足c是正的且b是非负的 $$\n$$ 如果 a \u0026lt; b^d 那么 f(n) = O(n^d) $$\n$$ 如果 a = b^d 那么 f(n) = O(n^dlogn) $$\n$$ 如果 a \u0026gt; b^d 那么 f(n) = O(n^{log_ba}) $$\n举个例子，归并排序满足公式 $f(n) = 2f(n/2) + 1 * n^1$\n$a = 2 并且 a = 2^1$ 所以可以得到复杂度 $O(n^1logn) = O(nlogn)$","tags":null,"title":"","type":"notebook","url":"/notebook/algorithm/","weight":0,"wordcount":7187},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notebook\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"4fa62799e8d7f729e2f1f82d26aa4ef4","permalink":"https://zhangzhengyi12.github.io/notebook/computer_graphics/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/notebook/computer_graphics/","section":"notebook","summary":"math 向量夹角定义\n$$ \\cos \\theta = \\frac{\\bar{v} \\cdot \\bar{k}}{||\\bar{v}|| \\cdot ||\\bar{k}||} $$\n缩放矩阵\ns1 s2 s3 分为对应你想要缩放的向量分量\n$$ \\begin{bmatrix} \\color{red}{S_1} \u0026amp; \\color{red}0 \u0026amp; \\color{red}0 \u0026amp; \\color{red}0 \\ \\color{green}0 \u0026amp; \\color{green}{S_2} \u0026amp; \\color{green}0 \u0026amp; \\color{green}0 \\ \\color{blue}0 \u0026amp; \\color{blue}0 \u0026amp; \\color{blue}{S_3} \u0026amp; \\color{blue}0 \\ \\color{purple}0 \u0026amp; \\color{purple}0 \u0026amp; \\color{purple}0 \u0026amp; \\color{purple}1 \\end{bmatrix} \\cdot \\begin{pmatrix} x \\ y \\ z \\ 1 \\end{pmatrix} = \\begin{pmatrix} \\color{red}{S_1} \\cdot x \\ \\color{green}{S_2} \\cdot y \\ \\color{blue}{S_3} \\cdot z \\ 1 \\end{pmatrix} $$","tags":null,"title":"","type":"notebook","url":"/notebook/computer_graphics/","weight":0,"wordcount":473},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notebook\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"69add64dabb921a4d064b931785268b6","permalink":"https://zhangzhengyi12.github.io/notebook/cses/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/notebook/cses/","section":"notebook","summary":"","tags":null,"title":"","type":"notebook","url":"/notebook/cses/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notebook\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"cc4029effa577f5da502e6251ff0480c","permalink":"https://zhangzhengyi12.github.io/notebook/data_structures/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/notebook/data_structures/","section":"notebook","summary":"数据结构分类 从最高层面上来说，数据结构分为线性表和非线性表\n线性表的最大特征是只拥有前后两个方向\n线性表 数组 最大特点是支持随机访问,因为内部可以使用偏移直接寻址，但是不可避免的会让删除插入等操作变麻烦","tags":null,"title":"","type":"notebook","url":"/notebook/data_structures/","weight":0,"wordcount":6},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notebook\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"21008be76ac5d8d684dd5af95ddd62db","permalink":"https://zhangzhengyi12.github.io/notebook/desgin_patterns/","publishdate":"0001-01-01T00:00:00Z","readingtime":3,"relpermalink":"/notebook/desgin_patterns/","section":"notebook","summary":"设计模式 五大OOP基本原则 创建型模式 AbstractFactory (抽象工厂) 意图 提供一个接口以创建一系列相关或相互依赖的对象，而无需指定它们具体的类。\n简单来说就是建立一个抽象工厂接口,以及一组继承了抽象工厂接口的具体工厂，让这些具体的工厂够能相互替换，提供拥有统一接口的产品。消除客户端在创建这些产品时候所产生的类耦合现象，同时增强同一类产品的依赖关系。\n适用场景  一个系统要独立于他的产品的创建、组合和表示(不希望与具体的类产品类耦合) 一个系统要由多个产品系列中的一个来配置(比如可以轻易切换 macos 风格组件 和 ubuntu 风格组件) 要强调一系列相关的产品对象的设计以便进行联合适用(工厂能够创建一组相关对象) 提供一个产品类库，但只想显示它们的接口而不是实现  缺点 想要扩展工厂从而生产更多类型的产品会有些困难，因为你不仅需要修改接口，每个具体工厂都需要增加这方面的能力\n代码实现 // MARK: Window Product protocol Window { func close() } class MacOSWindow: Window { func close() { // some code } } class UbuntuWindow: Window { func close() { // some code } } // MARK: ScrollBar Product protocol Scrollbar { func scrollTo(x: Float, y: Float) } class MacOSScrollbar: Scrollbar { func scrollTo(x: Float, y: Float) { // some code } } class UbuntuScrollBar: Scrollbar { func scrollTo(x: Float, y: Float) { // some code } } // Abstract Factory protocol WidgetFactory { // singleton static var shared: WidgetFactory { get } func createWindow() -\u0026gt; Window func createScrollBar() -\u0026gt; Scrollbar } // Concreate Factory class UbuntuWidgetFactory: WidgetFactory { static let shared: WidgetFactory = UbuntuWidgetFactory() func createWindow() -\u0026gt; Window { return UbuntuWindow() } func createScrollBar() -\u0026gt; Scrollbar { return UbuntuScrollBar() } } class MacOSWidgetFactory: WidgetFactory { static let shared: WidgetFactory = MacOSWidgetFactory() func createWindow() -\u0026gt; Window { return MacOSWindow() } func createScrollBar() -\u0026gt; Scrollbar { return MacOSScrollbar() } } // MARK: Using Factory create widget func run(widgetFactory: WidgetFactory) { let window = widgetFactory.","tags":null,"title":"","type":"notebook","url":"/notebook/desgin_patterns/","weight":0,"wordcount":638},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notebook\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"6228766725bd54ea2be03012ea1c1b8e","permalink":"https://zhangzhengyi12.github.io/notebook/discrete_mathematics/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/notebook/discrete_mathematics/","section":"notebook","summary":"计数 排列与组合 求 n 的 r 排列\n$$ P(n,r) = \\frac{(n!)}{(n - r)!} $$\n求 n 的 r 组合\n$$ C(n,r) = \\frac{(n!)}{r!(n - r)!} $$\n求 n 的 r 排列 允许重复\n$$ n ^ r $$\n求 n 的 r 组合 允许重复\n$$ C(n + r - 1 , r) $$","tags":null,"title":"","type":"notebook","url":"/notebook/discrete_mathematics/","weight":0,"wordcount":52},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notebook\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"b48d506ecbe41a6600f16a39691b02f6","permalink":"https://zhangzhengyi12.github.io/notebook/distributed-systems/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/notebook/distributed-systems/","section":"notebook","summary":" 分布式系统 intro 什么是分布式系统 为什么要用分布式系统 可伸缩性\n分布式系统中涉及到的基础架构 抽象层面\n 存储 通信 计算  实现层面\n 线程 并发控制 RPC  分布式系统中的一些关注点 性能\n 伸缩性 2x的机器应该提供2x的性能  容错\n任何节点都可能出错 崩溃\n 可访问性 可恢复性  一致性\n 强一致性 同一时刻所有节点都访问到相同数据 弱一致性 允许同一时刻访问到不同的数据 更为常用  RPC and Threads Threads 使用线程的理由  IO并发 多核并行 比起RPC更为简单  事件驱动 事件驱动无法真正意义上完全驱动多核CPU,事件驱动可以用低廉的成本带来IO层面的高并发，但是并不适合重CPU程序\n协程 协程一般构建在语言层面上，与事件驱动类似，无法实现并行，但能够实现并发\nGFS Big Storage 难点\n 性能 - 分片 自动化的容错机制 容错机制需要我们实现数据冗余 数据冗余需要创建多个副本 多个副本要求实现一致性 而过于频繁的同步又会导致性能降低  ","tags":null,"title":"","type":"notebook","url":"/notebook/distributed-systems/","weight":0,"wordcount":53},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notebook\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"966e3241f9d01ad144b7caace073ad93","permalink":"https://zhangzhengyi12.github.io/notebook/leetcode/","publishdate":"0001-01-01T00:00:00Z","readingtime":4,"relpermalink":"/notebook/leetcode/","section":"notebook","summary":"笔记本 求两数之和等于某个数 sum2\nvar twoSum = function(nums, target) { const sortedNums = nums.map((v, i) =\u0026gt; ({ v, i })) sortedNums.sort((a, b) =\u0026gt; a.v - b.v) let left = 0 let right = nums.length - 1 while (left \u0026lt; right) { let sum = sortedNums[left].v + sortedNums[right].v if (sum === target) { return [sortedNums[left].i, sortedNums[right].i] } else if (sum \u0026lt; target) { left++ } else { right-- } } }  求三数之和等于某个数 所有匹配项 而且去重 sum3","tags":null,"title":"","type":"notebook","url":"/notebook/leetcode/","weight":0,"wordcount":673},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notebook\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c3820ee05fb078822746dc73dd3b23a1","permalink":"https://zhangzhengyi12.github.io/notebook/machine_learning/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/notebook/machine_learning/","section":"notebook","summary":"线性回归 $$ Θ_j = Θj - \\partial \\sum{i=1}^m (hΘ(x^i) - y^i) * x_j^i $$","tags":null,"title":"","type":"notebook","url":"/notebook/machine_learning/","weight":0,"wordcount":14},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notebook\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"6b869296385cce72b84ead06e1627c4a","permalink":"https://zhangzhengyi12.github.io/notebook/refactoring/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/notebook/refactoring/","section":"notebook","summary":"refactoring 快速回忆，不追求细节，一句话表达意图\n坏味道 神秘命名 好的命名很难，多想多重构\n重复代码 多提炼\n过长函数 过长参数列表 全局数据 可变数据 发散变化 程序的变化应该集中，要修改的时候应该尽可能少的触碰其他代码\n散弹修改 改起来到处都是细小的更改点\n依恋情节 模块过于亲密\n数据泥团 总是成群结队的三两个数据，尝试把数据改成对象\n基本类型偏执 尽量自己构建一些基本类型，不要天天用字符串和number\n重复的switch 要是增加一个可选项，直接爆炸\n循环语句 少用循环多Map\n夸夸其谈通用性 过于离谱的通用型设计\n临时字段 特例情况的字段要干掉\n过长的消息链 猛委托谁顶得住呢？隐藏起来吧，对外不暴露委托对象\n中间人 一半的函数都委托给别人，可以考虑直接暴露委托，或者把委托对象直接进行应用\n内幕交易 两个模块过于高频率的交换数据\n过大的类 多抽离\n异曲同工的类 相似的类接口最好一致\n纯数据类 只拥有数据的类一般都会过渡耦合，最好是尝试把一些操作函数搬移到数据类里\n被拒绝的遗增 父类的某些东西子类不想要，需要对继承体系进行重构\n注释 让注释变得更有意义\n基本手法 提炼函数 写颗粒度足够细的函数，可以消除注释\n提炼变量 将长表达式内部的子表达式抽离成解释性变量\n封装变量 针对全局数据建立get set函数 更好的控制访问\n引入参数对象 将常见的参数组合成一个对象或者结构，比如 iOS中的 CGFloat CGRect CGPoint 通常都是含有 x y 等值\n函数组合成类 如果一组函数+一组变量高频率的出现，抽离成一个类\n拆分阶段 将一个函数拆分成多个阶段，并建立起 第一阶段的输出是第二阶段的输入这一过程。可以建立一个中转数据结构","tags":null,"title":"","type":"notebook","url":"/notebook/refactoring/","weight":0,"wordcount":190},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"s_notebook\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"00900925f35999c3db3da5cec29552d0","permalink":"https://zhangzhengyi12.github.io/s_notebook/calculus/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/s_notebook/calculus/","section":"s_notebook","summary":" 微积分 ","tags":null,"title":"","type":"s_notebook","url":"/s_notebook/calculus/","weight":0,"wordcount":1},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"https://zhangzhengyi12.github.io/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"7a0da914bde98a7d3fcc7f6c5886633c","permalink":"https://zhangzhengyi12.github.io/top/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/about/","section":"top","summary":" WHO 前端开发工程师 民间哲学爱好者 拉康主义者\n领域  Web iOS CocosCreator 算法\u0026amp;数据架构 哲学  ","tags":null,"title":"","type":"top","url":"/top/about/","weight":0,"wordcount":10},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"54ccacff97b96806d49760361ef17350","permalink":"https://zhangzhengyi12.github.io/top/books/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/books/","section":"top","summary":" Books 正在学习或者已经学习过的  《计算机程序的构造与解释 》 《算法导论》 《离散数学及其应用》 《JavaScrip高级程序设计》 《深入理解计算机系统》  已经纳入计划之中  《编译原理》 《计算机图形学》 《设计模式》  ","tags":null,"title":"","type":"top","url":"/top/books/","weight":0,"wordcount":12},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"626bed90017a58f91c7fca1ce5a467a2","permalink":"https://zhangzhengyi12.github.io/top/gist/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/gist/","section":"top","summary":" Gist代码片段集合 算法 图形学 Alpha颜色合成\n 图 计算邻接矩阵顶点之间的通路数\n 全点对最短路径 floydWarshell\n 单源最短路径 dijkstra\n 数学 计数问题 求排列数\n 其他 ","tags":null,"title":"","type":"top","url":"/top/gist/","weight":0,"wordcount":14},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"84d0257cc6674af0a39d51fd1737ac19","permalink":"https://zhangzhengyi12.github.io/top/notebook/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/notebook/","section":"top","summary":"笔记本 算法集合\n离散数学\n重构\n设计模式\n计算机图形学","tags":null,"title":"","type":"top","url":"/top/notebook/","weight":0,"wordcount":6},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/interview/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/interview/","section":"interview","summary":"","tags":null,"title":"Interviews","type":"interview","url":"/interview/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/notebook/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/notebook/","section":"notebook","summary":"","tags":null,"title":"Notebooks","type":"notebook","url":"/notebook/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/s_notebook/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/s_notebook/","section":"s_notebook","summary":"","tags":null,"title":"S_notebooks","type":"s_notebook","url":"/s_notebook/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/search/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/","section":"search","summary":"","tags":null,"title":"Searches","type":"search","url":"/search/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":0,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://zhangzhengyi12.github.io/top/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/top/","section":"top","summary":"","tags":null,"title":"Tops","type":"top","url":"/top/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":null,"date":-62135596800,"description":"","dir":"post\\201906\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"42698a7fb45f9bc5dc7f92b700feb137","permalink":"https://zhangzhengyi12.github.io/post/201906/%E5%88%A9%E7%94%A8github%E7%9A%84webhooks%E8%83%BD%E5%8A%9B%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/post/201906/%E5%88%A9%E7%94%A8github%E7%9A%84webhooks%E8%83%BD%E5%8A%9B%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2/","section":"post","summary":"直接放 github 成品地址 code 简单来说就是当github 仓库被提交的时候，github 就会访问你填写一个后台地址，你就可以通过这个触发器做一些事情。 为了","tags":["Github"],"title":"利用Github的Webhooks自动构建博客","type":"post","url":"/post/201906/%E5%88%A9%E7%94%A8github%E7%9A%84webhooks%E8%83%BD%E5%8A%9B%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2/","weight":0,"wordcount":242}]