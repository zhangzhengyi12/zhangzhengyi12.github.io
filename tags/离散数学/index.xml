<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>离散数学 on Yinode Blog</title>
    <link>https://zhangzhengyi12.github.io/tags/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/</link>
    <description>Recent content in 离散数学 on Yinode Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 26 Apr 2020 23:01:54 +0000</lastBuildDate>
    
	<atom:link href="https://zhangzhengyi12.github.io/tags/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>计算传递闭包 [离散数学]</title>
      <link>https://zhangzhengyi12.github.io/post/202004/%E8%AE%A1%E7%AE%97%E4%BC%A0%E9%80%92%E9%97%AD%E5%8C%85/</link>
      <pubDate>Sun, 26 Apr 2020 23:01:54 +0000</pubDate>
      
      <guid>https://zhangzhengyi12.github.io/post/202004/%E8%AE%A1%E7%AE%97%E4%BC%A0%E9%80%92%E9%97%AD%E5%8C%85/</guid>
      <description>传递闭包 传递闭包、即在数学中，在集合 X 上的二元关系 R 的传递闭包是包含 R 的 X 上的最小的传递关系。 例如，如果 X 是(生或死)人的集合而 R 是关系“为</description>
    </item>
    
    <item>
      <title>生成排列与组合 [离散数学]</title>
      <link>https://zhangzhengyi12.github.io/post/202003/%E7%94%9F%E6%88%90%E6%8E%92%E5%88%97%E4%B8%8E%E7%BB%84%E5%90%88-%E5%AD%97%E5%85%B8%E8%BF%AD%E4%BB%A3%E6%B3%95-%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/</link>
      <pubDate>Sun, 22 Mar 2020 17:46:13 +0000</pubDate>
      
      <guid>https://zhangzhengyi12.github.io/post/202003/%E7%94%9F%E6%88%90%E6%8E%92%E5%88%97%E4%B8%8E%E7%BB%84%E5%90%88-%E5%AD%97%E5%85%B8%E8%BF%AD%E4%BB%A3%E6%B3%95-%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/</guid>
      <description>前置工具代码 一些前置的工具 下面代码不会再给出 // 求N的阶乘 const factorial = (() =&amp;gt; { var f = [1, 1] var i = 2 return function factorial(n) { if (typeof f[n] != &#39;undefined&#39;) return f[n] var result = f[i - 1] for (; i &amp;lt;= n; i++) f[i] = result =</description>
    </item>
    
  </channel>
</rss>