<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Yinode Blog</title>
    <link>https://zhaohuabing.com/post/</link>
    <description>Recent content in Posts on Yinode Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 11 Feb 2020 17:46:13 +0000</lastBuildDate>
    
	<atom:link href="https://zhaohuabing.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Star 搜索算法 常用于游戏中的路径查找</title>
      <link>https://zhaohuabing.com/post/202002/a-star-%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95-%E5%B8%B8%E7%94%A8%E4%BA%8E%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84%E6%9F%A5%E6%89%BE/</link>
      <pubDate>Tue, 11 Feb 2020 17:46:13 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/202002/a-star-%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95-%E5%B8%B8%E7%94%A8%E4%BA%8E%E6%B8%B8%E6%88%8F%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84%E6%9F%A5%E6%89%BE/</guid>
      <description>非常酷的一个启发式搜索算法，整体类似于dij最短路径算法，只不过加入了预估距离的概念，当然由于博客数据丢失，之前的博客内容没了，不过还好代码</description>
    </item>
    
    <item>
      <title>连连看中的广度优先搜索算法</title>
      <link>https://zhaohuabing.com/post/202002/%E8%BF%9E%E7%9C%8B%E4%B8%AD%E7%9A%84%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 01 Feb 2020 17:46:13 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/202002/%E8%BF%9E%E7%9C%8B%E4%B8%AD%E7%9A%84%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/</guid>
      <description>由于博客数据丢失，只剩下了代码。。。。。之前写的MD都没了。。 const gameConfig = { maxLevel: 10// 最大搜索层级 2代表 只搜索经过两次转角能到达的点 } // 简易队列系统 配合</description>
    </item>
    
    <item>
      <title>微信小程序 全局任务弹窗方案分享(微侵入式) Template &#43; Request 拦截器</title>
      <link>https://zhaohuabing.com/post/201911/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A8%E5%B1%80%E4%BB%BB%E5%8A%A1%E5%BC%B9%E7%AA%97%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB%E5%BE%AE%E4%BE%B5%E5%85%A5%E5%BC%8Ftemplaterequest%E6%8B%A6%E6%88%AA%E5%99%A8/</link>
      <pubDate>Fri, 15 Nov 2019 14:54:18 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201911/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A8%E5%B1%80%E4%BB%BB%E5%8A%A1%E5%BC%B9%E7%AA%97%E6%96%B9%E6%A1%88%E5%88%86%E4%BA%AB%E5%BE%AE%E4%BE%B5%E5%85%A5%E5%BC%8Ftemplaterequest%E6%8B%A6%E6%88%AA%E5%99%A8/</guid>
      <description>&lt;p&gt;最近在工作中需要在微信小程序中加入一套任务系统，某些操作将会触发一个任务弹窗&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://yinodimage.oss-cn-hangzhou.aliyuncs.com/20191115140503.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;整个子任务会比较分散，如果使用小程序的自定义组件系统，可能会导致过于过于偏离 &lt;code&gt;DRY 原则&lt;/code&gt; 的代码，在经过一些调研以及和后端的协调之后，最终决定使用一套基于 &lt;code&gt;Request 中间件拦截&lt;/code&gt; + &lt;code&gt;template WXML 模板&lt;/code&gt; 共同组成的方案，由于微信小程序的限制(无法直接操作 DOM) ，所以不可避免的会拥有轻微的侵入性，不过好在这个代价应该还算是可以接受的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小程序利用Canvas绘图生成海报排雷经验分享</title>
      <link>https://zhaohuabing.com/post/201911/%E5%B0%8F%E7%A8%8B%E5%BA%8Fcanvas%E7%BB%98%E5%9B%BE%E7%94%9F%E6%88%90%E6%B5%B7%E6%8A%A5%E6%8E%92%E9%9B%B7%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/</link>
      <pubDate>Sat, 09 Nov 2019 17:46:13 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201911/%E5%B0%8F%E7%A8%8B%E5%BA%8Fcanvas%E7%BB%98%E5%9B%BE%E7%94%9F%E6%88%90%E6%B5%B7%E6%8A%A5%E6%8E%92%E9%9B%B7%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/</guid>
      <description>前言 最近小程序搞的比较多，最烦人的就是这个海报生成，踩雷不少，跟大家分享一点经验，也许可以解决你的问题 绘制完成后导出 发现内容缺失 这个第一是 最</description>
    </item>
    
    <item>
      <title>计算机中的 原码、反码、补码 [转]</title>
      <link>https://zhaohuabing.com/post/201911/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E5%8E%9F%E7%A0%81%E5%8F%8D%E7%A0%81%E8%A1%A5%E7%A0%81%E8%BD%AC/</link>
      <pubDate>Sat, 09 Nov 2019 17:32:07 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201911/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E5%8E%9F%E7%A0%81%E5%8F%8D%E7%A0%81%E8%A1%A5%E7%A0%81%E8%BD%AC/</guid>
      <description>觉得很不错，所以第一次转载。 作者：张子秋 出处：ziqiu.zhang - 博客园 本文版权归作者和博客园共有，欢迎转载，但未经作者同意必须保留此段</description>
    </item>
    
    <item>
      <title>计算机中的补码与无符号编码 [笔记]</title>
      <link>https://zhaohuabing.com/post/201910/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E8%A1%A5%E7%A0%81%E4%B8%8E%E6%97%A0%E7%AC%A6%E5%8F%B7%E7%BC%96%E7%A0%81%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 31 Oct 2019 23:00:57 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201910/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%AD%E7%9A%84%E8%A1%A5%E7%A0%81%E4%B8%8E%E6%97%A0%E7%AC%A6%E5%8F%B7%E7%BC%96%E7%A0%81%E7%AC%94%E8%AE%B0/</guid>
      <description>在计算机中，我们可以采用 补码 以及 无符号 两种方式来存储我们的整数，两者的主要差别如下 补码 第一位为符号位，当符号为 = 1 时，代表一个负权，= 0 时，</description>
    </item>
    
    <item>
      <title>不用第三个Temp变量 实现两个变量之间交换的方法 [XOR 运算]</title>
      <link>https://zhaohuabing.com/post/201910/%E4%B8%8D%E7%94%A8%E7%AC%AC%E4%B8%89%E4%B8%AAtemp%E5%8F%98%E9%87%8F%E5%AE%9E%E7%8E%B0%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8F%E4%B9%8B%E9%97%B4%E4%BA%A4%E6%8D%A2%E7%9A%84%E6%96%B9%E6%B3%95xor%E6%8C%89%E4%BD%8D%E6%88%96%E5%BC%82%E8%BF%90%E7%AE%97/</link>
      <pubDate>Thu, 31 Oct 2019 15:13:07 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201910/%E4%B8%8D%E7%94%A8%E7%AC%AC%E4%B8%89%E4%B8%AAtemp%E5%8F%98%E9%87%8F%E5%AE%9E%E7%8E%B0%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8F%E4%B9%8B%E9%97%B4%E4%BA%A4%E6%8D%A2%E7%9A%84%E6%96%B9%E6%B3%95xor%E6%8C%89%E4%BD%8D%E6%88%96%E5%BC%82%E8%BF%90%E7%AE%97/</guid>
      <description>相信平时大家应该经常会遇到需要交换两个变量值的情况，最常见的做法就是建立一个 temp 临时变量，用于交换，代码大概是这样。 // javascript // swap let a = 1 ,b = 2 let temp</description>
    </item>
    
    <item>
      <title>canvas判断用户是否点击在一条线上</title>
      <link>https://zhaohuabing.com/post/201910/canvas%E5%88%A4%E6%96%AD%E7%94%A8%E6%88%B7%E6%98%AF%E5%90%A6%E7%82%B9%E5%87%BB%E5%9C%A8%E4%B8%80%E6%9D%A1%E7%BA%BF%E4%B8%8A/</link>
      <pubDate>Wed, 02 Oct 2019 16:33:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201910/canvas%E5%88%A4%E6%96%AD%E7%94%A8%E6%88%B7%E6%98%AF%E5%90%A6%E7%82%B9%E5%87%BB%E5%9C%A8%E4%B8%80%E6%9D%A1%E7%BA%BF%E4%B8%8A/</guid>
      <description>该实现为 IOS 的 swift，但是可以运用在任何 UI 平台，主要原理就是把一条线切分成一个个的点，然后判断用户的点击与这条线上的点进行逐一判断 是否距离</description>
    </item>
    
    <item>
      <title>V8 Lite - 轻量级的V8引擎 [译]</title>
      <link>https://zhaohuabing.com/post/201909/v8lite%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84v8%E5%BC%95%E6%93%8E%E8%AF%91/</link>
      <pubDate>Fri, 13 Sep 2019 20:24:17 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201909/v8lite%E8%BD%BB%E9%87%8F%E7%BA%A7%E7%9A%84v8%E5%BC%95%E6%93%8E%E8%AF%91/</guid>
      <description>在2018年晚些时候，我们启动了一个全新的项目 - V8 Lite，旨在大幅度减少V8引擎对于内存的使用。最初这个项目被设想成一个独立于V8引擎的L</description>
    </item>
    
    <item>
      <title>编辑距离算法 - 计算两个单词之间的相似度</title>
      <link>https://zhaohuabing.com/post/201909/%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%E7%AE%97%E6%B3%95%E8%AE%A1%E7%AE%97%E4%B8%A4%E4%B8%AA%E5%8D%95%E8%AF%8D%E4%B9%8B%E9%97%B4%E7%9A%84%E7%9B%B8%E4%BC%BC%E5%BA%A6/</link>
      <pubDate>Thu, 12 Sep 2019 09:39:40 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201909/%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%E7%AE%97%E6%B3%95%E8%AE%A1%E7%AE%97%E4%B8%A4%E4%B8%AA%E5%8D%95%E8%AF%8D%E4%B9%8B%E9%97%B4%E7%9A%84%E7%9B%B8%E4%BC%BC%E5%BA%A6/</guid>
      <description>在我们的日常生活中，必然使用过搜索引擎提供的联想查询功能 可以看到，尽管我们打错了单词，但是他仍然为我们提供了搜索建议，那么这是如何实现的呢。</description>
    </item>
    
    <item>
      <title>LRU 缓存算法</title>
      <link>https://zhaohuabing.com/post/201909/lru%E7%BC%93%E5%AD%98%E7%AE%97%E6%B3%95/</link>
      <pubDate>Fri, 06 Sep 2019 14:23:27 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201909/lru%E7%BC%93%E5%AD%98%E7%AE%97%E6%B3%95/</guid>
      <description>缓存的主要目的就是提高访问速度，当我们需要从某个容器中获取一个元素的时候，将会优先从缓存中获取，如果缓存中正好存在，那么我们就可以直接取走这</description>
    </item>
    
    <item>
      <title>机器学习 K均值分类算法</title>
      <link>https://zhaohuabing.com/post/201909/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0k%E5%9D%87%E5%80%BC%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/</link>
      <pubDate>Fri, 06 Sep 2019 14:22:26 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201909/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0k%E5%9D%87%E5%80%BC%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/</guid>
      <description>k-平均算法（英文：k-means clustering）源于信号处理中的一种向量量化方法，现在则更多地作为一种聚类分析方法流行于数据挖掘领域</description>
    </item>
    
    <item>
      <title>字典树的实现</title>
      <link>https://zhaohuabing.com/post/201908/%E5%AD%97%E5%85%B8%E6%A0%91%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Fri, 09 Aug 2019 19:39:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201908/%E5%AD%97%E5%85%B8%E6%A0%91%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
      <description>在计算机科学中，trie，又称前缀树或字典树，是一种有序树，用于保存关联数组，其中的键通常是字符串。与二叉查找树不同，键不是直接保存在节点中</description>
    </item>
    
    <item>
      <title>构建一个用于创建组件库的项目脚手架工具 [类 Vue-cli-3]</title>
      <link>https://zhaohuabing.com/post/201907/%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%94%A8%E4%BA%8E%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6%E5%BA%93%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%84%9A%E6%89%8B%E6%9E%B6%E5%B7%A5%E5%85%B7%E7%B1%BBvuecli3/</link>
      <pubDate>Tue, 09 Jul 2019 18:54:46 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201907/%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%94%A8%E4%BA%8E%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6%E5%BA%93%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%84%9A%E6%89%8B%E6%9E%B6%E5%B7%A5%E5%85%B7%E7%B1%BBvuecli3/</guid>
      <description>缘起 最近公司内部想搭建一个私有的 npm 仓库，用于将平时用到次数相当频繁的工具或者组件独立出来，方便单独管理，随着项目的规模变大，数量变多，单纯的</description>
    </item>
    
    <item>
      <title>CentOS 7 编译安装 Nginx 配合 SSL 模块</title>
      <link>https://zhaohuabing.com/post/201906/centos7%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx%E9%85%8D%E5%90%88ssl%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Thu, 20 Jun 2019 06:15:04 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201906/centos7%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx%E9%85%8D%E5%90%88ssl%E6%A8%A1%E5%9D%97/</guid>
      <description>准备 先安装一下接下来需要的依赖套件 yum install -y gcc-c++ openssl openssl-devel zlib zlib-devel pcre pcre-devel 下载 nginx cd ~ wget http://nginx.org/download/nginx-1.12.2.tar.gz tar -zxvf nginx-1.12.2.tar.gz 编译安装 cd nginx-1.12.2 ./configure &amp;ndash;prefix=/usr/local/nginx &amp;ndash;with-http_ssl_module make &amp;amp;&amp;amp; make install 检测安装是否成功 /usr/local/nginx/sbin/nginx -v 常用操作 /usr/local/nginx/sbin/nginx # 启动 /usr/local/nginx/sbin/nginx -s</description>
    </item>
    
    <item>
      <title>修复 iOS Web Input 输入框失去焦点无法还原页面滚动位置</title>
      <link>https://zhaohuabing.com/post/201906/%E4%BF%AE%E5%A4%8Diosinput%E8%BE%93%E5%85%A5%E6%A1%86%E5%A4%B1%E5%8E%BB%E7%84%A6%E7%82%B9%E6%97%A0%E6%B3%95%E8%BF%98%E5%8E%9F%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8/</link>
      <pubDate>Thu, 13 Jun 2019 19:15:28 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201906/%E4%BF%AE%E5%A4%8Diosinput%E8%BE%93%E5%85%A5%E6%A1%86%E5%A4%B1%E5%8E%BB%E7%84%A6%E7%82%B9%E6%97%A0%E6%B3%95%E8%BF%98%E5%8E%9F%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8/</guid>
      <description>推荐注册到 Vue 全局 Mixin 里 并在 updated 生命周期中重新运行 const fixInputPaddingMixin = { mounted() { this._fixInput(); }, updated() { this._fixInput(); }, methods: { _fixInput() { let inputs = document.querySelectorAll(&#39;input&#39;); if (inputs.length &amp;gt;= 1) { for (let item of inputs) { item.addEventListener( &#39;focus&#39;, () =&amp;gt; { item.scrollTop = document.body.scrollTop; }, false, ); item.addEventListener( &#39;blur&#39;, () =&amp;gt; { document.body.scrollTop</description>
    </item>
    
    <item>
      <title>哈希表的实现</title>
      <link>https://zhaohuabing.com/post/201904/%E5%93%88%E5%B8%8C%E8%A1%A8%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sun, 21 Apr 2019 04:06:57 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201904/%E5%93%88%E5%B8%8C%E8%A1%A8%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
      <description>哈希表 散列表（Hash table，也叫哈希表），是根据键（Key）而直接访问在内存存储位置的数据结构。也就是说，它通过计算一个关于键值的函数</description>
    </item>
    
    <item>
      <title>前端实现真正的遮罩穿透效果</title>
      <link>https://zhaohuabing.com/post/201904/%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E7%9A%84%E9%81%AE%E7%BD%A9%E7%A9%BF%E9%80%8F%E6%95%88%E6%9E%9C/</link>
      <pubDate>Sun, 14 Apr 2019 02:54:36 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201904/%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0%E7%9C%9F%E6%AD%A3%E7%9A%84%E9%81%AE%E7%BD%A9%E7%A9%BF%E9%80%8F%E6%95%88%E6%9E%9C/</guid>
      <description>后续更新: 事实上大家如果有这个需求可以先去看看 css 里的 clip-path，是个更好的选择！ 最近在工作中要去做一个类似于一些软件游戏里面的引导的</description>
    </item>
    
    <item>
      <title>虚拟滚动的实现(适合大量的列表数据)</title>
      <link>https://zhaohuabing.com/post/201904/%E8%99%9A%E6%8B%9F%E6%BB%9A%E5%8A%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E9%80%82%E5%90%88%E5%A4%A7%E9%87%8F%E7%9A%84%E5%88%97%E8%A1%A8%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Mon, 08 Apr 2019 04:41:32 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201904/%E8%99%9A%E6%8B%9F%E6%BB%9A%E5%8A%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E9%80%82%E5%90%88%E5%A4%A7%E9%87%8F%E7%9A%84%E5%88%97%E8%A1%A8%E6%95%B0%E6%8D%AE/</guid>
      <description>假设我们拥有10w条数据，需要在Web上进行展现，但是如果我们进行实际的渲染就会发现，整个初次渲染的成本的非常之高，用户的体验是非常差的。所</description>
    </item>
    
    <item>
      <title>利用状态机实现一个简单的解释器</title>
      <link>https://zhaohuabing.com/post/201903/%E5%88%A9%E7%94%A8%E7%8A%B6%E6%80%81%E6%9C%BA%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%BC%96%E8%AF%91%E5%99%A8/</link>
      <pubDate>Sun, 31 Mar 2019 06:02:55 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201903/%E5%88%A9%E7%94%A8%E7%8A%B6%E6%80%81%E6%9C%BA%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%BC%96%E8%AF%91%E5%99%A8/</guid>
      <description>有限状态机（英语：finite-state machine，缩写：FSM）又称有限状态自动机，简称状态机，是表示有限个状态以及在这些状态之间的</description>
    </item>
    
    <item>
      <title>浅谈常见编程语言中的垃圾收集算法</title>
      <link>https://zhaohuabing.com/post/201903/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95%E4%B8%8Enode.js%E4%B8%AD%E7%9A%84%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Thu, 21 Mar 2019 00:48:56 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201903/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95%E4%B8%8Enode.js%E4%B8%AD%E7%9A%84%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E6%9C%BA%E5%88%B6/</guid>
      <description>垃圾回收（英语：Garbage Collection，缩写为GC），在计算机科学中是一种自动的存储器管理机制。当一个计算机上的动态存储器不再需</description>
    </item>
    
    <item>
      <title>最长递增子序列 与 0 1 背包问题 [动态规划]</title>
      <link>https://zhaohuabing.com/post/201903/%E7%AE%97%E6%B3%95%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E4%B8%8E01%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 09 Mar 2019 21:25:23 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201903/%E7%AE%97%E6%B3%95%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E4%B8%8E01%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</guid>
      <description>最长递增子序列 在计算机科学中，最长递增子序列（longest increasing subsequence）问题是指，在一个给定的数值序列中，找到一个子序列，使得</description>
    </item>
    
    <item>
      <title>Webpack JS模块化原理</title>
      <link>https://zhaohuabing.com/post/201903/webpackjs%E6%A8%A1%E5%9D%97%E5%8C%96%E5%8E%9F%E7%90%86/</link>
      <pubDate>Fri, 01 Mar 2019 05:17:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201903/webpackjs%E6%A8%A1%E5%9D%97%E5%8C%96%E5%8E%9F%E7%90%86/</guid>
      <description>最近一直在看一些和JS模块化发展历程的东西，正好呢，也想了解一下Webpack在我们背后帮我们做了那些事情，所以就有了今天的这篇文章。 首先我</description>
    </item>
    
    <item>
      <title>从JS的阻塞角度谈谈浏览器渲染原理</title>
      <link>https://zhaohuabing.com/post/201901/%E4%BB%8Ejs%E7%9A%84%E9%98%BB%E5%A1%9E%E8%A7%92%E5%BA%A6%E8%B0%88%E8%B0%88%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/</link>
      <pubDate>Wed, 30 Jan 2019 23:08:15 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201901/%E4%BB%8Ejs%E7%9A%84%E9%98%BB%E5%A1%9E%E8%A7%92%E5%BA%A6%E8%B0%88%E8%B0%88%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/</guid>
      <description>前言 这样，在解析包含的javascript代码之前，页面的内容将完全呈现在浏览器中。而用户也会因为浏览器窗口显示空白页面的时间缩短而感到打</description>
    </item>
    
    <item>
      <title>移动端强制横屏方案</title>
      <link>https://zhaohuabing.com/post/201901/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%BA%E5%88%B6%E6%A8%AA%E5%B1%8F%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 25 Jan 2019 21:54:01 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201901/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%BA%E5%88%B6%E6%A8%AA%E5%B1%8F%E6%96%B9%E6%A1%88/</guid>
      <description>最近工作中要开发一个横屏应用，无论用户是否开启手机旋转功能，进行强制横屏。  这里面也收获了一些经验，在这里和大家分享一下。 首先说明我的方案只</description>
    </item>
    
    <item>
      <title>DOM中的各种XY定位属性以及元素宽高属性</title>
      <link>https://zhaohuabing.com/post/201901/javascript%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8Dxy%E5%AE%9A%E4%BD%8D%E5%B1%9E%E6%80%A7%E4%BB%A5%E5%8F%8A%E5%85%83%E7%B4%A0%E5%AE%BD%E9%AB%98%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Mon, 21 Jan 2019 05:16:10 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201901/javascript%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8Dxy%E5%AE%9A%E4%BD%8D%E5%B1%9E%E6%80%A7%E4%BB%A5%E5%8F%8A%E5%85%83%E7%B4%A0%E5%AE%BD%E9%AB%98%E5%B1%9E%E6%80%A7/</guid>
      <description>我们都用过不少JS中的定位属性，比如scrollTop,clientX等等，但是其实单纯从命名上，我们是很难区分各种属性的含义的，我平时也经</description>
    </item>
    
    <item>
      <title>JavaScript中的 == 相等操作符</title>
      <link>https://zhaohuabing.com/post/201901/javascript%E4%B8%AD%E7%9A%84%E7%9B%B8%E7%AD%89%E6%93%8D%E4%BD%9C%E7%AC%A6/</link>
      <pubDate>Thu, 17 Jan 2019 06:55:05 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201901/javascript%E4%B8%AD%E7%9A%84%E7%9B%B8%E7%AD%89%E6%93%8D%E4%BD%9C%E7%AC%A6/</guid>
      <description>想到这个的主要原因是最近看到了一个非常有趣的题目 [] == ![] 大家有想到结果是什么吗?其实结果是 true，下面是具体的判断链 [] == ![] -&amp;gt; [] == false -&amp;gt; [] == 0 -&amp;gt;</description>
    </item>
    
    <item>
      <title>让 Vue.js 中的 provide / inject 支持响应式</title>
      <link>https://zhaohuabing.com/post/201901/%E8%AE%A9vue.js%E4%B8%AD%E7%9A%84provideinject%E6%94%AF%E6%8C%81%E5%93%8D%E5%BA%94%E5%BC%8F/</link>
      <pubDate>Fri, 11 Jan 2019 22:59:32 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201901/%E8%AE%A9vue.js%E4%B8%AD%E7%9A%84provideinject%E6%94%AF%E6%8C%81%E5%93%8D%E5%BA%94%E5%BC%8F/</guid>
      <description>provide / inject provide / inject Vue.js 2.2.0 版本后新增的 API. 还发出了这样的警告provide 和 inject 主要为高阶插件/组件库提供用例。并不推荐直接用于应用程序代码中。 provide 和 inject 绑定</description>
    </item>
    
    <item>
      <title>初次尝试WebAssembly X Rust</title>
      <link>https://zhaohuabing.com/post/201901/%E5%88%9D%E6%AC%A1%E5%B0%9D%E8%AF%95webassemblyrust/</link>
      <pubDate>Wed, 09 Jan 2019 17:40:27 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201901/%E5%88%9D%E6%AC%A1%E5%B0%9D%E8%AF%95webassemblyrust/</guid>
      <description>这个东西其实我大约一年之前听到了解到，但是一直没有尝试。 正巧最近自己写了个文本校对工具，公司内部的一些人员在用，功能上没有问题，主要就是因为</description>
    </item>
    
    <item>
      <title>Vue.js源码 阅读引导</title>
      <link>https://zhaohuabing.com/post/201901/vue.js%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E6%8C%87%E5%8D%97/</link>
      <pubDate>Fri, 04 Jan 2019 05:36:09 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201901/vue.js%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E6%8C%87%E5%8D%97/</guid>
      <description>前言 最近一直在看 Vue.js 源码，大约花了半个多月的时间阅读，有非常多的感悟，所以在这里希望能和大家分享一下我的成果。 首先我认为 Vue.js 这种牛逼框架的源码绝</description>
    </item>
    
    <item>
      <title>Vue源码中编程技巧记录</title>
      <link>https://zhaohuabing.com/post/201812/vue%E6%BA%90%E7%A0%81%E4%B8%AD%E7%BC%96%E7%A8%8B%E6%89%8B%E6%B3%95/</link>
      <pubDate>Wed, 19 Dec 2018 23:34:45 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201812/vue%E6%BA%90%E7%A0%81%E4%B8%AD%E7%BC%96%E7%A8%8B%E6%89%8B%E6%B3%95/</guid>
      <description>记录下我在阅读过程，觉得非常有学习的必要，非常好的东西。 操作对象属性的引用 &amp;lt;性能-可读性&amp;gt; exp function name(vm) { let data = vm.$options.data // 接下来需要读取dat</description>
    </item>
    
    <item>
      <title>一些Web最佳实践的探索</title>
      <link>https://zhaohuabing.com/post/201812/%E6%88%91%E7%9A%84%E5%89%8D%E7%AB%AF%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5anode%E5%8C%BF%E5%90%8D%E8%AE%BA%E5%9D%9Bdjango/</link>
      <pubDate>Tue, 18 Dec 2018 05:57:25 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201812/%E6%88%91%E7%9A%84%E5%89%8D%E7%AB%AF%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5anode%E5%8C%BF%E5%90%8D%E8%AE%BA%E5%9D%9Bdjango/</guid>
      <description>最近用 Django 整了一个匿名的论坛，包含主题回复点赞，板块，用户等系统，麻雀虽小，但是基本功能还是全的的。但是不对接多可惜啊。 正好这半年多的前端开发</description>
    </item>
    
    <item>
      <title>JavaScript 中 几种快排的实现</title>
      <link>https://zhaohuabing.com/post/201812/%E5%87%A0%E7%A7%8D%E5%BF%AB%E6%8E%92%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Thu, 13 Dec 2018 17:26:52 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201812/%E5%87%A0%E7%A7%8D%E5%BF%AB%E6%8E%92%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
      <description>其实也就是前段时间点阮一峰快排事件，正好去看看大家的实现，在这里记录一下，并写一下注释 实现 1 特点 简单 智力经济 性能较差 加随机化比较方便 只要把取</description>
    </item>
    
    <item>
      <title>利用AOP的思路完成微信公众号网页中的分享来源统计功能</title>
      <link>https://zhaohuabing.com/post/201811/%E5%88%A9%E7%94%A8aop%E7%9A%84%E6%80%9D%E8%B7%AF%E5%AE%8C%E6%88%90%E5%BE%AE%E4%BF%A1spa%E4%B8%AD%E7%9A%84%E6%9D%A5%E6%BA%90%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Fri, 16 Nov 2018 00:20:24 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201811/%E5%88%A9%E7%94%A8aop%E7%9A%84%E6%80%9D%E8%B7%AF%E5%AE%8C%E6%88%90%E5%BE%AE%E4%BF%A1spa%E4%B8%AD%E7%9A%84%E6%9D%A5%E6%BA%90%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD/</guid>
      <description>需求 最近遇到了这么一个需求，我们拥有一个主要容器是微信浏览器的移动端 WebAPP 。他的主要功能是运营一些活动比如说抢红包啦，答题啦，所以我们需要对用户</description>
    </item>
    
    <item>
      <title>微信&#43;vue 任意页面直接通过路由进入并拦截按钮  返回任意页面</title>
      <link>https://zhaohuabing.com/post/201810/%E5%BE%AE%E4%BF%A1vue%E4%BB%BB%E6%84%8F%E9%A1%B5%E9%9D%A2%E7%9B%B4%E6%8E%A5%E9%80%9A%E8%BF%87%E8%B7%AF%E7%94%B1%E8%BF%9B%E5%85%A5%E5%B9%B6%E6%8B%A6%E6%88%AA%E6%8C%89%E9%92%AE%E8%BF%94%E5%9B%9E%E4%BB%BB%E6%84%8F%E9%A1%B5%E9%9D%A2/</link>
      <pubDate>Tue, 30 Oct 2018 00:17:34 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201810/%E5%BE%AE%E4%BF%A1vue%E4%BB%BB%E6%84%8F%E9%A1%B5%E9%9D%A2%E7%9B%B4%E6%8E%A5%E9%80%9A%E8%BF%87%E8%B7%AF%E7%94%B1%E8%BF%9B%E5%85%A5%E5%B9%B6%E6%8B%A6%E6%88%AA%E6%8C%89%E9%92%AE%E8%BF%94%E5%9B%9E%E4%BB%BB%E6%84%8F%E9%A1%B5%E9%9D%A2/</guid>
      <description>先来阐述一下需求 首先我拥有一个详情页面 B 用户可以进入到页面 B 之中分享出去页面 B 但别的用户通过地址直接进入页面 B 这时候 如果用户按了一下返回按钮</description>
    </item>
    
    <item>
      <title>微信webapp分享出去带分享参数 form 导致进入分享无法正常匹配路由 vue</title>
      <link>https://zhaohuabing.com/post/201810/%E5%BE%AE%E4%BF%A1webapp%E5%88%86%E4%BA%AB%E5%87%BA%E5%8E%BB%E5%B8%A6%E5%88%86%E4%BA%AB%E5%8F%82%E6%95%B0form%E5%AF%BC%E8%87%B4%E8%BF%9B%E5%85%A5%E5%88%86%E4%BA%AB%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%8C%B9%E9%85%8D%E8%B7%AF%E7%94%B1vue/</link>
      <pubDate>Tue, 30 Oct 2018 00:17:34 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201810/%E5%BE%AE%E4%BF%A1webapp%E5%88%86%E4%BA%AB%E5%87%BA%E5%8E%BB%E5%B8%A6%E5%88%86%E4%BA%AB%E5%8F%82%E6%95%B0form%E5%AF%BC%E8%87%B4%E8%BF%9B%E5%85%A5%E5%88%86%E4%BA%AB%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%8C%B9%E9%85%8D%E8%B7%AF%E7%94%B1vue/</guid>
      <description>以下是某个单页应用的地址 http://m.cswh.me/dh/#/activity/flagRaisingPolice?act_token=b5f01112731d4c47bc5a7214d17365b2 而在这个页面使用微信的JSAPI进行分享之后，即使你设置了 wx.ready(function() { wx.onMenuShareAppMessage({ link: window.location.href , title: that.config.share_title, imgUrl: uploadURL + that.config.share_icon, desc: that.config.share_text }) wx.onMenuShareTimeline({ link: window.location.href, title: that.config.share_title, imgUrl: uploadURL + that.config.share_icon, desc: that.config.share_text }) })</description>
    </item>
    
    <item>
      <title>贡献你的力量 开发一个Vue组件并发布到npm</title>
      <link>https://zhaohuabing.com/post/201810/%E8%B4%A1%E7%8C%AE%E4%BD%A0%E7%9A%84%E5%8A%9B%E9%87%8F%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAvue%E7%BB%84%E4%BB%B6%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0npm/</link>
      <pubDate>Sun, 28 Oct 2018 22:40:02 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201810/%E8%B4%A1%E7%8C%AE%E4%BD%A0%E7%9A%84%E5%8A%9B%E9%87%8F%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AAvue%E7%BB%84%E4%BB%B6%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0npm/</guid>
      <description>最近在工作中写了一个面向 PC 端的 Vue 滚动组件，关于 PC 端的滚动组件以前也用过一些，但是没有找到特别满意的，所以自己想着把这个组件开源发布出去，希望</description>
    </item>
    
    <item>
      <title>解决微信浏览器中登录后缓存页面导致无法进入Vue.js组件生命周期的问题</title>
      <link>https://zhaohuabing.com/post/201810/%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%99%BB%E5%BD%95%E5%90%8E%E7%BC%93%E5%AD%98%E9%A1%B5%E9%9D%A2%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E9%97%AE%E9%A2%98vue/</link>
      <pubDate>Sat, 20 Oct 2018 23:42:55 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201810/%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%99%BB%E5%BD%95%E5%90%8E%E7%BC%93%E5%AD%98%E9%A1%B5%E9%9D%A2%E5%AF%BC%E8%87%B4%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E9%97%AE%E9%A2%98vue/</guid>
      <description>先来阐述一下我的登录逻辑 进入组件 A 请求接口 api 请求会被拦截器拦截 检查该接口是否需要登录 如果用户未登录 跳转到 login 组件 xx.com/#/login?</description>
    </item>
    
    <item>
      <title>算法实战 文本校对工具 最长公共子序列</title>
      <link>https://zhaohuabing.com/post/201810/%E7%AE%97%E6%B3%95%E5%AE%9E%E6%88%98%E6%96%87%E6%9C%AC%E6%A0%A1%E5%AF%B9%E5%B7%A5%E5%85%B7%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Sat, 20 Oct 2018 06:12:26 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201810/%E7%AE%97%E6%B3%95%E5%AE%9E%E6%88%98%E6%96%87%E6%9C%AC%E6%A0%A1%E5%AF%B9%E5%B7%A5%E5%85%B7%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>前段时间公司里有需求需要一个文本对比工具，我在网上也收集到了一些资料，找到了一些对比 DEMO，仔细考虑之后恍然大悟，这东西不就是最长公共子序</description>
    </item>
    
    <item>
      <title>分享一个Fib数列实现 [reduce]</title>
      <link>https://zhaohuabing.com/post/201810/%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AA%E5%BE%88%E9%85%B7%E7%9A%84fib%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Tue, 16 Oct 2018 00:20:24 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201810/%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AA%E5%BE%88%E9%85%B7%E7%9A%84fib%E5%AE%9E%E7%8E%B0/</guid>
      <description>const fib = n =&amp;gt; Array(n) .fill(0) .reduce(pre =&amp;gt; [pre[1], pre[1] + pre[0]], [0, 1])[0] def fib(n): return reduce(lambda x, n: [x[1], x[0]+x[1]], range(n), [0, 1])[0] 性能也非常不错，迭代实现。从 Py 那边偷学的。 帅爆了有没有</description>
    </item>
    
    <item>
      <title>在微信spa中模拟一个路由堆栈系统</title>
      <link>https://zhaohuabing.com/post/201810/%E5%9C%A8%E5%BE%AE%E4%BF%A1spa%E4%B8%AD%E6%A8%A1%E6%8B%9F%E4%B8%80%E4%B8%AA%E8%B7%AF%E7%94%B1%E5%A0%86%E6%A0%88%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 14 Oct 2018 23:03:23 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201810/%E5%9C%A8%E5%BE%AE%E4%BF%A1spa%E4%B8%AD%E6%A8%A1%E6%8B%9F%E4%B8%80%E4%B8%AA%E8%B7%AF%E7%94%B1%E5%A0%86%E6%A0%88%E7%B3%BB%E7%BB%9F/</guid>
      <description>最近再写一个活动模块，用 vue 写的。这个活动模块需要融合到我们的主项目之中，这就意味着在用路由做其实不太好，活动本身的数据交换比较频繁，用 vuex 太大</description>
    </item>
    
    <item>
      <title>微信浏览器 IOS下 动态音乐播放器无法正常播放的问题</title>
      <link>https://zhaohuabing.com/post/201810/%E5%BE%AE%E4%BF%A1ios%E5%8A%A8%E6%80%81%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%92%AD%E6%94%BE%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 12 Oct 2018 20:16:42 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201810/%E5%BE%AE%E4%BF%A1ios%E5%8A%A8%E6%80%81%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%92%AD%E6%94%BE%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>这个其实算是老生常谈的问题了，IOS 的安全机制导致你无法自动播放音频，很多人用一些触摸事件来模拟用户操作，然后去触发 play 事件。不过今天我的问题</description>
    </item>
    
    <item>
      <title>最小硬币问题 [动态规划]</title>
      <link>https://zhaohuabing.com/post/201810/%E7%AE%97%E6%B3%95%E6%9C%80%E5%B0%8F%E7%A1%AC%E5%B8%81%E9%97%AE%E9%A2%98%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95/</link>
      <pubDate>Fri, 12 Oct 2018 20:16:42 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201810/%E7%AE%97%E6%B3%95%E6%9C%80%E5%B0%8F%E7%A1%AC%E5%B8%81%E9%97%AE%E9%A2%98%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95/</guid>
      <description>问题 假设你当前拥有 3 元 6 元 7 元的硬币 数量为无限。问 假设你需要组合出 18 元，如何使硬币的数量最少 分析：我认为这个问题有点类似于 01 背包问题，很明显</description>
    </item>
    
    <item>
      <title>解决微信小程序 chooselocation在ios下不能稳定触发的问题</title>
      <link>https://zhaohuabing.com/post/201810/%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fchooselocation%E5%9C%A8ios%E4%B8%8B%E4%B8%8D%E8%83%BD%E7%A8%B3%E5%AE%9A%E8%A7%A6%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 02 Oct 2018 23:19:48 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201810/%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fchooselocation%E5%9C%A8ios%E4%B8%8B%E4%B8%8D%E8%83%BD%E7%A8%B3%E5%AE%9A%E8%A7%A6%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>setTimeout(() =&amp;gt; { this.moveToLocation() // chooseLocation的包装函数 }, 150) 在页面onLoad生命周期里 用150ms的延迟来保证触发。具体原因未知，官方文档没有写，</description>
    </item>
    
    <item>
      <title>算法导论笔记 多线程算法</title>
      <link>https://zhaohuabing.com/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%AE%97%E6%B3%95/</link>
      <pubDate>Fri, 28 Sep 2018 05:59:40 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%AE%97%E6%B3%95/</guid>
      <description>多线程算法 相对我来说比较局限，因为 js 是单线程的，所以只做了解，后续如果要用到可以在进行进一步的掌握。 首先来讲，目前的大部分算法都是基于单线程</description>
    </item>
    
    <item>
      <title>算法导论笔记  全点最短路径算法</title>
      <link>https://zhaohuabing.com/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8D%81%E4%BA%8C%E5%85%A8%E7%82%B9%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%AE%97%E6%B3%95/</link>
      <pubDate>Thu, 27 Sep 2018 06:17:11 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8D%81%E4%BA%8C%E5%85%A8%E7%82%B9%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%AE%97%E6%B3%95/</guid>
      <description>复习 在我们之前的学习之中，已经了解三种不同的最短路径算法，他们在某些条件限制下拥有不同的性能 无权图 或者说权重全部相同 可以使用 广度优先搜索(借</description>
    </item>
    
    <item>
      <title>算法导论笔记 动态规划番外篇 堆与优先队列</title>
      <link>https://zhaohuabing.com/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%95%AA%E5%A4%96%E7%AF%87%E5%A0%86%E4%B8%8E%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/</link>
      <pubDate>Sat, 08 Sep 2018 06:00:43 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201809/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%95%AA%E5%A4%96%E7%AF%87%E5%A0%86%E4%B8%8E%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/</guid>
      <description>最近在学习动态规划的时候发现非常需要优先队列的的基础，所以转而先学习一下优先队列算法。这里就找了比较通用的堆来入手了解优先队列。 堆 首先这里的</description>
    </item>
    
    <item>
      <title>算法导论笔记 十一 最短路径算法</title>
      <link>https://zhaohuabing.com/post/201808/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8D%81%E4%B8%80%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%AE%97%E6%B3%95/</link>
      <pubDate>Fri, 31 Aug 2018 05:04:52 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201808/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%8D%81%E4%B8%80%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%AE%97%E6%B3%95/</guid>
      <description>最短路径 最短路径问题是图论研究中的一个经典算法问题，旨在寻找图（由结点和路径组成的）中两结点之间的最短路径。 假设我们拥有一条路径 P P 经过一些</description>
    </item>
    
    <item>
      <title>算法导论笔记 十一 贪心算法 最小生成树</title>
      <link>https://zhaohuabing.com/post/201808/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E5%8D%81%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/</link>
      <pubDate>Tue, 21 Aug 2018 06:08:06 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201808/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E5%8D%81%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/</guid>
      <description>图论 最小生成树需要你掌握基本的图论 在书的附录中有介绍，可以先去看看 设 V 为 有向图（v,e）的顶点集 那么遍历这个图的成本为 O(V ^ 2) 如果一个有向图 G</description>
    </item>
    
    <item>
      <title>Nginx 简单配置转发 显示一个基本的多服务结构</title>
      <link>https://zhaohuabing.com/post/201805/%E4%BD%BF%E7%94%A8nginx%E6%9D%A5%E8%AE%A9%E4%BD%A0%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2%E5%A4%9A%E4%B8%AAweb%E5%BA%94%E7%94%A8/</link>
      <pubDate>Sun, 29 Jul 2018 18:43:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201805/%E4%BD%BF%E7%94%A8nginx%E6%9D%A5%E8%AE%A9%E4%BD%A0%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2%E5%A4%9A%E4%B8%AAweb%E5%BA%94%E7%94%A8/</guid>
      <description>最近捣鼓了不少时间，起初想到要弄这个就是因为 node 直接起 server 的方式有点暴力，因为占用了 80 端口就是真的占用了，很难在用一个 80 端口挂多个 WebServ</description>
    </item>
    
    <item>
      <title>几种排序算法</title>
      <link>https://zhaohuabing.com/post/201805/%E5%B8%B8%E8%A7%81%E7%9A%84%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 29 Jul 2018 18:43:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201805/%E5%B8%B8%E8%A7%81%E7%9A%84%E5%87%A0%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
      <description>最近一直在复习排序算法，也有了不少更深入的解读，拿出来分享一下 冒泡排序 冒泡排序顾名思义，就是将一个个数字冒泡一样的推送到他该去的地方。 冒泡算</description>
    </item>
    
    <item>
      <title>算法导论笔记 一 起步</title>
      <link>https://zhaohuabing.com/post/201805/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B8%80%E8%B5%B7%E6%AD%A5/</link>
      <pubDate>Sun, 29 Jul 2018 18:43:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201805/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B8%80%E8%B5%B7%E6%AD%A5/</guid>
      <description>算法 什么是算法 算法（algorithm），在数学（算学）和计算机科学之中，为任何良定义的具体计算步骤的一个序列，常用于计算、数据处理和自动推</description>
    </item>
    
    <item>
      <title>算法导论笔记 二 分治法</title>
      <link>https://zhaohuabing.com/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%88%86%E6%B2%BB%E6%B3%95/</link>
      <pubDate>Sun, 29 Jul 2018 18:43:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%88%86%E6%B2%BB%E6%B3%95/</guid>
      <description>名词解释 多项式级 即 n^2 n^3 可以被认为是可控的算法复杂度级别 指数级 x^n 级别 非常恐怖 分治法 分治法是一种极为重要的算法设计思想，他的核心思想就是把大问题</description>
    </item>
    
    <item>
      <title>算法导论笔记 八 竞争性分析，自组织表</title>
      <link>https://zhaohuabing.com/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%85%AB%E7%AB%9E%E4%BA%89%E6%80%A7%E5%88%86%E6%9E%90%E8%87%AA%E7%BB%84%E7%BB%87%E8%A1%A8/</link>
      <pubDate>Sun, 29 Jul 2018 18:43:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%85%AB%E7%AB%9E%E4%BA%89%E6%80%A7%E5%88%86%E6%9E%90%E8%87%AA%E7%BB%84%E7%BB%87%E8%A1%A8/</guid>
      <description>自组织表 先来理解两个概念 在线算法与离线算法 在线算法（也成为线上算法）：是一个处理数据的一种方式，他不要求建立数据结构的时候所有数据源全部就绪</description>
    </item>
    
    <item>
      <title>算法导论笔记 四 中位数与顺序统计</title>
      <link>https://zhaohuabing.com/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B8%89%E4%B8%AD%E4%BD%8D%E6%95%B0%E4%B8%8E%E9%A1%BA%E5%BA%8F%E7%BB%9F%E8%AE%A1/</link>
      <pubDate>Sun, 29 Jul 2018 18:43:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B8%89%E4%B8%AD%E4%BD%8D%E6%95%B0%E4%B8%8E%E9%A1%BA%E5%BA%8F%E7%BB%9F%E8%AE%A1/</guid>
      <description>选择算法 所谓的选择算法，其基本规则就是从一个无序的数组中，找到第 i 小的值。 最简单的做法其实就是将数组排序，下标+1 就是它的 i。但是，就算依托</description>
    </item>
    
    <item>
      <title>算法导论笔记 四 二叉搜索树</title>
      <link>https://zhaohuabing.com/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%9B%9B%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link>
      <pubDate>Sun, 29 Jul 2018 18:43:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%9B%9B%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid>
      <description>二叉树 二叉树本身就是非常常见的一种数据结构了，对于这种数据结构当然有一些基本操作 增删改查最大最小等等，一个二叉树的的基本操作都和二叉树的高度</description>
    </item>
    
    <item>
      <title>算法导论笔记 四 全域哈希和完全哈希</title>
      <link>https://zhaohuabing.com/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%9B%9B%E5%85%A8%E5%9F%9F%E5%93%88%E5%B8%8C%E5%92%8C%E5%AE%8C%E5%85%A8%E5%93%88%E5%B8%8C/</link>
      <pubDate>Sun, 29 Jul 2018 18:43:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%9B%9B%E5%85%A8%E5%9F%9F%E5%93%88%E5%B8%8C%E5%92%8C%E5%AE%8C%E5%85%A8%E5%93%88%E5%B8%8C/</guid>
      <description>HASH 算法的缺陷 首先，我们所了解到的所有简单的复杂的 HASH 函数总会拥有一些薄弱点，即输入一些特殊的 key 会很容易返回相同 KEY 导致多条数据插入到同一个槽中，</description>
    </item>
    
    <item>
      <title>算法导论笔记 四 哈希表</title>
      <link>https://zhaohuabing.com/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%93%88%E5%B8%8C%E8%A1%A8/</link>
      <pubDate>Sun, 29 Jul 2018 18:43:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201806/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%93%88%E5%B8%8C%E8%A1%A8/</guid>
      <description>直接寻址 相对于哈希表来说，直接寻址是一种更为简单的方法，即使用一组键集合 K 来代表一组相应的值 U,但是直接寻址受限于一个重要的缺陷，即K可能相</description>
    </item>
    
    <item>
      <title>算法导论 七 平摊分析，表的扩增，势能方法</title>
      <link>https://zhaohuabing.com/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E4%B8%83%E5%B9%B3%E6%91%8A%E5%88%86%E6%9E%90%E8%A1%A8%E7%9A%84%E6%89%A9%E5%A2%9E%E5%8A%BF%E8%83%BD%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 21 Jul 2018 06:00:06 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E4%B8%83%E5%B9%B3%E6%91%8A%E5%88%86%E6%9E%90%E8%A1%A8%E7%9A%84%E6%89%A9%E5%A2%9E%E5%8A%BF%E8%83%BD%E6%96%B9%E6%B3%95/</guid>
      <description>动态表 简单阐述一下动态表的基本思想，先建立一个表，当插入的元素大于表的大小时，建立一个新表（大小为旧表的两倍），并将旧表中的所有数据复制到新</description>
    </item>
    
    <item>
      <title>算法导论笔记 九 动态规划</title>
      <link>https://zhaohuabing.com/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B9%9D%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
      <pubDate>Sat, 21 Jul 2018 06:00:06 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%B9%9D%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid>
      <description>动态规划 动态规划（英语：Dynamic programming，简称DP）是一种在数学、管理科学、计算机科学、经济学和生物信息学中使用的，通过</description>
    </item>
    
    <item>
      <title>算法导论笔记 五 扩充的数据结构、动态有序统计和区间树</title>
      <link>https://zhaohuabing.com/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%94%E6%89%A9%E5%85%85%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%8A%A8%E6%80%81%E6%9C%89%E5%BA%8F%E7%BB%9F%E8%AE%A1%E5%92%8C%E5%8C%BA%E9%97%B4%E6%A0%91/</link>
      <pubDate>Sat, 21 Jul 2018 06:00:06 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E4%BA%94%E6%89%A9%E5%85%85%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%8A%A8%E6%80%81%E6%9C%89%E5%BA%8F%E7%BB%9F%E8%AE%A1%E5%92%8C%E5%8C%BA%E9%97%B4%E6%A0%91/</guid>
      <description>这一章的主要内容其实是如何利用现有的数据结构来扩充成一个新的数据结构，并让这种新的数据结构具有一些神奇的特性。 动态顺序统计 我们在前面就学习了</description>
    </item>
    
    <item>
      <title>算法导论笔记 六 跳跃表</title>
      <link>https://zhaohuabing.com/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%85%AD%E8%B7%B3%E8%B7%83%E8%A1%A8/</link>
      <pubDate>Sat, 21 Jul 2018 06:00:06 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201807/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%E5%85%AD%E8%B7%B3%E8%B7%83%E8%A1%A8/</guid>
      <description>跳跃表（skiplists） 跳跃表是一种增强版的链表，他能在O(lgn)的时间内完成搜索。 首先，我们熟知的链表本身具有的特性就是容易删除与增</description>
    </item>
    
    <item>
      <title>React-Native 达达看书阅读器</title>
      <link>https://zhaohuabing.com/post/201803/reactnative%E8%BE%BE%E8%BE%BE%E7%9C%8B%E4%B9%A6%E9%98%85%E8%AF%BB%E5%99%A8/</link>
      <pubDate>Sun, 29 Apr 2018 07:40:56 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201803/reactnative%E8%BE%BE%E8%BE%BE%E7%9C%8B%E4%B9%A6%E9%98%85%E8%AF%BB%E5%99%A8/</guid>
      <description>What is React Native? React Native (简称RN)是Facebook于2015年4月开源的跨平台移动应用开发框架，是Facebook早先开源的UI框架 React 在原生移动应用</description>
    </item>
    
    <item>
      <title>使用React快速开发Chrome扩展程序</title>
      <link>https://zhaohuabing.com/post/201804/%E4%BD%BF%E7%94%A8react%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91chrome%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Sun, 29 Apr 2018 07:40:56 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201804/%E4%BD%BF%E7%94%A8react%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91chrome%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F/</guid>
      <description>首先要说明的是这个文章其实属于翻译或者说转述，我是从google上搜索到了这篇原文，并且用它的构建流程成功开发了一个扩展，很爽，速度很快，五</description>
    </item>
    
    <item>
      <title>为React-native添加redux</title>
      <link>https://zhaohuabing.com/post/201802/%E4%B8%BAreactnative%E6%B7%BB%E5%8A%A0redux/</link>
      <pubDate>Mon, 26 Feb 2018 05:20:15 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201802/%E4%B8%BAreactnative%E6%B7%BB%E5%8A%A0redux/</guid>
      <description>其实在网上随便一搜索 react 加 redux 的可以说特别的多，但是为 React-native 加的还真的很少，所以我在实践完成之后就打算记录一下在 RN 中如何启用 redux，其实和 React 的用</description>
    </item>
    
    <item>
      <title>利用git的submodule(子模块) 来管理项目</title>
      <link>https://zhaohuabing.com/post/201802/%E5%88%A9%E7%94%A8git%E7%9A%84submodule%E5%AD%90%E6%A8%A1%E5%9D%97%E6%9D%A5%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Mon, 26 Feb 2018 05:20:15 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201802/%E5%88%A9%E7%94%A8git%E7%9A%84submodule%E5%AD%90%E6%A8%A1%E5%9D%97%E6%9D%A5%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE/</guid>
      <description>我相信很多人都有过在一个项目中引入一个乃至多个库的经历，但是如果我们的主项目使用git来进行版本控制并且使用单纯的add&amp;amp;commi</description>
    </item>
    
    <item>
      <title>Chrome扩展：电影资源提醒</title>
      <link>https://zhaohuabing.com/post/201712/chrome%E6%89%A9%E5%B1%95%E7%94%B5%E5%BD%B1%E8%B5%84%E6%BA%90%E6%8F%90%E9%86%92/</link>
      <pubDate>Wed, 10 Jan 2018 04:36:50 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201712/chrome%E6%89%A9%E5%B1%95%E7%94%B5%E5%BD%B1%E8%B5%84%E6%BA%90%E6%8F%90%E9%86%92/</guid>
      <description>预览 其实这个插件很早以前就完成了，但是实现的逻辑完全不一样，直接AJAX获取然后插入到插件页面中，问题就在最近Chrome版本一升级炸了，和</description>
    </item>
    
    <item>
      <title>在Vue2.5中使用typeScript</title>
      <link>https://zhaohuabing.com/post/201801/%E5%9C%A8vue2.5%E4%B8%AD%E4%BD%BF%E7%94%A8typescript/</link>
      <pubDate>Wed, 10 Jan 2018 04:36:50 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201801/%E5%9C%A8vue2.5%E4%B8%AD%E4%BD%BF%E7%94%A8typescript/</guid>
      <description>本文的环境依旧是由Vue-cli工具初始化的。 安装 npm install typescript ts-loader --save-dev 配置 首先在webpack.base.config.js中设置一下基本的Loade</description>
    </item>
    
    <item>
      <title>转制一个Todo App 为 PWA 应用</title>
      <link>https://zhaohuabing.com/post/201801/%E8%BD%AC%E5%88%B6%E4%B8%80%E4%B8%AAtodoapp%E4%B8%BApwa%E5%BA%94%E7%94%A8/</link>
      <pubDate>Wed, 10 Jan 2018 00:33:58 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201801/%E8%BD%AC%E5%88%B6%E4%B8%80%E4%B8%AAtodoapp%E4%B8%BApwa%E5%BA%94%E7%94%A8/</guid>
      <description>What is PWA? PWA全称Progress Web Application，也就是渐进式web应用，是由Google在2015年就提出的概念。它本质上是一个普</description>
    </item>
    
    <item>
      <title>CSS3 transform 实现星球大战开场动画效果</title>
      <link>https://zhaohuabing.com/post/201801/css3transform%E5%AE%9E%E7%8E%B0%E6%98%9F%E7%90%83%E5%A4%A7%E6%88%98%E5%BC%80%E5%9C%BA%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/</link>
      <pubDate>Sun, 07 Jan 2018 08:14:18 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201801/css3transform%E5%AE%9E%E7%8E%B0%E6%98%9F%E7%90%83%E5%A4%A7%E6%88%98%E5%BC%80%E5%9C%BA%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/</guid>
      <description>灵感来自于segmentfault的一个页面，在看到之后仔细研究了一下transform的3d变形效果。 其实css3的3d效果也是伪3d,依</description>
    </item>
    
    <item>
      <title>利用websocket技术实现一个俄罗斯方块对战游戏</title>
      <link>https://zhaohuabing.com/post/201712/%E5%88%A9%E7%94%A8websocket%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97%E5%AF%B9%E6%88%98%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Fri, 15 Dec 2017 09:00:23 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201712/%E5%88%A9%E7%94%A8websocket%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97%E5%AF%B9%E6%88%98%E6%B8%B8%E6%88%8F/</guid>
      <description>预览 技术栈 主要利用了websocket，由于ws天生是可以跨域的，所以我将静态页面部署在了gh-page上，而负责后端交互的部分我放在了我的</description>
    </item>
    
    <item>
      <title>解决移动端浏览器无法调用audio的play方法</title>
      <link>https://zhaohuabing.com/post/201712/%E8%A7%A3%E5%86%B3%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E6%97%A0%E6%B3%95%E8%B0%83%E7%94%A8audio%E7%9A%84play%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 15 Dec 2017 09:00:23 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201712/%E8%A7%A3%E5%86%B3%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E6%97%A0%E6%B3%95%E8%B0%83%E7%94%A8audio%E7%9A%84play%E6%96%B9%E6%B3%95/</guid>
      <description>最近在写一个移动端音乐播放器的时候遇到一个非常难受的问题，在PC可以正常调用audio标签的play方法，在在手机移动端上的绝大部分浏览器都</description>
    </item>
    
    <item>
      <title>ECMAScript6 入门</title>
      <link>https://zhaohuabing.com/post/201706/ecmascript6%E5%85%A5%E9%97%A8/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201706/ecmascript6%E5%85%A5%E9%97%A8/</guid>
      <description>最近尝试了解一些函数式编程(Function program)的东西，但是很多的语法都用到了ES6，所以先开始学习一下ES6吧。特别是prom</description>
    </item>
    
    <item>
      <title>gulp&#43;webpack&#43;babel&#43;css压缩模块 实现自动构建工具</title>
      <link>https://zhaohuabing.com/post/201707/gulpwebpackbabelcss%E5%8E%8B%E7%BC%A9%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201707/gulpwebpackbabelcss%E5%8E%8B%E7%BC%A9%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/</guid>
      <description>第一步 环境搭建流程 以下均按照流程 创建工程目录 C:. ├─.idea ├─app //开发目录 │ ├─.idea │ ├─css │ ├─doc │ ├─img │ ├─</description>
    </item>
    
    <item>
      <title>Javascript 中的函数式编程</title>
      <link>https://zhaohuabing.com/post/201711/js%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201711/js%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/</guid>
      <description>函数式编程 作为一种越来越重要的编程泛型，我在学习完SICP之后也见识到了他极为强大的抽象能力，但是如何把函数式编程中的技巧合理合适的运用到J</description>
    </item>
    
    <item>
      <title>Javascript 设计模式</title>
      <link>https://zhaohuabing.com/post/201707/javascript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201707/javascript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>模式可以认为是前人对于编程问题的解决方案，而所有的设计模式的主题都是分离多变的部分和恒定的部分。 单例模式 单例模式值得就是只有一个实例的模式。</description>
    </item>
    
    <item>
      <title>Javascript 高阶函数</title>
      <link>https://zhaohuabing.com/post/201707/javascript%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E5%BA%94%E7%94%A8/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201707/javascript%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0%E5%BA%94%E7%94%A8/</guid>
      <description>最近在看一些关于设计模式的书。对高阶函数的应用方面做一些记录 AOP AOP意为面向切面编程，主要思想就是把那些跟业务逻辑无关的部分抽离出来，比如日</description>
    </item>
    
    <item>
      <title>JavaScript数据结构 二叉树</title>
      <link>https://zhaohuabing.com/post/201706/javascript%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201706/javascript%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>JavaScript 二叉树 最近在学习一些数据结构方面的知识，稍作记录。 二叉树的创建 首先二叉树是一种树形的结构，那么他的特点就是每个构建树的节点最多只有两个子节</description>
    </item>
    
    <item>
      <title>LOL模拟抽奖</title>
      <link>https://zhaohuabing.com/post/201707/lol%E6%A8%A1%E6%8B%9F%E6%8A%BD%E5%A5%96/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201707/lol%E6%A8%A1%E6%8B%9F%E6%8A%BD%E5%A5%96/</guid>
      <description>最近试着写了一个LOL模拟抽奖的页面，大家可以随便玩玩，也没任何广告。 删除了一小部分失效的英雄，皮肤部分没动。 所有英雄皮肤的几率都是正好平分</description>
    </item>
    
    <item>
      <title>markdown pad 2 激活码</title>
      <link>https://zhaohuabing.com/post/201708/markdownpad2pro%E6%BF%80%E6%B4%BB%E7%A0%81/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201708/markdownpad2pro%E6%BF%80%E6%B4%BB%E7%A0%81/</guid>
      <description>邮箱： Soar360@live.com 授权秘钥： GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==</description>
    </item>
    
    <item>
      <title>Vue.js slot 初探</title>
      <link>https://zhaohuabing.com/post/201709/vueslot%E4%BD%BF%E7%94%A8%E5%A6%82%E4%BD%95%E5%AF%B9%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201709/vueslot%E4%BD%BF%E7%94%A8%E5%A6%82%E4%BD%95%E5%AF%B9%E5%85%B6%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E6%93%8D%E4%BD%9C/</guid>
      <description>假设你拥有父组件A,子轮播图组件B，你想在用A中使用B， 假设你使用slot对其进行模板的传递 &amp;lt;div class=&amp;quot;slider-wrapper&amp;quot;&amp;gt; &amp;lt;slider&amp;gt; &amp;lt;div v-for=&amp;quot;item of slider&amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;&amp;lt;img :src=&amp;quot;item.pic&amp;quot; alt=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt; // slot &amp;lt;/slider&amp;gt; &amp;lt;/div&amp;gt; // 但是轮播必然牵</description>
    </item>
    
    <item>
      <title>Vue.js TODO APP</title>
      <link>https://zhaohuabing.com/post/201708/%E7%94%A8vue%E5%86%99%E4%B8%AA%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84todoapp/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201708/%E7%94%A8vue%E5%86%99%E4%B8%AA%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84todoapp/</guid>
      <description>展示 为了更好的学习vue，所以找个一个todoList的渲染图，动手制作一个todoApp。因为渲染图是纯移动端的，所以我的布局逻辑优化都是</description>
    </item>
    
    <item>
      <title>使用socket.io实现极简即时通讯</title>
      <link>https://zhaohuabing.com/post/201709/%E4%BD%BF%E7%94%A8socket.io%E5%AE%9E%E7%8E%B0%E6%9E%81%E7%AE%80%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201709/%E4%BD%BF%E7%94%A8socket.io%E5%AE%9E%E7%8E%B0%E6%9E%81%E7%AE%80%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/</guid>
      <description>展示 代码 两份文件，client server //test.html &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1&amp;quot;&amp;gt; &amp;lt;script src=&amp;quot;https://cdn.bootcss.com/socket.io/2.0.3/socket.io.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;input&amp;quot;&amp;gt; &amp;lt;button id=&amp;quot;sendMess&amp;quot;&amp;gt;send&amp;lt;/button&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt; let socket = io(&amp;quot;ws://localhost:4500/&amp;quot;) //show APi function showMessage(str,type){ let box = document.createElement(&amp;quot;div&amp;quot;) box.innerHTML = str if(type === &amp;quot;enter&amp;quot;){ box.style.color = &amp;quot;#33B5FF&amp;quot;; }else if(type === &amp;quot;leave&amp;quot;){ box.style.color === &amp;quot;red&amp;quot; }else{</description>
    </item>
    
    <item>
      <title>利用 require.js 实现组件化开发</title>
      <link>https://zhaohuabing.com/post/201706/%E5%88%A9%E7%94%A8require.js%E5%AE%9E%E7%8E%B0%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201706/%E5%88%A9%E7%94%A8require.js%E5%AE%9E%E7%8E%B0%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/</guid>
      <description>最近使用require尝试开发了一个弹窗组件，所以把一些组件化的思想和过程记录下来。 使用的库 jQuery require jQueryUI 实现的功能 三种流行的弹窗 带有宽高位置设置 可</description>
    </item>
    
    <item>
      <title>利用gh-pages展示自己的DEMO</title>
      <link>https://zhaohuabing.com/post/201706/%E5%88%A9%E7%94%A8ghpages%E5%B1%95%E7%A4%BA%E8%87%AA%E5%B7%B1%E7%9A%84demo/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201706/%E5%88%A9%E7%94%A8ghpages%E5%B1%95%E7%A4%BA%E8%87%AA%E5%B7%B1%E7%9A%84demo/</guid>
      <description>之前一直都是用的git-demo-preview来展示预览自己做的DEMO和工程，但是有很多不足 会加载很多无关的JS 访问速度不够理想 所以最近</description>
    </item>
    
    <item>
      <title>利用require组件化开发侧边栏和轮播图</title>
      <link>https://zhaohuabing.com/post/201706/%E5%88%A9%E7%94%A8require%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%92%8C%E8%BD%AE%E6%92%AD%E5%9B%BE/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201706/%E5%88%A9%E7%94%A8require%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%92%8C%E8%BD%AE%E6%92%AD%E5%9B%BE/</guid>
      <description>最近学习require趁热打铁写了两个非常常见的组件，一个是侧边栏的插件，一个是轮播图或者叫他选项卡。不得不说组件化开发非常的清晰，便于管理</description>
    </item>
    
    <item>
      <title>对DOM样式操作浏览器前缀做抽象包装</title>
      <link>https://zhaohuabing.com/post/201710/%E5%AF%B9dom%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%89%8D%E7%BC%80%E5%81%9A%E6%8A%BD%E8%B1%A1%E5%8C%85%E8%A3%85/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201710/%E5%AF%B9dom%E6%A0%B7%E5%BC%8F%E6%93%8D%E4%BD%9C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%89%8D%E7%BC%80%E5%81%9A%E6%8A%BD%E8%B1%A1%E5%8C%85%E8%A3%85/</guid>
      <description>我们在做一些DOM操作的时候，常常利用到修改样式来进行一个动画，但是这种用到的样式属性往往是有前缀的。而在CSS中其实是有自动prefix的</description>
    </item>
    
    <item>
      <title>我的Webpack实战</title>
      <link>https://zhaohuabing.com/post/201708/%E6%88%91%E7%9A%84webpack%E5%AE%9E%E6%88%98/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201708/%E6%88%91%E7%9A%84webpack%E5%AE%9E%E6%88%98/</guid>
      <description>关于Webpack Webpack 是一个前端资源加载/打包工具。 它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的规则生成对应的静态资源。 一份基</description>
    </item>
    
    <item>
      <title>改写Node.js中的回调为Promise</title>
      <link>https://zhaohuabing.com/post/201707/%E4%BD%BF%E7%94%A8promise%E6%9D%A5%E6%94%B9%E5%86%99node%E4%BC%A0%E7%BB%9F%E7%9A%84%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201707/%E4%BD%BF%E7%94%A8promise%E6%9D%A5%E6%94%B9%E5%86%99node%E4%BC%A0%E7%BB%9F%E7%9A%84%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/</guid>
      <description>传统的回调 首先让我们看一下在NODE中传统的异步读取文件 let fs = require(&amp;quot;fs&amp;quot;) fs.readFile(&amp;quot;./justtest.html&amp;quot;,&amp;quot;utf-8&amp;quot;,(err,data)=&amp;gt;{ console.log(data); }) //普通的回调方式处理异步 我们可以看到，读取文件之后的回调被添加到了参</description>
    </item>
    
    <item>
      <title>组件化开发WebAPP(gulp&#43;webpack&#43;bebal&#43;es6)</title>
      <link>https://zhaohuabing.com/post/201707/%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91webappgulpwebpackbebales6/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201707/%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91webappgulpwebpackbebales6/</guid>
      <description>介绍 实现了那些功能 构建工具 最近glup玩的比较多，所以自己实现了一个自动构建的环境他的主要目的是从app目录的那些开发文件部署到server</description>
    </item>
    
    <item>
      <title>节流与防抖函数</title>
      <link>https://zhaohuabing.com/post/201711/%E7%AE%97%E6%B3%95%E9%9B%86%E5%90%88%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0shufflejsonp%E8%BD%AC%E6%8D%A2json%E5%AF%B9%E8%B1%A1%E6%B7%B1%E5%BA%A6%E5%85%8B%E9%9A%86/</link>
      <pubDate>Fri, 24 Nov 2017 05:27:33 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201711/%E7%AE%97%E6%B3%95%E9%9B%86%E5%90%88%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0shufflejsonp%E8%BD%AC%E6%8D%A2json%E5%AF%B9%E8%B1%A1%E6%B7%B1%E5%BA%A6%E5%85%8B%E9%9A%86/</guid>
      <description>记录一下最近接触到的算法 节流与防抖 这两个函数都用于限制函数的执行。 debounce 函数防抖就是让某个函数在上一次执行后，满足等待某个时间内不再触发此函数后</description>
    </item>
    
    <item>
      <title>SICP 计算机程序的构造与解释笔记</title>
      <link>https://zhaohuabing.com/post/201711/sicp%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9E%84%E9%80%A0%E4%B8%8E%E8%A7%A3%E9%87%8A%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 13 Nov 2017 00:20:53 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201711/sicp%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9E%84%E9%80%A0%E4%B8%8E%E8%A7%A3%E9%87%8A%E7%AC%94%E8%AE%B0/</guid>
      <description>前言 最近一直在学习SICP这本书，基本上结合书与视频一起学习，可以说这真的是一本奇书，他从高阶抽象开始到介绍DSL乃至流，最后又开始讨论la</description>
    </item>
    
    <item>
      <title>利用Github的Webhooks自动构建博客</title>
      <link>https://zhaohuabing.com/post/201906/%E5%88%A9%E7%94%A8github%E7%9A%84webhooks%E8%83%BD%E5%8A%9B%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhaohuabing.com/post/201906/%E5%88%A9%E7%94%A8github%E7%9A%84webhooks%E8%83%BD%E5%8A%9B%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2/</guid>
      <description>直接放 github 成品地址 code 简单来说就是当github 仓库被提交的时候，github 就会访问你填写一个后台地址，你就可以通过这个触发器做一些事情。 为了</description>
    </item>
    
  </channel>
</rss>